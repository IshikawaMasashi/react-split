{"version":3,"sources":["webpack://ReactSplit/webpack/universalModuleDefinition","webpack://ReactSplit/webpack/bootstrap","webpack://ReactSplit/external \"react\"","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/expression.js","webpack://ReactSplit/./src/components/Split.tsx","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/strength.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useEffectOnce/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/constraint.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/maptype.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/variable.js","webpack://ReactSplit/./src/index.ts","webpack://ReactSplit/./src/utils/assert.ts","webpack://ReactSplit/./src/utils/toCSSPx.ts","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/cassowary/lib/solver.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useActive/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useClickOutside/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useFocus/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useHover/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useMousePosition/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useResizeObserver/index.js","webpack://ReactSplit/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://ReactSplit/(webpack)/buildin/global.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useTouch/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useWindowResize/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useMount/index.js","webpack://ReactSplit/./node_modules/@ishikawa_masashi/react-hooks/lib/useUnmount/index.js","webpack://ReactSplit/./src/components/SplitPane.tsx","webpack://ReactSplit/./src/components/Resizer.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","maptype_1","variable_1","Expression","parsed","parseArgs","arguments","this","_terms","terms","_constant","constant","result","size","pair","itemAt","first","second","plus","minus","multiply","coefficient","divide","isConstant","toString","array","map","join","args","createMap","length","item","Variable","setDefault","j","k","terms2","termPair","Array","Error","value2","SplitOrientation","props","setState","children","orientation","onChange","defaultSplit","containerRef","useRef","indexRef","solverRef","varsRef","splitsRef","width","height","isHorizontal","useMemo","Horizontal","forceUpdate","useEffect","document","addEventListener","onResizerMouseMove","onResizerMouseUp","removeEventListener","onResize","useCallback","newSplits","canonicalizeSplits","setupSolver","getContainerSize","querySolver","current","count","newChildren","documentElement","style","pointerEvents","slice","e","vars","isVertical","Vertical","rect","getBoundingClientRect","mouseOffset","clientX","left","clientY","top","index","solver","suggestValue","updateVariables","preventDefault","splits","React","Children","containerSize","info","assign","push","min","max","Solver","addEditVariable","Strength","strong","cn","Constraint","Operator","Eq","addConstraint","right","Ge","Le","weak","suggestVarValues","x","y","className","ref","flexDirection","forEach","child","flexBasis","Math","round","flex","onMouseDown","ev","varilable","removeEditVariable","medium","onResizerMouseDown","a","b","w","clip","required","react_1","default","effect","expression_1","strength_1","expression","operator","rhs","strength","_id","CnId","_operator","_strength","undefined","_expression","id","op","IndexedMap","empty","contains","find","Pair","insert","erase","last","pop","copy","_value","_context","VarId","_name","setName","context","setContext","setValue","toJSON","message","__export","SymbolType","constraint_1","_cnMap","_rowMap","_varMap","_editMap","_infeasibleRows","_objective","Row","_artificial","_idTick","createConstraint","lhs","constraint","data","_createRow","row","tag","subject","_chooseSubject","type","Invalid","allDummies","nearZero","marker","_addWithArtificialVariable","solveFor","_substitute","_optimize","removeConstraint","cnPair","_removeConstraintEffects","rowPair","leaving","_getMarkerLeavingSymbol","solveForEx","hasConstraint","variable","expr","editPair","hasEditVariable","rows","delta","add","_dualOptimize","other","rowPair_1","coeff","coefficientFor","External","_getVarSymbol","_this","_makeSymbol","symbol","basicPair","insertRow","insertSymbol","objective","INVALID_SYMBOL","slack","Slack","error","errplus","errminus","dummy","Dummy","reverseSign","cells","art","success","basicRow","entering","_anyPivotableSymbol","removeSymbol","substitute","_getEnteringSymbol","_getLeavingSymbol","infeasible","_getDualEnteringSymbol","ratio","Number","MAX_VALUE","found","temp","temp_ratio","dmax","r1","r2","invalid","third","_removeMarkerEffects","_type","_cellMap","theCopy","index_1","useActive","index_2","useClickOutside","index_3","useFocus","index_4","useHover","index_5","useMousePosition","index_6","useResizeObserver","index_7","useTouch","index_8","useWindowResize","index_9","useEffectOnce","index_10","useMount","index_11","useUnmount","_a","useState","isActive","setActive","onMouseUp","refs","onClickOutside","isOutside","target","every","Boolean","mousedown","mouseup","__importDefault","mod","isFocused","setFocused","onFocus","onBlur","isHovered","setHovered","onMouseEnter","onMouseLeave","setX","_b","setY","onMouseMove","nativeEvent","offsetX","offsetY","resize_observer_polyfill_1","setWidth","setHeight","useLayoutEffect","resizeObserver","entries","contentRect","observe","disconnect","MapShim","Map","getIndex","arr","some","entry","class_1","__entries__","configurable","set","delete","splice","has","clear","callback","ctx","_i","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","propertyName","getInstance","instance_","defineConfigurable","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","vertPad","bottom","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","WeakMap","ResizeObserver","method","apply","g","isTouched","setTouched","onTouchStart","onTouchEnd","innerWidth","innerHeight","resize","useEffectOnce_1","fn","fnRef","resizerClassName"],"mappings":"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","file":"ReactSplit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactSplit\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactSplit\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar maptype_1 = require(\"./maptype\");\r\nvar variable_1 = require(\"./variable\");\r\n/**\r\n * An expression of variable terms and a constant.\r\n *\r\n * The constructor accepts an arbitrary number of parameters,\r\n * each of which must be one of the following types:\r\n *  - number\r\n *  - Variable\r\n *  - Expression\r\n *  - 2-tuple of [number, Variable|Expression]\r\n *\r\n * The parameters are summed. The tuples are multiplied.\r\n *\r\n * @class\r\n * @param {...(number|Variable|Expression|Array)} args\r\n */\r\nvar Expression = /** @class */ (function () {\r\n    function Expression() {\r\n        var parsed = parseArgs(arguments);\r\n        this._terms = parsed.terms;\r\n        this._constant = parsed.constant;\r\n    }\r\n    /**\r\n     * Returns the mapping of terms in the expression.\r\n     *\r\n     * This *must* be treated as const.\r\n     * @private\r\n     */\r\n    Expression.prototype.terms = function () {\r\n        return this._terms;\r\n    };\r\n    /**\r\n     * Returns the constant of the expression.\r\n     * @private\r\n     */\r\n    Expression.prototype.constant = function () {\r\n        return this._constant;\r\n    };\r\n    /**\r\n     * Returns the computed value of the expression.\r\n     *\r\n     * @private\r\n     * @return {Number} computed value of the expression\r\n     */\r\n    Expression.prototype.value = function () {\r\n        var result = this._constant;\r\n        for (var i = 0, n = this._terms.size(); i < n; i++) {\r\n            var pair = this._terms.itemAt(i);\r\n            result += pair.first.value() * pair.second;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new Expression by adding a number, variable or expression\r\n     * to the expression.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to add.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.plus = function (value) {\r\n        return new Expression(this, value);\r\n    };\r\n    /**\r\n     * Creates a new Expression by substracting a number, variable or expression\r\n     * from the expression.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to substract.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.minus = function (value) {\r\n        return new Expression(this, typeof value === 'number' ? -value : [-1, value]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by multiplying with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to multiply with.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.multiply = function (coefficient) {\r\n        return new Expression([coefficient, this]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by dividing with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to divide by.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.divide = function (coefficient) {\r\n        return new Expression([1 / coefficient, this]);\r\n    };\r\n    Expression.prototype.isConstant = function () {\r\n        return this._terms.size() == 0;\r\n    };\r\n    Expression.prototype.toString = function () {\r\n        var result = this._terms.array\r\n            .map(function (pair) {\r\n            return pair.second + '*' + pair.first.toString();\r\n        })\r\n            .join(' + ');\r\n        if (!this.isConstant() && this._constant !== 0) {\r\n            result += ' + ';\r\n        }\r\n        result += this._constant;\r\n        return result;\r\n    };\r\n    return Expression;\r\n}());\r\nexports.Expression = Expression;\r\n/**\r\n * An internal argument parsing function.\r\n * @private\r\n */\r\nfunction parseArgs(args) {\r\n    var constant = 0.0;\r\n    var factory = function () { return 0.0; };\r\n    var terms = maptype_1.createMap();\r\n    for (var i = 0, n = args.length; i < n; ++i) {\r\n        var item = args[i];\r\n        if (typeof item === 'number') {\r\n            constant += item;\r\n        }\r\n        else if (item instanceof variable_1.Variable) {\r\n            terms.setDefault(item, factory).second += 1.0;\r\n        }\r\n        else if (item instanceof Expression) {\r\n            constant += item.constant();\r\n            var terms2 = item.terms();\r\n            for (var j = 0, k = terms2.size(); j < k; j++) {\r\n                var termPair = terms2.itemAt(j);\r\n                terms.setDefault(termPair.first, factory).second += termPair.second;\r\n            }\r\n        }\r\n        else if (item instanceof Array) {\r\n            if (item.length !== 2) {\r\n                throw new Error('array must have length 2');\r\n            }\r\n            var value = item[0];\r\n            var value2 = item[1];\r\n            if (typeof value !== 'number') {\r\n                throw new Error('array item 0 must be a number');\r\n            }\r\n            if (value2 instanceof variable_1.Variable) {\r\n                terms.setDefault(value2, factory).second += value;\r\n            }\r\n            else if (value2 instanceof Expression) {\r\n                constant += value2.constant() * value;\r\n                var terms2 = value2.terms();\r\n                for (var j = 0, k = terms2.size(); j < k; j++) {\r\n                    var termPair = terms2.itemAt(j);\r\n                    terms.setDefault(termPair.first, factory).second +=\r\n                        termPair.second * value;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error('array item 1 must be a variable or expression');\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('invalid Expression argument: ' + item);\r\n        }\r\n    }\r\n    return { terms: terms, constant: constant };\r\n}\r\n//# sourceMappingURL=expression.js.map","import * as React from 'react';\r\nimport { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\n\r\nimport assert from '../utils/assert';\r\n\r\nimport toCSSPx from '../utils/toCSSPx';\r\nimport {\r\n  Solver,\r\n  Variable,\r\n  Strength,\r\n  Constraint,\r\n  Operator\r\n} from '@ishikawa_masashi/cassowary';\r\nimport { useResizeObserver } from '@ishikawa_masashi/react-hooks';\r\n\r\nimport SplitPane from './SplitPane';\r\nimport Resizer from './Resizer';\r\n\r\nexport enum SplitOrientation {\r\n  Horizontal,\r\n  Vertical\r\n}\r\n\r\nexport interface SplitInfo {\r\n  min?: number;\r\n  max?: number;\r\n  value?: number;\r\n  resize?: 'fixed' | 'stretch';\r\n}\r\n\r\ntype Props = {\r\n  orientation: SplitOrientation;\r\n  onChange?: (splits: SplitInfo[]) => void;\r\n  splits: SplitInfo[];\r\n  defaultSplit?: SplitInfo;\r\n  children: React.ReactNode;\r\n  name?: string; // TODO: Remove, for debugging.\r\n};\r\n\r\nexport default function Split(props: Props) {\r\n  const {\r\n    children,\r\n    orientation,\r\n    onChange = (splits: SplitInfo[]) => {},\r\n    defaultSplit\r\n  } = props;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const indexRef = useRef(-1);\r\n  const solverRef = useRef<Solver>();\r\n  const varsRef = useRef<Variable[]>();\r\n  const splitsRef = useRef<SplitInfo[]>([]);\r\n\r\n  const [width, height] = useResizeObserver(containerRef);\r\n\r\n  const isHorizontal = useMemo(\r\n    () => orientation === SplitOrientation.Horizontal,\r\n    [orientation]\r\n  );\r\n\r\n  const useForceUpdate = () => {\r\n    const [, setState] = useState();\r\n    return () => setState({});\r\n  };\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', onResizerMouseMove as any);\r\n    document.addEventListener('mouseup', onResizerMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', onResizerMouseMove as any);\r\n      document.removeEventListener('mouseup', onResizerMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  const onResize = useCallback(() => {\r\n    if (width && height) {\r\n      onResizerMouseUp();\r\n      const newSplits = canonicalizeSplits();\r\n      setupSolver(newSplits, getContainerSize());\r\n      querySolver(newSplits);\r\n      splitsRef.current = newSplits;\r\n\r\n      onChange(newSplits);\r\n    }\r\n  }, [width, height]);\r\n\r\n  useEffect(() => {\r\n    onResize();\r\n  }, [width, height]);\r\n\r\n  useEffect(() => {\r\n    onResizerMouseUp();\r\n    const newSplits = canonicalizeSplits();\r\n    setupSolver(newSplits, getContainerSize());\r\n    querySolver(newSplits);\r\n    splitsRef.current = newSplits;\r\n    forceUpdate();\r\n  }, [props]);\r\n\r\n  const onResizerMouseDown = (i: number) => {\r\n    indexRef.current = i;\r\n    const index = indexRef.current;\r\n    const vars = varsRef.current!;\r\n    const solver = solverRef.current!;\r\n    const varilable = vars[index + 1];\r\n    solver.removeEditVariable(varilable);\r\n    solver.addEditVariable(varilable, Strength.medium);\r\n    // Split.onResizeBegin.dispatch(this);\r\n    window.document.documentElement.style.pointerEvents = 'none';\r\n  };\r\n\r\n  /**\r\n   * This fires for all splits, even if the resizer doesn't belong to this split.\r\n   */\r\n  const onResizerMouseUp = () => {\r\n    if (indexRef.current < 0) {\r\n      return;\r\n    }\r\n    indexRef.current = -1;\r\n    // Split.onResizeEnd.dispatch(this);\r\n    window.document.documentElement.style.pointerEvents = 'auto';\r\n    const newSplits = splitsRef.current.slice();\r\n    querySolver(newSplits);\r\n    onChange(newSplits);\r\n  };\r\n\r\n  const onResizerMouseMove = (e: React.MouseEvent<any>) => {\r\n    if (indexRef.current < 0) {\r\n      return;\r\n    }\r\n    const vars = varsRef.current!;\r\n    const isVertical = props.orientation === SplitOrientation.Vertical;\r\n    const container = containerRef.current!;\r\n    const rect = container.getBoundingClientRect();\r\n    const mouseOffset = isVertical\r\n      ? e.clientX - rect.left\r\n      : e.clientY - rect.top;\r\n\r\n    const index = indexRef.current;\r\n    const solver = solverRef.current!;\r\n    solver.suggestValue(vars[index + 1], mouseOffset);\r\n    // this.solver.resolve();\r\n    solver.updateVariables();\r\n    const newSplits = splitsRef.current.slice();\r\n    querySolver(newSplits);\r\n    forceUpdate();\r\n    // onChange(newSplits);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const querySolver = (splits: SplitInfo[]) => {\r\n    const vars = varsRef.current!;\r\n    for (let i = 0; i < splits.length; i++) {\r\n      splits[i].value = vars[i + 1].value() - vars[i].value();\r\n    }\r\n  };\r\n\r\n  // const getContainerSize = useCallback(\r\n  //   (orientation: SplitOrientation) =>\r\n  //     orientation === SplitOrientation.Horizontal ? height : width,\r\n  //   [width, height]\r\n  // );\r\n  const getContainerSize = useCallback(\r\n    () => (orientation === SplitOrientation.Horizontal ? height : width),\r\n    [width, height, orientation]\r\n  );\r\n\r\n  const canonicalizeSplits = useCallback((): SplitInfo[] => {\r\n    const count = React.Children.count(children);\r\n    const containerSize = getContainerSize();\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n      let info = {};\r\n      if (props.splits && i < props.splits.length) {\r\n        info = Object.assign(info, props.splits[i]);\r\n      }\r\n      if (defaultSplit) {\r\n        info = Object.assign(defaultSplit, info);\r\n      }\r\n\r\n      result.push(\r\n        Object.assign(\r\n          {\r\n            min: 32,\r\n            max: containerSize\r\n          },\r\n          info\r\n        )\r\n      );\r\n    }\r\n    return result;\r\n  }, [children, orientation, props.splits, defaultSplit]);\r\n\r\n  /**\r\n   * Initializes a Cassowary solver and the constraints based on split infos and container size.\r\n   */\r\n  const setupSolver = (splits: SplitInfo[], containerSize: number) => {\r\n    assert(indexRef.current < 0, 'Should not be in a dragging state.');\r\n    //const weak = Cassowary.Strength.weak;\r\n    //// const medium = Cassowary.Strength.medium;\r\n    //const strong = Cassowary.Strength.strong;\r\n    //const required = Cassowary.Strength.required;\r\n\r\n    ////function eq(a1: any, a2: any, strength: number, weight?: number) {\r\n    ////    return new Cassowary.Equation(a1, a2, strength || weak, weight || 0);\r\n    ////}\r\n\r\n    //function geq(a1: any, a2: any, strength: any, weight?: number) {\r\n    //  return new Cassowary.Inequality(a1, Cassowary.GEQ, a2, strength, weight);\r\n    //}\r\n\r\n    //function leq(a1: any, a2: any, strength: any, weight?: number) {\r\n    //  return new Cassowary.Inequality(a1, Cassowary.LEQ, a2, strength, weight);\r\n    //}\r\n\r\n    // f     1               2           3   ...    l\r\n    // |-----|---------------|-----------|----------|\r\n\r\n    // const vars: CassowaryVar[] = this.vars = [new Cassowary.Variable()];\r\n    varsRef.current = [new Variable()];\r\n    const vars = varsRef.current;\r\n    solverRef.current = new Solver();\r\n    const solver = solverRef.current;\r\n\r\n    // Create Cassowary variables, these the dragged position as an offset from the origin.\r\n    for (let i = 0; i < splits.length; i++) {\r\n      vars.push(new Variable());\r\n    }\r\n\r\n    solver.addEditVariable(vars[0], Strength.strong);\r\n    solver.suggestValue(vars[0], 0);\r\n\r\n    let cn = new Constraint(vars[0], Operator.Eq, 0);\r\n    solver.addConstraint(cn);\r\n\r\n    solver.addEditVariable(vars[vars.length - 1], Strength.strong);\r\n    solver.suggestValue(vars[vars.length - 1], containerSize);\r\n\r\n    cn = new Constraint(vars[vars.length - 1], Operator.Eq, containerSize);\r\n    solver.addConstraint(cn);\r\n\r\n    for (let i = 0; i < vars.length - 1; i++) {\r\n      const { min, max } = splits[i];\r\n      const left = vars[i];\r\n      const right = vars[i + 1];\r\n      solver.addConstraint(\r\n        new Constraint(right.minus(left), Operator.Ge, min, Strength.strong)\r\n      );\r\n      solver.addConstraint(\r\n        new Constraint(right.minus(left), Operator.Le, max, Strength.strong)\r\n      );\r\n    }\r\n\r\n    // Add stays for the variables representing the dragged panes. This causes them to\r\n    // try and remain in their dragged position unless the constraints prevent that.\r\n    for (let i = 1; i < vars.length - 1; i++) {\r\n      // solver.addStay(vars[i], weak);\r\n      solver.addEditVariable(vars[i], Strength.weak);\r\n      solver.suggestValue(vars[i], 10000);\r\n    }\r\n\r\n    suggestVarValues(splits);\r\n  };\r\n\r\n  const suggestVarValues = (splits: SplitInfo[]) => {\r\n    const vars = varsRef.current!;\r\n    const solver = solverRef.current!;\r\n    for (let i = 0; i < vars.length - 1; i++) {\r\n      const x = vars[i];\r\n      const y = vars[i + 1];\r\n\r\n      if (splits[i].value) {\r\n        if (i < vars.length - 2) {\r\n          solver.suggestValue(y, x.value() + splits[i].value!);\r\n        } else {\r\n          solver.suggestValue(x, y.value() - splits[i].value!);\r\n        }\r\n        solver.updateVariables();\r\n      }\r\n    }\r\n  };\r\n\r\n  const getChildren = () => {\r\n    const count = React.Children.count(children);\r\n    const newChildren: React.ReactNode[] = [];\r\n    React.Children.forEach(children, (child, i) => {\r\n      const style: React.CSSProperties = {};\r\n      if (i < count - 1 && i < splitsRef.current.length) {\r\n        style.flexBasis = toCSSPx(\r\n          Math.round(splitsRef.current[i].value as number)\r\n        );\r\n      } else {\r\n        style.flex = 1;\r\n      }\r\n\r\n      newChildren.push(<SplitPane key={i} style={style} child={child} />);\r\n      if (i < count - 1) {\r\n        newChildren.push(\r\n          <Resizer\r\n            key={`Resizer-${i}`}\r\n            orientation={orientation}\r\n            onMouseDown={ev => onResizerMouseDown(i)}\r\n          />\r\n        );\r\n      }\r\n    });\r\n    return newChildren;\r\n  };\r\n\r\n  // const splitPanes = useMemo(() => {}, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"split\"\r\n      ref={containerRef}\r\n      style={{ flexDirection: isHorizontal ? 'column' : 'row' }}\r\n    >\r\n      {getChildren()}\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @class Strength\r\n */\r\nvar Strength = /** @class */ (function () {\r\n    function Strength() {\r\n    }\r\n    /**\r\n     * Create a new symbolic strength.\r\n     *\r\n     * @param a strong\r\n     * @param b medium\r\n     * @param c weak\r\n     * @param [w] weight\r\n     * @return strength\r\n     */\r\n    Strength.create = function (a, b, c, w) {\r\n        if (w === void 0) { w = 1.0; }\r\n        var result = 0.0;\r\n        result += Math.max(0.0, Math.min(1000.0, a * w)) * 1000000.0;\r\n        result += Math.max(0.0, Math.min(1000.0, b * w)) * 1000.0;\r\n        result += Math.max(0.0, Math.min(1000.0, c * w));\r\n        return result;\r\n    };\r\n    /**\r\n     * Clip a symbolic strength to the allowed min and max.\r\n     * @private\r\n     */\r\n    Strength.clip = function (value) {\r\n        return Math.max(0.0, Math.min(Strength.required, value));\r\n    };\r\n    /**\r\n     * The 'required' symbolic strength.\r\n     */\r\n    Strength.required = Strength.create(1000.0, 1000.0, 1000.0);\r\n    /**\r\n     * The 'strong' symbolic strength.\r\n     */\r\n    Strength.strong = Strength.create(1.0, 0.0, 0.0);\r\n    /**\r\n     * The 'medium' symbolic strength.\r\n     */\r\n    Strength.medium = Strength.create(0.0, 1.0, 0.0);\r\n    /**\r\n     * The 'weak' symbolic strength.\r\n     */\r\n    Strength.weak = Strength.create(0.0, 0.0, 1.0);\r\n    return Strength;\r\n}());\r\nexports.Strength = Strength;\r\n//# sourceMappingURL=strength.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nvar useEffectOnce = function (effect) {\r\n    react_1.useEffect(effect, []);\r\n};\r\nexports.default = useEffectOnce;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar expression_1 = require(\"./expression\");\r\nvar strength_1 = require(\"./strength\");\r\n/**\r\n * An enum defining the linear constraint operators.\r\n *\r\n * |Value|Operator|Description|\r\n * |----|-----|-----|\r\n * |`Le`|<=|Less than equal|\r\n * |`Ge`|>=|Greater than equal|\r\n * |`Eq`|==|Equal|\r\n *\r\n * @enum {Number}\r\n */\r\nvar Operator;\r\n(function (Operator) {\r\n    Operator[Operator[\"Le\"] = 0] = \"Le\";\r\n    Operator[Operator[\"Ge\"] = 1] = \"Ge\";\r\n    Operator[Operator[\"Eq\"] = 2] = \"Eq\"; // ==\r\n})(Operator = exports.Operator || (exports.Operator = {}));\r\n/**\r\n * A linear constraint equation.\r\n *\r\n * A constraint equation is composed of an expression, an operator,\r\n * and a strength. The RHS of the equation is implicitly zero.\r\n *\r\n * @class\r\n * @param {Expression} expression The constraint expression (LHS).\r\n * @param {Operator} operator The equation operator.\r\n * @param {Expression} [rhs] Right hand side of the expression.\r\n * @param {Number} [strength=Strength.required] The strength of the constraint.\r\n */\r\nvar Constraint = /** @class */ (function () {\r\n    function Constraint(expression, operator, rhs, strength) {\r\n        if (strength === void 0) { strength = strength_1.Strength.required; }\r\n        this._id = CnId++;\r\n        this._operator = operator;\r\n        this._strength = strength_1.Strength.clip(strength);\r\n        if (rhs === undefined && expression instanceof expression_1.Expression) {\r\n            this._expression = expression;\r\n        }\r\n        else {\r\n            this._expression = expression.minus(rhs);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the unique id number of the constraint.\r\n     * @private\r\n     */\r\n    Constraint.prototype.id = function () {\r\n        return this._id;\r\n    };\r\n    /**\r\n     * Returns the expression of the constraint.\r\n     *\r\n     * @return {Expression} expression\r\n     */\r\n    Constraint.prototype.expression = function () {\r\n        return this._expression;\r\n    };\r\n    /**\r\n     * Returns the relational operator of the constraint.\r\n     *\r\n     * @return {Operator} linear constraint operator\r\n     */\r\n    Constraint.prototype.op = function () {\r\n        return this._operator;\r\n    };\r\n    /**\r\n     * Returns the strength of the constraint.\r\n     *\r\n     * @return {Number} strength\r\n     */\r\n    Constraint.prototype.strength = function () {\r\n        return this._strength;\r\n    };\r\n    Constraint.prototype.toString = function () {\r\n        return (this._expression.toString() +\r\n            ' ' +\r\n            ['<=', '>=', '='][this._operator] +\r\n            ' 0 (' +\r\n            this._strength.toString() +\r\n            ')');\r\n    };\r\n    return Constraint;\r\n}());\r\nexports.Constraint = Constraint;\r\n/**\r\n * The internal constraint id counter.\r\n * @private\r\n */\r\nvar CnId = 0;\r\n//# sourceMappingURL=constraint.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction createMap() {\r\n    return new IndexedMap();\r\n}\r\nexports.createMap = createMap;\r\nvar IndexedMap = /** @class */ (function () {\r\n    function IndexedMap() {\r\n        this.index = {};\r\n        this.array = [];\r\n    }\r\n    /**\r\n     * Returns the number of items in the array.\r\n     */\r\n    IndexedMap.prototype.size = function () {\r\n        return this.array.length;\r\n    };\r\n    /**\r\n     * Returns true if the array is empty.\r\n     */\r\n    IndexedMap.prototype.empty = function () {\r\n        return this.array.length === 0;\r\n    };\r\n    /**\r\n     * Returns the item at the given array index.\r\n     *\r\n     * @param index The integer index of the desired item.\r\n     */\r\n    IndexedMap.prototype.itemAt = function (index) {\r\n        return this.array[index];\r\n    };\r\n    /**\r\n     * Returns true if the key is in the array, false otherwise.\r\n     *\r\n     * @param key The key to locate in the array.\r\n     */\r\n    IndexedMap.prototype.contains = function (key) {\r\n        return this.index[key.id()] !== undefined;\r\n    };\r\n    /**\r\n     * Returns the pair associated with the given key, or undefined.\r\n     *\r\n     * @param key The key to locate in the array.\r\n     */\r\n    IndexedMap.prototype.find = function (key) {\r\n        var i = this.index[key.id()];\r\n        return i === undefined ? undefined : this.array[i];\r\n    };\r\n    /**\r\n     * Returns the pair associated with the key if it exists.\r\n     *\r\n     * If the key does not exist, a new pair will be created and\r\n     * inserted using the value created by the given factory.\r\n     *\r\n     * @param key The key to locate in the array.\r\n     * @param factory The function which creates the default value.\r\n     */\r\n    IndexedMap.prototype.setDefault = function (key, factory) {\r\n        var i = this.index[key.id()];\r\n        if (i === undefined) {\r\n            var pair = new Pair(key, factory());\r\n            this.index[key.id()] = this.array.length;\r\n            this.array.push(pair);\r\n            return pair;\r\n        }\r\n        else {\r\n            return this.array[i];\r\n        }\r\n    };\r\n    /**\r\n     * Insert the pair into the array and return the pair.\r\n     *\r\n     * This will overwrite any existing entry in the array.\r\n     *\r\n     * @param key The key portion of the pair.\r\n     * @param value The value portion of the pair.\r\n     */\r\n    IndexedMap.prototype.insert = function (key, value) {\r\n        var pair = new Pair(key, value);\r\n        var i = this.index[key.id()];\r\n        if (i === undefined) {\r\n            this.index[key.id()] = this.array.length;\r\n            this.array.push(pair);\r\n        }\r\n        else {\r\n            this.array[i] = pair;\r\n        }\r\n        return pair;\r\n    };\r\n    /**\r\n     * Removes and returns the pair for the given key, or undefined.\r\n     *\r\n     * @param key The key to remove from the map.\r\n     */\r\n    IndexedMap.prototype.erase = function (key) {\r\n        var i = this.index[key.id()];\r\n        if (i === undefined) {\r\n            return undefined;\r\n        }\r\n        this.index[key.id()] = undefined;\r\n        var pair = this.array[i];\r\n        var last = this.array.pop();\r\n        if (pair !== last) {\r\n            this.array[i] = last;\r\n            this.index[last.first.id()] = i;\r\n        }\r\n        return pair;\r\n    };\r\n    /**\r\n     * Create a copy of this associative array.\r\n     */\r\n    IndexedMap.prototype.copy = function () {\r\n        var copy = new IndexedMap();\r\n        for (var i = 0; i < this.array.length; i++) {\r\n            var pair = this.array[i].copy();\r\n            copy.array[i] = pair;\r\n            copy.index[pair.first.id()] = i;\r\n        }\r\n        return copy;\r\n    };\r\n    return IndexedMap;\r\n}());\r\n/**\r\n * A class which defines a generic pair object.\r\n * @private\r\n */\r\n// tslint:disable: max-classes-per-file\r\nvar Pair = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Pair object.\r\n     *\r\n     * @param first The first item of the pair.\r\n     * @param second The second item of the pair.\r\n     */\r\n    function Pair(first, second) {\r\n        this.first = first;\r\n        this.second = second;\r\n    }\r\n    /**\r\n     * Create a copy of the pair.\r\n     */\r\n    Pair.prototype.copy = function () {\r\n        return new Pair(this.first, this.second);\r\n    };\r\n    return Pair;\r\n}());\r\n//# sourceMappingURL=maptype.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar expression_1 = require(\"./expression\");\r\n/**\r\n * The primary user constraint variable.\r\n *\r\n * @class\r\n * @param {String} [name=\"\"] The name to associated with the variable.\r\n */\r\nvar Variable = /** @class */ (function () {\r\n    function Variable(name) {\r\n        if (name === void 0) { name = ''; }\r\n        this._value = 0.0;\r\n        this._context = null;\r\n        this._id = VarId++;\r\n        this._name = name;\r\n    }\r\n    /**\r\n     * Returns the unique id number of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.id = function () {\r\n        return this._id;\r\n    };\r\n    /**\r\n     * Returns the name of the variable.\r\n     *\r\n     * @return {String} name of the variable\r\n     */\r\n    Variable.prototype.name = function () {\r\n        return this._name;\r\n    };\r\n    /**\r\n     * Set the name of the variable.\r\n     *\r\n     * @param {String} name Name of the variable\r\n     */\r\n    Variable.prototype.setName = function (name) {\r\n        this._name = name;\r\n    };\r\n    /**\r\n     * Returns the user context object of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.context = function () {\r\n        return this._context;\r\n    };\r\n    /**\r\n     * Set the user context object of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.setContext = function (context) {\r\n        this._context = context;\r\n    };\r\n    /**\r\n     * Returns the value of the variable.\r\n     *\r\n     * @return {Number} Calculated value\r\n     */\r\n    Variable.prototype.value = function () {\r\n        return this._value;\r\n    };\r\n    /**\r\n     * Set the value of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.setValue = function (value) {\r\n        this._value = value;\r\n    };\r\n    /**\r\n     * Creates a new Expression by adding a number, variable or expression\r\n     * to the variable.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to add.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.plus = function (value) {\r\n        return new expression_1.Expression(this, value);\r\n    };\r\n    /**\r\n     * Creates a new Expression by substracting a number, variable or expression\r\n     * from the variable.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to substract.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.minus = function (value) {\r\n        return new expression_1.Expression(this, typeof value === 'number' ? -value : [-1, value]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by multiplying with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to multiply with.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.multiply = function (coefficient) {\r\n        return new expression_1.Expression([coefficient, this]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by dividing with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to divide by.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.divide = function (coefficient) {\r\n        return new expression_1.Expression([1 / coefficient, this]);\r\n    };\r\n    /**\r\n     * Returns the JSON representation of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.toJSON = function () {\r\n        return {\r\n            name: this._name,\r\n            value: this._value\r\n        };\r\n    };\r\n    Variable.prototype.toString = function () {\r\n        return this._context + '[' + this._name + ':' + this._value + ']';\r\n    };\r\n    return Variable;\r\n}());\r\nexports.Variable = Variable;\r\n/**\r\n * The internal variable id counter.\r\n * @private\r\n */\r\nvar VarId = 0;\r\n//# sourceMappingURL=variable.js.map","import Split from './components/Split';\nexport { SplitOrientation } from './components/Split';\nexport { SplitInfo } from './components/Split';\n\nexport default Split;\n","export default function assert(c: any, message?: string) {\r\n  if (!c) {\r\n    throw new Error(message);\r\n  }\r\n}\r\n","export default function toCSSPx(x: number) {\r\n  return (x | 0) + 'px';\r\n}\r\n","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2018, Nucleic Development Team & H. Rutjes.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./constraint\"));\r\n__export(require(\"./expression\"));\r\n__export(require(\"./solver\"));\r\n__export(require(\"./strength\"));\r\n__export(require(\"./variable\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar constraint_1 = require(\"./constraint\");\r\nvar expression_1 = require(\"./expression\");\r\nvar maptype_1 = require(\"./maptype\");\r\nvar strength_1 = require(\"./strength\");\r\n/**\r\n * The constraint solver class.\r\n *\r\n * @class\r\n */\r\nvar Solver = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Solver.\r\n     */\r\n    function Solver() {\r\n        this._cnMap = createCnMap();\r\n        this._rowMap = createRowMap();\r\n        this._varMap = createVarMap();\r\n        this._editMap = createEditMap();\r\n        this._infeasibleRows = [];\r\n        this._objective = new Row();\r\n        this._artificial = null;\r\n        this._idTick = 0;\r\n    }\r\n    /**\r\n     * Creates and add a constraint to the solver.\r\n     *\r\n     * @param {Expression|Variable} lhs Left hand side of the expression\r\n     * @param {Operator} operator Operator\r\n     * @param {Expression|Variable|Number} rhs Right hand side of the expression\r\n     * @param {Number} [strength=Strength.required] Strength\r\n     */\r\n    Solver.prototype.createConstraint = function (lhs, operator, rhs, strength) {\r\n        if (strength === void 0) { strength = strength_1.Strength.required; }\r\n        var cn = new constraint_1.Constraint(lhs, operator, rhs, strength);\r\n        this.addConstraint(cn);\r\n        return cn;\r\n    };\r\n    /**\r\n     * Add a constraint to the solver.\r\n     *\r\n     * @param {Constraint} constraint Constraint to add to the solver\r\n     */\r\n    Solver.prototype.addConstraint = function (constraint) {\r\n        var cnPair = this._cnMap.find(constraint);\r\n        if (cnPair !== undefined) {\r\n            throw new Error('duplicate constraint');\r\n        }\r\n        // Creating a row causes symbols to be reserved for the variables\r\n        // in the constraint. If this method exits with an exception,\r\n        // then its possible those variables will linger in the var map.\r\n        // Since its likely that those variables will be used in other\r\n        // constraints and since exceptional conditions are uncommon,\r\n        // i'm not too worried about aggressive cleanup of the var map.\r\n        var data = this._createRow(constraint);\r\n        var row = data.row;\r\n        var tag = data.tag;\r\n        var subject = this._chooseSubject(row, tag);\r\n        // If chooseSubject couldnt find a valid entering symbol, one\r\n        // last option is available if the entire row is composed of\r\n        // dummy variables. If the constant of the row is zero, then\r\n        // this represents redundant constraints and the new dummy\r\n        // marker can enter the basis. If the constant is non-zero,\r\n        // then it represents an unsatisfiable constraint.\r\n        if (subject.type() === SymbolType.Invalid && row.allDummies()) {\r\n            if (!nearZero(row.constant())) {\r\n                throw new Error('unsatisfiable constraint');\r\n            }\r\n            else {\r\n                subject = tag.marker;\r\n            }\r\n        }\r\n        // If an entering symbol still isn't found, then the row must\r\n        // be added using an artificial variable. If that fails, then\r\n        // the row represents an unsatisfiable constraint.\r\n        if (subject.type() === SymbolType.Invalid) {\r\n            if (!this._addWithArtificialVariable(row)) {\r\n                throw new Error('unsatisfiable constraint');\r\n            }\r\n        }\r\n        else {\r\n            row.solveFor(subject);\r\n            this._substitute(subject, row);\r\n            this._rowMap.insert(subject, row);\r\n        }\r\n        this._cnMap.insert(constraint, tag);\r\n        // Optimizing after each constraint is added performs less\r\n        // aggregate work due to a smaller average system size. It\r\n        // also ensures the solver remains in a consistent state.\r\n        this._optimize(this._objective);\r\n    };\r\n    /**\r\n     * Remove a constraint from the solver.\r\n     *\r\n     * @param {Constraint} constraint Constraint to remove from the solver\r\n     */\r\n    Solver.prototype.removeConstraint = function (constraint) {\r\n        var cnPair = this._cnMap.erase(constraint);\r\n        if (cnPair === undefined) {\r\n            throw new Error('unknown constraint');\r\n        }\r\n        // Remove the error effects from the objective function\r\n        // *before* pivoting, or substitutions into the objective\r\n        // will lead to incorrect solver results.\r\n        this._removeConstraintEffects(constraint, cnPair.second);\r\n        // If the marker is basic, simply drop the row. Otherwise,\r\n        // pivot the marker into the basis and then drop the row.\r\n        var marker = cnPair.second.marker;\r\n        var rowPair = this._rowMap.erase(marker);\r\n        if (rowPair === undefined) {\r\n            var leaving = this._getMarkerLeavingSymbol(marker);\r\n            if (leaving.type() === SymbolType.Invalid) {\r\n                throw new Error('failed to find leaving row');\r\n            }\r\n            rowPair = this._rowMap.erase(leaving);\r\n            rowPair.second.solveForEx(leaving, marker);\r\n            this._substitute(marker, rowPair.second);\r\n        }\r\n        // Optimizing after each constraint is removed ensures that the\r\n        // solver remains consistent. It makes the solver api easier to\r\n        // use at a small tradeoff for speed.\r\n        this._optimize(this._objective);\r\n    };\r\n    /**\r\n     * Test whether the solver contains the constraint.\r\n     *\r\n     * @param {Constraint} constraint Constraint to test for\r\n     * @return {Bool} true or false\r\n     */\r\n    Solver.prototype.hasConstraint = function (constraint) {\r\n        return this._cnMap.contains(constraint);\r\n    };\r\n    /**\r\n     * Add an edit variable to the solver.\r\n     *\r\n     * @param {Variable} variable Edit variable to add to the solver\r\n     * @param {Number} strength Strength, should be less than `Strength.required`\r\n     */\r\n    Solver.prototype.addEditVariable = function (variable, strength) {\r\n        var editPair = this._editMap.find(variable);\r\n        if (editPair !== undefined) {\r\n            throw new Error('duplicate edit variable');\r\n        }\r\n        strength = strength_1.Strength.clip(strength);\r\n        if (strength === strength_1.Strength.required) {\r\n            throw new Error('bad required strength');\r\n        }\r\n        var expr = new expression_1.Expression(variable);\r\n        var cn = new constraint_1.Constraint(expr, constraint_1.Operator.Eq, undefined, strength);\r\n        this.addConstraint(cn);\r\n        var tag = this._cnMap.find(cn).second;\r\n        var info = { tag: tag, constraint: cn, constant: 0.0 };\r\n        this._editMap.insert(variable, info);\r\n    };\r\n    /**\r\n     * Remove an edit variable from the solver.\r\n     *\r\n     * @param {Variable} variable Edit variable to remove from the solver\r\n     */\r\n    Solver.prototype.removeEditVariable = function (variable) {\r\n        var editPair = this._editMap.erase(variable);\r\n        if (editPair === undefined) {\r\n            throw new Error('unknown edit variable');\r\n        }\r\n        this.removeConstraint(editPair.second.constraint);\r\n    };\r\n    /**\r\n     * Test whether the solver contains the edit variable.\r\n     *\r\n     * @param {Variable} variable Edit variable to test for\r\n     * @return {Bool} true or false\r\n     */\r\n    Solver.prototype.hasEditVariable = function (variable) {\r\n        return this._editMap.contains(variable);\r\n    };\r\n    /**\r\n     * Suggest the value of an edit variable.\r\n     *\r\n     * @param {Variable} variable Edit variable to suggest a value for\r\n     * @param {Number} value Suggested value\r\n     */\r\n    Solver.prototype.suggestValue = function (variable, value) {\r\n        var editPair = this._editMap.find(variable);\r\n        if (editPair === undefined) {\r\n            throw new Error('unknown edit variable');\r\n        }\r\n        var rows = this._rowMap;\r\n        var info = editPair.second;\r\n        var delta = value - info.constant;\r\n        info.constant = value;\r\n        // Check first if the positive error variable is basic.\r\n        var marker = info.tag.marker;\r\n        var rowPair = rows.find(marker);\r\n        if (rowPair !== undefined) {\r\n            if (rowPair.second.add(-delta) < 0.0) {\r\n                this._infeasibleRows.push(marker);\r\n            }\r\n            this._dualOptimize();\r\n            return;\r\n        }\r\n        // Check next if the negative error variable is basic.\r\n        var other = info.tag.other;\r\n        rowPair = rows.find(other);\r\n        if (rowPair !== undefined) {\r\n            if (rowPair.second.add(delta) < 0.0) {\r\n                this._infeasibleRows.push(other);\r\n            }\r\n            this._dualOptimize();\r\n            return;\r\n        }\r\n        // Otherwise update each row where the error variables exist.\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var rowPair_1 = rows.itemAt(i);\r\n            var row = rowPair_1.second;\r\n            var coeff = row.coefficientFor(marker);\r\n            if (coeff !== 0.0 &&\r\n                row.add(delta * coeff) < 0.0 &&\r\n                rowPair_1.first.type() !== SymbolType.External) {\r\n                this._infeasibleRows.push(rowPair_1.first);\r\n            }\r\n        }\r\n        this._dualOptimize();\r\n    };\r\n    /**\r\n     * Update the values of the variables.\r\n     */\r\n    Solver.prototype.updateVariables = function () {\r\n        var vars = this._varMap;\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = vars.size(); i < n; ++i) {\r\n            var pair = vars.itemAt(i);\r\n            var rowPair = rows.find(pair.second);\r\n            if (rowPair !== undefined) {\r\n                pair.first.setValue(rowPair.second.constant());\r\n            }\r\n            else {\r\n                pair.first.setValue(0.0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get the symbol for the given variable.\r\n     *\r\n     * If a symbol does not exist for the variable, one will be created.\r\n     * @private\r\n     */\r\n    Solver.prototype._getVarSymbol = function (variable) {\r\n        var _this = this;\r\n        var factory = function () { return _this._makeSymbol(SymbolType.External); };\r\n        return this._varMap.setDefault(variable, factory).second;\r\n    };\r\n    /**\r\n     * Create a new Row object for the given constraint.\r\n     *\r\n     * The terms in the constraint will be converted to cells in the row.\r\n     * Any term in the constraint with a coefficient of zero is ignored.\r\n     * This method uses the `_getVarSymbol` method to get the symbol for\r\n     * the variables added to the row. If the symbol for a given cell\r\n     * variable is basic, the cell variable will be substituted with the\r\n     * basic row.\r\n     *\r\n     * The necessary slack and error variables will be added to the row.\r\n     * If the constant for the row is negative, the sign for the row\r\n     * will be inverted so the constant becomes positive.\r\n     *\r\n     * Returns the created Row and the tag for tracking the constraint.\r\n     * @private\r\n     */\r\n    Solver.prototype._createRow = function (constraint) {\r\n        var expr = constraint.expression();\r\n        var row = new Row(expr.constant());\r\n        // Substitute the current basic variables into the row.\r\n        var terms = expr.terms();\r\n        for (var i = 0, n = terms.size(); i < n; ++i) {\r\n            var termPair = terms.itemAt(i);\r\n            if (!nearZero(termPair.second)) {\r\n                var symbol = this._getVarSymbol(termPair.first);\r\n                var basicPair = this._rowMap.find(symbol);\r\n                if (basicPair !== undefined) {\r\n                    row.insertRow(basicPair.second, termPair.second);\r\n                }\r\n                else {\r\n                    row.insertSymbol(symbol, termPair.second);\r\n                }\r\n            }\r\n        }\r\n        // Add the necessary slack, error, and dummy variables.\r\n        var objective = this._objective;\r\n        var strength = constraint.strength();\r\n        var tag = { marker: INVALID_SYMBOL, other: INVALID_SYMBOL };\r\n        switch (constraint.op()) {\r\n            case constraint_1.Operator.Le:\r\n            case constraint_1.Operator.Ge: {\r\n                var coeff = constraint.op() === constraint_1.Operator.Le ? 1.0 : -1.0;\r\n                var slack = this._makeSymbol(SymbolType.Slack);\r\n                tag.marker = slack;\r\n                row.insertSymbol(slack, coeff);\r\n                if (strength < strength_1.Strength.required) {\r\n                    var error = this._makeSymbol(SymbolType.Error);\r\n                    tag.other = error;\r\n                    row.insertSymbol(error, -coeff);\r\n                    objective.insertSymbol(error, strength);\r\n                }\r\n                break;\r\n            }\r\n            case constraint_1.Operator.Eq: {\r\n                if (strength < strength_1.Strength.required) {\r\n                    var errplus = this._makeSymbol(SymbolType.Error);\r\n                    var errminus = this._makeSymbol(SymbolType.Error);\r\n                    tag.marker = errplus;\r\n                    tag.other = errminus;\r\n                    row.insertSymbol(errplus, -1.0); // v = eplus - eminus\r\n                    row.insertSymbol(errminus, 1.0); // v - eplus + eminus = 0\r\n                    objective.insertSymbol(errplus, strength);\r\n                    objective.insertSymbol(errminus, strength);\r\n                }\r\n                else {\r\n                    var dummy = this._makeSymbol(SymbolType.Dummy);\r\n                    tag.marker = dummy;\r\n                    row.insertSymbol(dummy);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // Ensure the row has a positive constant.\r\n        if (row.constant() < 0.0) {\r\n            row.reverseSign();\r\n        }\r\n        return { row: row, tag: tag };\r\n    };\r\n    /**\r\n     * Choose the subject for solving for the row.\r\n     *\r\n     * This method will choose the best subject for using as the solve\r\n     * target for the row. An invalid symbol will be returned if there\r\n     * is no valid target.\r\n     *\r\n     * The symbols are chosen according to the following precedence:\r\n     *\r\n     * 1) The first symbol representing an external variable.\r\n     * 2) A negative slack or error tag variable.\r\n     *\r\n     * If a subject cannot be found, an invalid symbol will be returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._chooseSubject = function (row, tag) {\r\n        var cells = row.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            if (pair.first.type() === SymbolType.External) {\r\n                return pair.first;\r\n            }\r\n        }\r\n        var type = tag.marker.type();\r\n        if (type === SymbolType.Slack || type === SymbolType.Error) {\r\n            if (row.coefficientFor(tag.marker) < 0.0) {\r\n                return tag.marker;\r\n            }\r\n        }\r\n        type = tag.other.type();\r\n        if (type === SymbolType.Slack || type === SymbolType.Error) {\r\n            if (row.coefficientFor(tag.other) < 0.0) {\r\n                return tag.other;\r\n            }\r\n        }\r\n        return INVALID_SYMBOL;\r\n    };\r\n    /**\r\n     * Add the row to the tableau using an artificial variable.\r\n     *\r\n     * This will return false if the constraint cannot be satisfied.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._addWithArtificialVariable = function (row) {\r\n        // Create and add the artificial variable to the tableau.\r\n        var art = this._makeSymbol(SymbolType.Slack);\r\n        this._rowMap.insert(art, row.copy());\r\n        this._artificial = row.copy();\r\n        // Optimize the artificial objective. This is successful\r\n        // only if the artificial objective is optimized to zero.\r\n        this._optimize(this._artificial);\r\n        var success = nearZero(this._artificial.constant());\r\n        this._artificial = null;\r\n        // If the artificial variable is basic, pivot the row so that\r\n        // it becomes non-basic. If the row is constant, exit early.\r\n        var pair = this._rowMap.erase(art);\r\n        if (pair !== undefined) {\r\n            var basicRow = pair.second;\r\n            if (basicRow.isConstant()) {\r\n                return success;\r\n            }\r\n            var entering = this._anyPivotableSymbol(basicRow);\r\n            if (entering.type() === SymbolType.Invalid) {\r\n                return false; // unsatisfiable (will this ever happen?)\r\n            }\r\n            basicRow.solveForEx(art, entering);\r\n            this._substitute(entering, basicRow);\r\n            this._rowMap.insert(entering, basicRow);\r\n        }\r\n        // Remove the artificial variable from the tableau.\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            rows.itemAt(i).second.removeSymbol(art);\r\n        }\r\n        this._objective.removeSymbol(art);\r\n        return success;\r\n    };\r\n    /**\r\n     * Substitute the parametric symbol with the given row.\r\n     *\r\n     * This method will substitute all instances of the parametric symbol\r\n     * in the tableau and the objective function with the given row.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._substitute = function (symbol, row) {\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var pair = rows.itemAt(i);\r\n            pair.second.substitute(symbol, row);\r\n            if (pair.second.constant() < 0.0 &&\r\n                pair.first.type() !== SymbolType.External) {\r\n                this._infeasibleRows.push(pair.first);\r\n            }\r\n        }\r\n        this._objective.substitute(symbol, row);\r\n        if (this._artificial) {\r\n            this._artificial.substitute(symbol, row);\r\n        }\r\n    };\r\n    /**\r\n     * Optimize the system for the given objective function.\r\n     *\r\n     * This method performs iterations of Phase 2 of the simplex method\r\n     * until the objective function reaches a minimum.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._optimize = function (objective) {\r\n        while (true) {\r\n            var entering = this._getEnteringSymbol(objective);\r\n            if (entering.type() === SymbolType.Invalid) {\r\n                return;\r\n            }\r\n            var leaving = this._getLeavingSymbol(entering);\r\n            if (leaving.type() === SymbolType.Invalid) {\r\n                throw new Error('the objective is unbounded');\r\n            }\r\n            // pivot the entering symbol into the basis\r\n            var row = this._rowMap.erase(leaving).second;\r\n            row.solveForEx(leaving, entering);\r\n            this._substitute(entering, row);\r\n            this._rowMap.insert(entering, row);\r\n        }\r\n    };\r\n    /**\r\n     * Optimize the system using the dual of the simplex method.\r\n     *\r\n     * The current state of the system should be such that the objective\r\n     * function is optimal, but not feasible. This method will perform\r\n     * an iteration of the dual simplex method to make the solution both\r\n     * optimal and feasible.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._dualOptimize = function () {\r\n        var rows = this._rowMap;\r\n        var infeasible = this._infeasibleRows;\r\n        while (infeasible.length !== 0) {\r\n            var leaving = infeasible.pop();\r\n            var pair = rows.find(leaving);\r\n            if (pair !== undefined && pair.second.constant() < 0.0) {\r\n                var entering = this._getDualEnteringSymbol(pair.second);\r\n                if (entering.type() === SymbolType.Invalid) {\r\n                    throw new Error('dual optimize failed');\r\n                }\r\n                // pivot the entering symbol into the basis\r\n                var row = pair.second;\r\n                rows.erase(leaving);\r\n                row.solveForEx(leaving, entering);\r\n                this._substitute(entering, row);\r\n                rows.insert(entering, row);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Compute the entering variable for a pivot operation.\r\n     *\r\n     * This method will return first symbol in the objective function which\r\n     * is non-dummy and has a coefficient less than zero. If no symbol meets\r\n     * the criteria, it means the objective function is at a minimum, and an\r\n     * invalid symbol is returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getEnteringSymbol = function (objective) {\r\n        var cells = objective.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            var symbol = pair.first;\r\n            if (pair.second < 0.0 && symbol.type() !== SymbolType.Dummy) {\r\n                return symbol;\r\n            }\r\n        }\r\n        return INVALID_SYMBOL;\r\n    };\r\n    /**\r\n     * Compute the entering symbol for the dual optimize operation.\r\n     *\r\n     * This method will return the symbol in the row which has a positive\r\n     * coefficient and yields the minimum ratio for its respective symbol\r\n     * in the objective function. The provided row *must* be infeasible.\r\n     * If no symbol is found which meats the criteria, an invalid symbol\r\n     * is returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getDualEnteringSymbol = function (row) {\r\n        var ratio = Number.MAX_VALUE;\r\n        var entering = INVALID_SYMBOL;\r\n        var cells = row.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            var symbol = pair.first;\r\n            var c = pair.second;\r\n            if (c > 0.0 && symbol.type() !== SymbolType.Dummy) {\r\n                var coeff = this._objective.coefficientFor(symbol);\r\n                var r = coeff / c;\r\n                if (r < ratio) {\r\n                    ratio = r;\r\n                    entering = symbol;\r\n                }\r\n            }\r\n        }\r\n        return entering;\r\n    };\r\n    /**\r\n     * Compute the symbol for pivot exit row.\r\n     *\r\n     * This method will return the symbol for the exit row in the row\r\n     * map. If no appropriate exit symbol is found, an invalid symbol\r\n     * will be returned. This indicates that the objective function is\r\n     * unbounded.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getLeavingSymbol = function (entering) {\r\n        var ratio = Number.MAX_VALUE;\r\n        var found = INVALID_SYMBOL;\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var pair = rows.itemAt(i);\r\n            var symbol = pair.first;\r\n            if (symbol.type() !== SymbolType.External) {\r\n                var row = pair.second;\r\n                var temp = row.coefficientFor(entering);\r\n                if (temp < 0.0) {\r\n                    var temp_ratio = -row.constant() / temp;\r\n                    if (temp_ratio < ratio) {\r\n                        ratio = temp_ratio;\r\n                        found = symbol;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    /**\r\n     * Compute the leaving symbol for a marker variable.\r\n     *\r\n     * This method will return a symbol corresponding to a basic row\r\n     * which holds the given marker variable. The row will be chosen\r\n     * according to the following precedence:\r\n     *\r\n     * 1) The row with a restricted basic varible and a negative coefficient\r\n     *    for the marker with the smallest ratio of -constant / coefficient.\r\n     *\r\n     * 2) The row with a restricted basic variable and the smallest ratio\r\n     *    of constant / coefficient.\r\n     *\r\n     * 3) The last unrestricted row which contains the marker.\r\n     *\r\n     * If the marker does not exist in any row, an invalid symbol will be\r\n     * returned. This indicates an internal solver error since the marker\r\n     * *should* exist somewhere in the tableau.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getMarkerLeavingSymbol = function (marker) {\r\n        var dmax = Number.MAX_VALUE;\r\n        var r1 = dmax;\r\n        var r2 = dmax;\r\n        var invalid = INVALID_SYMBOL;\r\n        var first = invalid;\r\n        var second = invalid;\r\n        var third = invalid;\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var pair = rows.itemAt(i);\r\n            var row = pair.second;\r\n            var c = row.coefficientFor(marker);\r\n            if (c === 0.0) {\r\n                continue;\r\n            }\r\n            var symbol = pair.first;\r\n            if (symbol.type() === SymbolType.External) {\r\n                third = symbol;\r\n            }\r\n            else if (c < 0.0) {\r\n                var r = -row.constant() / c;\r\n                if (r < r1) {\r\n                    r1 = r;\r\n                    first = symbol;\r\n                }\r\n            }\r\n            else {\r\n                var r = row.constant() / c;\r\n                if (r < r2) {\r\n                    r2 = r;\r\n                    second = symbol;\r\n                }\r\n            }\r\n        }\r\n        if (first !== invalid) {\r\n            return first;\r\n        }\r\n        if (second !== invalid) {\r\n            return second;\r\n        }\r\n        return third;\r\n    };\r\n    /**\r\n     * Remove the effects of a constraint on the objective function.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._removeConstraintEffects = function (cn, tag) {\r\n        if (tag.marker.type() === SymbolType.Error) {\r\n            this._removeMarkerEffects(tag.marker, cn.strength());\r\n        }\r\n        if (tag.other.type() === SymbolType.Error) {\r\n            this._removeMarkerEffects(tag.other, cn.strength());\r\n        }\r\n    };\r\n    /**\r\n     * Remove the effects of an error marker on the objective function.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._removeMarkerEffects = function (marker, strength) {\r\n        var pair = this._rowMap.find(marker);\r\n        if (pair !== undefined) {\r\n            this._objective.insertRow(pair.second, -strength);\r\n        }\r\n        else {\r\n            this._objective.insertSymbol(marker, -strength);\r\n        }\r\n    };\r\n    /**\r\n     * Get the first Slack or Error symbol in the row.\r\n     *\r\n     * If no such symbol is present, an invalid symbol will be returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._anyPivotableSymbol = function (row) {\r\n        var cells = row.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            var type = pair.first.type();\r\n            if (type === SymbolType.Slack || type === SymbolType.Error) {\r\n                return pair.first;\r\n            }\r\n        }\r\n        return INVALID_SYMBOL;\r\n    };\r\n    /**\r\n     * Returns a new Symbol of the given type.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._makeSymbol = function (type) {\r\n        return new Symbol(type, this._idTick++);\r\n    };\r\n    return Solver;\r\n}());\r\nexports.Solver = Solver;\r\n/**\r\n * Test whether a value is approximately zero.\r\n * @private\r\n */\r\nfunction nearZero(value) {\r\n    var eps = 1.0e-8;\r\n    return value < 0.0 ? -value < eps : value < eps;\r\n}\r\n/**\r\n * An internal function for creating a constraint map.\r\n * @private\r\n */\r\nfunction createCnMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An internal function for creating a row map.\r\n * @private\r\n */\r\nfunction createRowMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An internal function for creating a variable map.\r\n * @private\r\n */\r\nfunction createVarMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An internal function for creating an edit map.\r\n * @private\r\n */\r\nfunction createEditMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An enum defining the available symbol types.\r\n * @private\r\n */\r\nvar SymbolType;\r\n(function (SymbolType) {\r\n    SymbolType[SymbolType[\"Invalid\"] = 0] = \"Invalid\";\r\n    SymbolType[SymbolType[\"External\"] = 1] = \"External\";\r\n    SymbolType[SymbolType[\"Slack\"] = 2] = \"Slack\";\r\n    SymbolType[SymbolType[\"Error\"] = 3] = \"Error\";\r\n    SymbolType[SymbolType[\"Dummy\"] = 4] = \"Dummy\";\r\n})(SymbolType || (SymbolType = {}));\r\n/**\r\n * An internal class representing a symbol in the solver.\r\n * @private\r\n */\r\nvar Symbol = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Symbol\r\n     *\r\n     * @param [type] The type of the symbol.\r\n     * @param [id] The unique id number of the symbol.\r\n     */\r\n    function Symbol(type, id) {\r\n        this._id = id;\r\n        this._type = type;\r\n    }\r\n    /**\r\n     * Returns the unique id number of the symbol.\r\n     */\r\n    Symbol.prototype.id = function () {\r\n        return this._id;\r\n    };\r\n    /**\r\n     * Returns the type of the symbol.\r\n     */\r\n    Symbol.prototype.type = function () {\r\n        return this._type;\r\n    };\r\n    return Symbol;\r\n}());\r\n/**\r\n * A static invalid symbol\r\n * @private\r\n */\r\nvar INVALID_SYMBOL = new Symbol(SymbolType.Invalid, -1);\r\n/**\r\n * An internal row class used by the solver.\r\n * @private\r\n */\r\nvar Row = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Row.\r\n     */\r\n    function Row(constant) {\r\n        if (constant === void 0) { constant = 0.0; }\r\n        this._cellMap = maptype_1.createMap();\r\n        this._constant = constant;\r\n    }\r\n    /**\r\n     * Returns the mapping of symbols to coefficients.\r\n     */\r\n    Row.prototype.cells = function () {\r\n        return this._cellMap;\r\n    };\r\n    /**\r\n     * Returns the constant for the row.\r\n     */\r\n    Row.prototype.constant = function () {\r\n        return this._constant;\r\n    };\r\n    /**\r\n     * Returns true if the row is a constant value.\r\n     */\r\n    Row.prototype.isConstant = function () {\r\n        return this._cellMap.empty();\r\n    };\r\n    /**\r\n     * Returns true if the Row has all dummy symbols.\r\n     */\r\n    Row.prototype.allDummies = function () {\r\n        var cells = this._cellMap;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            if (pair.first.type() !== SymbolType.Dummy) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Create a copy of the row.\r\n     */\r\n    Row.prototype.copy = function () {\r\n        var theCopy = new Row(this._constant);\r\n        theCopy._cellMap = this._cellMap.copy();\r\n        return theCopy;\r\n    };\r\n    /**\r\n     * Add a constant value to the row constant.\r\n     *\r\n     * Returns the new value of the constant.\r\n     */\r\n    Row.prototype.add = function (value) {\r\n        return (this._constant += value);\r\n    };\r\n    /**\r\n     * Insert the symbol into the row with the given coefficient.\r\n     *\r\n     * If the symbol already exists in the row, the coefficient\r\n     * will be added to the existing coefficient. If the resulting\r\n     * coefficient is zero, the symbol will be removed from the row.\r\n     */\r\n    Row.prototype.insertSymbol = function (symbol, coefficient) {\r\n        if (coefficient === void 0) { coefficient = 1.0; }\r\n        var pair = this._cellMap.setDefault(symbol, function () { return 0.0; });\r\n        if (nearZero((pair.second += coefficient))) {\r\n            this._cellMap.erase(symbol);\r\n        }\r\n    };\r\n    /**\r\n     * Insert a row into this row with a given coefficient.\r\n     *\r\n     * The constant and the cells of the other row will be\r\n     * multiplied by the coefficient and added to this row. Any\r\n     * cell with a resulting coefficient of zero will be removed\r\n     * from the row.\r\n     */\r\n    Row.prototype.insertRow = function (other, coefficient) {\r\n        if (coefficient === void 0) { coefficient = 1.0; }\r\n        this._constant += other._constant * coefficient;\r\n        var cells = other._cellMap;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            this.insertSymbol(pair.first, pair.second * coefficient);\r\n        }\r\n    };\r\n    /**\r\n     * Remove a symbol from the row.\r\n     */\r\n    Row.prototype.removeSymbol = function (symbol) {\r\n        this._cellMap.erase(symbol);\r\n    };\r\n    /**\r\n     * Reverse the sign of the constant and cells in the row.\r\n     */\r\n    Row.prototype.reverseSign = function () {\r\n        this._constant = -this._constant;\r\n        var cells = this._cellMap;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            pair.second = -pair.second;\r\n        }\r\n    };\r\n    /**\r\n     * Solve the row for the given symbol.\r\n     *\r\n     * This method assumes the row is of the form\r\n     * a * x + b * y + c = 0 and (assuming solve for x) will modify\r\n     * the row to represent the right hand side of\r\n     * x = -b/a * y - c / a. The target symbol will be removed from\r\n     * the row, and the constant and other cells will be multiplied\r\n     * by the negative inverse of the target coefficient.\r\n     *\r\n     * The given symbol *must* exist in the row.\r\n     */\r\n    Row.prototype.solveFor = function (symbol) {\r\n        var cells = this._cellMap;\r\n        var pair = cells.erase(symbol);\r\n        var coeff = -1.0 / pair.second;\r\n        this._constant *= coeff;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            cells.itemAt(i).second *= coeff;\r\n        }\r\n    };\r\n    /**\r\n     * Solve the row for the given symbols.\r\n     *\r\n     * This method assumes the row is of the form\r\n     * x = b * y + c and will solve the row such that\r\n     * y = x / b - c / b. The rhs symbol will be removed from the\r\n     * row, the lhs added, and the result divided by the negative\r\n     * inverse of the rhs coefficient.\r\n     *\r\n     * The lhs symbol *must not* exist in the row, and the rhs\r\n     * symbol must* exist in the row.\r\n     */\r\n    Row.prototype.solveForEx = function (lhs, rhs) {\r\n        this.insertSymbol(lhs, -1.0);\r\n        this.solveFor(rhs);\r\n    };\r\n    /**\r\n     * Returns the coefficient for the given symbol.\r\n     */\r\n    Row.prototype.coefficientFor = function (symbol) {\r\n        var pair = this._cellMap.find(symbol);\r\n        return pair !== undefined ? pair.second : 0.0;\r\n    };\r\n    /**\r\n     * Substitute a symbol with the data from another row.\r\n     *\r\n     * Given a row of the form a * x + b and a substitution of the\r\n     * form x = 3 * y + c the row will be updated to reflect the\r\n     * expression 3 * a * y + a * c + b.\r\n     *\r\n     * If the symbol does not exist in the row, this is a no-op.\r\n     */\r\n    Row.prototype.substitute = function (symbol, row) {\r\n        var pair = this._cellMap.erase(symbol);\r\n        if (pair !== undefined) {\r\n            this.insertRow(row, pair.second);\r\n        }\r\n    };\r\n    return Row;\r\n}());\r\n//# sourceMappingURL=solver.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar index_1 = require(\"./useActive/index\");\r\nexports.useActive = index_1.default;\r\nvar index_2 = require(\"./useClickOutside/index\");\r\nexports.useClickOutside = index_2.default;\r\nvar index_3 = require(\"./useFocus/index\");\r\nexports.useFocus = index_3.default;\r\nvar index_4 = require(\"./useHover/index\");\r\nexports.useHover = index_4.default;\r\nvar index_5 = require(\"./useMousePosition/index\");\r\nexports.useMousePosition = index_5.default;\r\nvar index_6 = require(\"./useResizeObserver/index\");\r\nexports.useResizeObserver = index_6.default;\r\nvar index_7 = require(\"./useTouch/index\");\r\nexports.useTouch = index_7.default;\r\nvar index_8 = require(\"./useWindowResize/index\");\r\nexports.useWindowResize = index_8.default;\r\nvar index_9 = require(\"./useEffectOnce/index\");\r\nexports.useEffectOnce = index_9.default;\r\nvar index_10 = require(\"./useMount/index\");\r\nexports.useMount = index_10.default;\r\nvar index_11 = require(\"./useUnmount/index\");\r\nexports.useUnmount = index_11.default;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nfunction useActive() {\r\n    var _a = react_1.useState(false), isActive = _a[0], setActive = _a[1];\r\n    var bind = react_1.useMemo(function () { return ({\r\n        onMouseDown: function (e) { return void setActive(true); },\r\n        onMouseUp: function (e) { return void setActive(false); }\r\n    }); }, []);\r\n    return [isActive, bind];\r\n}\r\nexports.default = useActive;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nfunction useClickOutside(refs, onClickOutside) {\r\n    var _a = react_1.useState(false), isActive = _a[0], setActive = _a[1];\r\n    var isOutside = react_1.useCallback(function (e) {\r\n        var test = refs.map(function (ref) {\r\n            return (ref.current !== null && !ref.current.contains(e.target));\r\n        });\r\n        return test.every(Boolean);\r\n    }, [refs]);\r\n    var mousedown = react_1.useCallback(function (e) {\r\n        if (isOutside(e)) {\r\n            setActive(true);\r\n            onClickOutside(e);\r\n        }\r\n    }, [isOutside, onClickOutside]);\r\n    var mouseup = react_1.useCallback(function (e) {\r\n        if (isOutside(e)) {\r\n            setActive(false);\r\n        }\r\n    }, [isOutside]);\r\n    react_1.useEffect(function () {\r\n        document.addEventListener('mousedown', mousedown);\r\n        document.addEventListener('mouseup', mouseup);\r\n        return function () {\r\n            document.removeEventListener('mousedown', mousedown);\r\n            document.removeEventListener('mouseup', mouseup);\r\n        };\r\n    }, [refs, onClickOutside]);\r\n    return [isActive];\r\n}\r\nexports.default = useClickOutside;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = __importDefault(require(\"react\"));\r\nfunction useFocus() {\r\n    var _a = react_1.default.useState(false), isFocused = _a[0], setFocused = _a[1];\r\n    var bind = react_1.default.useMemo(function () { return ({\r\n        onFocus: function (e) { return void setFocused(true); },\r\n        onBlur: function (e) { return void setFocused(false); }\r\n    }); }, []);\r\n    return [isFocused, bind];\r\n}\r\nexports.default = useFocus;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = __importDefault(require(\"react\"));\r\nfunction useHover() {\r\n    var _a = react_1.default.useState(false), isHovered = _a[0], setHovered = _a[1];\r\n    var bind = react_1.default.useMemo(function () { return ({\r\n        onMouseEnter: function (e) { return void setHovered(true); },\r\n        onMouseLeave: function (e) { return void setHovered(false); }\r\n    }); }, []);\r\n    return [isHovered, bind];\r\n}\r\nexports.default = useHover;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nfunction useMousePosition() {\r\n    var _a = react_1.useState(0), x = _a[0], setX = _a[1];\r\n    var _b = react_1.useState(0), y = _b[0], setY = _b[1];\r\n    var bind = react_1.useMemo(function () { return ({\r\n        onMouseMove: function (e) {\r\n            setX(e.nativeEvent.offsetX);\r\n            setY(e.nativeEvent.offsetY);\r\n        }\r\n    }); }, []);\r\n    return [x, y, bind];\r\n}\r\nexports.default = useMousePosition;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nvar resize_observer_polyfill_1 = __importDefault(require(\"resize-observer-polyfill\"));\r\nfunction useResizeObserver(ref) {\r\n    var _a = react_1.useState(0), width = _a[0], setWidth = _a[1];\r\n    var _b = react_1.useState(0), height = _b[0], setHeight = _b[1];\r\n    react_1.useLayoutEffect(function () {\r\n        var resizeObserver = new resize_observer_polyfill_1.default(function (entries) {\r\n            setWidth(entries[0].contentRect.width);\r\n            setHeight(entries[0].contentRect.height);\r\n        });\r\n        if (ref.current !== null) {\r\n            resizeObserver.observe(ref.current);\r\n        }\r\n        return function () { return void resizeObserver.disconnect(); };\r\n    }, [ref]);\r\n    return [width, height];\r\n}\r\nexports.default = useResizeObserver;\r\n//# sourceMappingURL=index.js.map","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = __importDefault(require(\"react\"));\r\nfunction useTouch() {\r\n    var _a = react_1.default.useState(false), isTouched = _a[0], setTouched = _a[1];\r\n    var bind = react_1.default.useMemo(function () { return ({\r\n        onTouchStart: function (e) { return void setTouched(true); },\r\n        onTouchEnd: function (e) { return void setTouched(false); }\r\n    }); }, []);\r\n    return [isTouched, bind];\r\n}\r\nexports.default = useTouch;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = __importDefault(require(\"react\"));\r\nfunction useWindowResize() {\r\n    var _a = react_1.default.useState(window.innerWidth), width = _a[0], setWidth = _a[1];\r\n    var _b = react_1.default.useState(window.innerHeight), height = _b[0], setHeight = _b[1];\r\n    var resize = react_1.default.useCallback(function () {\r\n        setWidth(window.innerWidth);\r\n        setHeight(window.innerHeight);\r\n    }, []);\r\n    react_1.default.useEffect(function () {\r\n        window.addEventListener('resize', resize);\r\n        return function () { return void window.removeEventListener('resize', resize); };\r\n    }, [resize]);\r\n    return [width, height];\r\n}\r\nexports.default = useWindowResize;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar useEffectOnce_1 = __importDefault(require(\"../useEffectOnce\"));\r\nvar useMount = function (fn) {\r\n    useEffectOnce_1.default(function () {\r\n        fn();\r\n    });\r\n};\r\nexports.default = useMount;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar react_1 = require(\"react\");\r\nvar useEffectOnce_1 = __importDefault(require(\"../useEffectOnce\"));\r\nvar useUnmount = function (fn) {\r\n    var fnRef = react_1.useRef(fn);\r\n    // update the ref each render so if it change the newest callback will be invoked\r\n    fnRef.current = fn;\r\n    useEffectOnce_1.default(function () { return function () { return fnRef.current(); }; });\r\n};\r\nexports.default = useUnmount;\r\n//# sourceMappingURL=index.js.map","import * as React from 'react';\r\n\r\ntype Props = {\r\n  child: React.ReactNode;\r\n  style: React.CSSProperties;\r\n};\r\n\r\nexport default function SplitPane(props: Props) {\r\n  const { style, child } = props;\r\n  return (\r\n    <div className={'split-pane'} style={style}>\r\n      {child}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { SplitOrientation } from './Split';\r\n\r\ntype Props = {\r\n  orientation: SplitOrientation;\r\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n};\r\n\r\nexport default function Resizer(props: Props) {\r\n  const { orientation, onMouseDown } = props;\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  let resizerClassName = 'resizer';\r\n  const isHorizontal = orientation === SplitOrientation.Horizontal;\r\n  if (isHorizontal) {\r\n    resizerClassName += ' horizontal';\r\n  } else {\r\n    resizerClassName += ' vertical';\r\n  }\r\n\r\n  return <div className={resizerClassName} onMouseDown={onMouseDown} />;\r\n}\r\n"],"sourceRoot":""}