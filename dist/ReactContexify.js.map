{"version":3,"sources":["webpack://ReactContexify/webpack/universalModuleDefinition","webpack://ReactContexify/webpack/bootstrap","webpack://ReactContexify/external \"react\"","webpack://ReactContexify/./src/utils/styles.ts","webpack://ReactContexify/external \"prop-types\"","webpack://ReactContexify/./node_modules/classnames/index.js","webpack://ReactContexify/./src/cassowary/expression.ts","webpack://ReactContexify/./src/utils/actions.ts","webpack://ReactContexify/./src/utils/eventManager.ts","webpack://ReactContexify/./src/components/Split.tsx","webpack://ReactContexify/./src/cassowary/strength.ts","webpack://ReactContexify/./src/components/cloneItem.ts","webpack://ReactContexify/./src/cassowary/constraint.ts","webpack://ReactContexify/./src/cassowary/maptype.ts","webpack://ReactContexify/./src/cassowary/variable.ts","webpack://ReactContexify/./src/index.ts","webpack://ReactContexify/./src/components/Menu.tsx","webpack://ReactContexify/./src/components/Portal.tsx","webpack://ReactContexify/external \"react-dom\"","webpack://ReactContexify/./src/components/Item.tsx","webpack://ReactContexify/./src/components/Separator.tsx","webpack://ReactContexify/./src/components/IconFont.tsx","webpack://ReactContexify/./src/components/Submenu.tsx","webpack://ReactContexify/./src/components/MenuProvider.tsx","webpack://ReactContexify/./src/utils/contextMenu.ts","webpack://ReactContexify/./src/utils/util.ts","webpack://ReactContexify/./src/utils/splitUtils.ts","webpack://ReactContexify/./src/cassowary/index.ts","webpack://ReactContexify/./src/cassowary/solver.ts","webpack://ReactContexify/./src/components/SplitPane.tsx","webpack://ReactContexify/./src/components/Resizer.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__16__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","styles","menu","submenu","submenuArrow","separator","item","itemDisabled","itemContent","itemIcon","theme","animationWillEnter","animationWillLeave","light","dark","animation","fade","flip","pop","zoom","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","join","default","undefined","maptype_1","variable_1","Expression","parsed","parseArgs","this","_terms","terms","_constant","constant","result","size","pair","itemAt","first","second","plus","minus","multiply","coefficient","divide","isConstant","toString","array","map","args","createMap","Variable","setDefault","j","k","terms2","termPair","Error","value2","HIDE_ALL","DISPLAY_MENU","id","eventManager","eventList","Map","on","event","callback","_this","has","set","Set","add","delete","emit","_i","forEach","cb","concat","console","warn","SplitOrientation","React","__importStar","util_1","splitUtils_1","cassowary_1","SplitPane_1","Resizer_1","useState","useEffect","useRef","Split","props","setState","containerRef","indexRef","solverRef","varsRef","splitsRef","forceUpdate","document","addEventListener","onResizerMouseMove","onResizerMouseUp","newSplits","canonicalizeSplits","setupSolver","getContainerSize","orientation","querySolver","current","onChange","removeEventListener","splits","layout","documentElement","style","pointerEvents","slice","e","vars","isVertical","Vertical","rect","getBoundingClientRect","mouseOffset","clientX","left","clientY","top","index","solver","suggestValue","updateVariables","preventDefault","container","Horizontal","clientHeight","clientWidth","count","Children","children","containerSize","info","assign","defaultSplit","min","max","assert","Solver","addEditVariable","Strength","strong","cn","Constraint","Operator","Eq","addConstraint","_a","right","Ge","Le","weak","suggestVarValues","x","y","isHorizontal","child","flexBasis","toCSSPx","Math","round","flex","createElement","SplitPane","Resizer","onMouseDown","ev","varilable","removeEditVariable","medium","onResizerMouseDown","className","ref","flexDirection","a","b","w","clip","required","react_1","cloneItem","toArray","filter","Boolean","cloneElement","expression_1","strength_1","expression","operator","rhs","strength","_id","CnId","_operator","_strength","_expression","op","IndexedMap","empty","contains","find","Pair","insert","erase","last","copy","_value","_context","VarId","_name","setName","context","setContext","setValue","toJSON","Menu_1","Menu","Item_1","Item","Separator_1","Separator","IconFont_1","IconFont","Submenu_1","Submenu","MenuProvider_1","MenuProvider","contextMenu_1","contextMenu","styles_1","Split_1","Split_2","prop_types_1","__importDefault","classnames_1","cloneItem_1","Portal_1","actions_1","eventManager_1","KEY","ENTER","ESC","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","_super","state","visible","nativeEvent","propsFromTrigger","onShown","onHidden","unsub","bindWindowEvent","hide","handleKeyboard","unBindWindowEvent","onMouseEnter","onMouseLeave","button","ctrlKey","type","keyCode","setRef","menuRef","show","stopPropagation","getMousePosition","setMenuPosition","__extends","componentDidMount","componentWillUnmount","componentDidUpdate","_","prevState","windowWidth","innerWidth","windowHeight","innerHeight","menuWidth","offsetWidth","menuHeight","offsetHeight","_b","pos","changedTouches","render","_c","cssClasses","menuStyle","__assign","opacity","Portal","propTypes","oneOfType","string","number","isRequired","node","Component","react_dom_1","canRender","body","appendChild","removeChild","createPortal","PureComponent","noop","handleClick","isDisabled","onClick","data","disabled","role","func","bool","defaultProps","bottom","arrow","label","submenuStyle","childrenRefs","handleEvent","setChildRef","getChildren","component","storeRef","rest","__rest","isValidElement","attributes","hideAll","toAddress","padRight","String","padLeft","x86JumpInstructions","isBranch","instr","indexOf","mnemonic","base64DecodeMap","base64DecodeMapOffset","base64EOF","_concat3array","_concat4array","concat3","s0","s1","s2","concat4","s3","base64EncodeBytes","bytes","chunk","base64","encodings","byteLength","byteRemainder","mainLength","decodeRestrictedBase64ToBytes","encoded","ch","code","code2","len","padding","charAt","decoded","Uint8Array","charCodeAt","layoutThrottleDuration","layoutTimeout","message","clearTimeout","setTimeout","dispatchEvent","Event","resetDOMSelection","getSelection","removeAllRanges","clamp","readUploadedFile","inputFile","readAs","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","readAsText","readAsArrayBuffer","nextKey","getNextKey","assignObject","to","from","__export","SymbolType","constraint_1","_cnMap","_rowMap","_varMap","_editMap","_infeasibleRows","_objective","Row","_artificial","_idTick","createConstraint","lhs","constraint","_createRow","row","tag","subject","_chooseSubject","Invalid","allDummies","nearZero","marker","_addWithArtificialVariable","solveFor","_substitute","_optimize","removeConstraint","cnPair","_removeConstraintEffects","rowPair","leaving","_getMarkerLeavingSymbol","solveForEx","hasConstraint","variable","expr","editPair","hasEditVariable","rows","delta","_dualOptimize","other","rowPair_1","coeff","coefficientFor","External","_getVarSymbol","_makeSymbol","symbol","basicPair","insertRow","insertSymbol","objective","INVALID_SYMBOL","slack","Slack","error","errplus","errminus","dummy","Dummy","reverseSign","cells","art","success","basicRow","entering","_anyPivotableSymbol","removeSymbol","substitute","_getEnteringSymbol","_getLeavingSymbol","infeasible","_getDualEnteringSymbol","ratio","Number","MAX_VALUE","found","temp","temp_ratio","dmax","r1","r2","invalid","third","_removeMarkerEffects","_type","_cellMap","theCopy","resizerClassName"],"mappings":"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","file":"ReactContexify.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactContexify\"] = factory(require(\"react\"), require(\"prop-types\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactContexify\"] = factory(root[\"react\"], root[\"prop-types\"], root[\"react-dom\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__16__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*\n * css classes mapping\n * */\nexport const styles = {\n  menu: 'react-contexify',\n  submenu: 'react-contexify react-contexify__submenu',\n  submenuArrow: 'react-contexify__submenu-arrow',\n  separator: 'react-contexify__separator',\n  item: 'react-contexify__item',\n  itemDisabled: 'react-contexify__item--disabled',\n  itemContent: 'react-contexify__item__content',\n  itemIcon: 'react-contexify__item__icon',\n  theme: 'react-contexify__theme--',\n  animationWillEnter: 'react-contexify__will-enter--',\n  animationWillLeave: 'react-contexify__will-leave--'\n};\n\n// I could use enum instead for both interfaces\n\nexport interface BuiltInTheme {\n  light: string;\n  dark: string;\n}\n\nexport interface BuiltInAnimation {\n  fade: string;\n  flip: string;\n  pop: string;\n  zoom: string;\n}\n\nexport const theme: BuiltInTheme = {\n  light: 'light',\n  dark: 'dark'\n};\n\nexport const animation: BuiltInAnimation = {\n  fade: 'fade',\n  flip: 'flip',\n  pop: 'pop',\n  zoom: 'zoom'\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport { createMap, IMap } from './maptype';\nimport { Variable } from './variable';\n\n/**\n * An expression of variable terms and a constant.\n *\n * The constructor accepts an arbitrary number of parameters,\n * each of which must be one of the following types:\n *  - number\n *  - Variable\n *  - Expression\n *  - 2-tuple of [number, Variable|Expression]\n *\n * The parameters are summed. The tuples are multiplied.\n *\n * @class\n * @param {...(number|Variable|Expression|Array)} args\n */\nexport class Expression {\n  constructor(...args: any[]);\n  constructor() {\n    let parsed = parseArgs(arguments);\n    this._terms = parsed.terms;\n    this._constant = parsed.constant;\n  }\n\n  /**\n   * Returns the mapping of terms in the expression.\n   *\n   * This *must* be treated as const.\n   * @private\n   */\n  public terms(): IMap<Variable, number> {\n    return this._terms;\n  }\n\n  /**\n   * Returns the constant of the expression.\n   * @private\n   */\n  public constant(): number {\n    return this._constant;\n  }\n\n  /**\n   * Returns the computed value of the expression.\n   *\n   * @private\n   * @return {Number} computed value of the expression\n   */\n  public value(): number {\n    let result = this._constant;\n    for (let i = 0, n = this._terms.size(); i < n; i++) {\n      let pair = this._terms.itemAt(i);\n      result += pair.first.value() * pair.second;\n    }\n    return result;\n  }\n\n  /**\n   * Creates a new Expression by adding a number, variable or expression\n   * to the expression.\n   *\n   * @param {Number|Variable|Expression} value Value to add.\n   * @return {Expression} expression\n   */\n  public plus(value: number | Variable | Expression): Expression {\n    return new Expression(this, value);\n  }\n\n  /**\n   * Creates a new Expression by substracting a number, variable or expression\n   * from the expression.\n   *\n   * @param {Number|Variable|Expression} value Value to substract.\n   * @return {Expression} expression\n   */\n  public minus(value: number | Variable | Expression): Expression {\n    return new Expression(\n      this,\n      typeof value === 'number' ? -value : [-1, value]\n    );\n  }\n\n  /**\n   * Creates a new Expression by multiplying with a fixed number.\n   *\n   * @param {Number} coefficient Coefficient to multiply with.\n   * @return {Expression} expression\n   */\n  public multiply(coefficient: number): Expression {\n    return new Expression([coefficient, this]);\n  }\n\n  /**\n   * Creates a new Expression by dividing with a fixed number.\n   *\n   * @param {Number} coefficient Coefficient to divide by.\n   * @return {Expression} expression\n   */\n  public divide(coefficient: number): Expression {\n    return new Expression([1 / coefficient, this]);\n  }\n\n  public isConstant(): boolean {\n    return this._terms.size() == 0;\n  }\n\n  public toString(): string {\n    let result = this._terms.array\n      .map(function(pair) {\n        return pair.second + '*' + pair.first.toString();\n      })\n      .join(' + ');\n\n    if (!this.isConstant() && this._constant !== 0) {\n      result += ' + ';\n    }\n\n    result += this._constant;\n\n    return result;\n  }\n\n  private _terms: IMap<Variable, number>;\n  private _constant: number;\n}\n\n/**\n * An internal interface for the argument parse results.\n */\ninterface IParseResult {\n  terms: IMap<Variable, number>;\n  constant: number;\n}\n\n/**\n * An internal argument parsing function.\n * @private\n */\nfunction parseArgs(args: IArguments): IParseResult {\n  let constant = 0.0;\n  let factory = () => 0.0;\n  let terms = createMap<Variable, number>();\n  for (let i = 0, n = args.length; i < n; ++i) {\n    let item = args[i];\n    if (typeof item === 'number') {\n      constant += item;\n    } else if (item instanceof Variable) {\n      terms.setDefault(item, factory).second += 1.0;\n    } else if (item instanceof Expression) {\n      constant += item.constant();\n      let terms2 = item.terms();\n      for (let j = 0, k = terms2.size(); j < k; j++) {\n        let termPair = terms2.itemAt(j);\n        terms.setDefault(termPair.first, factory).second += termPair.second;\n      }\n    } else if (item instanceof Array) {\n      if (item.length !== 2) {\n        throw new Error('array must have length 2');\n      }\n      let value: number = item[0];\n      let value2 = item[1];\n      if (typeof value !== 'number') {\n        throw new Error('array item 0 must be a number');\n      }\n      if (value2 instanceof Variable) {\n        terms.setDefault(value2, factory).second += value;\n      } else if (value2 instanceof Expression) {\n        constant += value2.constant() * value;\n        let terms2 = value2.terms();\n        for (let j = 0, k = terms2.size(); j < k; j++) {\n          let termPair = terms2.itemAt(j);\n          terms.setDefault(termPair.first, factory).second +=\n            termPair.second * value;\n        }\n      } else {\n        throw new Error('array item 1 must be a variable or expression');\n      }\n    } else {\n      throw new Error('invalid Expression argument: ' + item);\n    }\n  }\n  return { terms, constant };\n}\n","import { MenuId } from '../types';\n\nexport const HIDE_ALL = 0;\nexport const DISPLAY_MENU = (id: MenuId) => `DISPLAY_${id}`;\n","type Callback = (...args: any) => void;\ntype EventId = number | string;\n\ninterface EventManager {\n  eventList: Map<EventId, Set<Callback>>;\n  on: (event: EventId, callback: Callback) => () => boolean;\n  emit: (event: EventId, ...args: any) => boolean;\n}\n\nconst eventManager: EventManager = {\n  eventList: new Map(),\n  on(event, callback) {\n    this.eventList.has(event) || this.eventList.set(event, new Set());\n    this.eventList.get(event)!.add(callback);\n\n    return () => this.eventList.get(event)!.delete(callback);\n  },\n  emit(event, ...args) {\n    if (!this.eventList.has(event)) {\n      console.warn(\n        `<${event}> Event is not registered. Did you forgot to bind the event ?`\n      );\n      return false;\n    }\n    this.eventList.get(event)!.forEach(cb => cb.call(this, ...args));\n\n    return true;\n  }\n};\n\nexport { eventManager };\n","import * as React from 'react';\r\nimport { MouseEvent } from 'react';\r\n// import { EventDispatcher } from \"../../models\";\r\nimport { assert, layout } from '../utils/util';\r\nimport { toCSSPx } from '../utils/splitUtils';\r\nimport { Solver, Variable, Strength, Constraint, Operator } from '../cassowary';\r\nimport { SplitPane } from './SplitPane';\r\nimport { Resizer } from './Resizer';\r\n\r\nconst { useState, useEffect, useRef } = React;\r\nexport enum SplitOrientation {\r\n  Horizontal,\r\n  Vertical\r\n}\r\n\r\nexport interface SplitInfo {\r\n  min?: number;\r\n  max?: number;\r\n  value?: number;\r\n  resize?: 'fixed' | 'stretch';\r\n}\r\n\r\ntype Props = {\r\n  orientation: SplitOrientation;\r\n  onChange?: (splits: SplitInfo[]) => void;\r\n  splits?: SplitInfo[];\r\n  defaultSplit?: SplitInfo;\r\n  children: React.ReactNode;\r\n  name?: string; // TODO: Remove, for debugging.\r\n};\r\n\r\n// type State = {\r\n//   splits: SplitInfo[];\r\n// };\r\n\r\n// const onResizeBegin = new EventDispatcher(\"Resize Begin\");\r\n// const onResizeEnd = new EventDispatcher(\"Resize End\");\r\nexport const Split: React.FC<Props> = props => {\r\n  let containerRef = useRef<HTMLDivElement>(null);\r\n  let indexRef = useRef(-1);\r\n  let solverRef = useRef<Solver>();\r\n  let varsRef = useRef<Variable[]>();\r\n  let splitsRef = useRef<SplitInfo[]>([]);\r\n\r\n  const useForceUpdate = () => {\r\n    const [, setState] = useState();\r\n    return () => setState({});\r\n  };\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', onResizerMouseMove as any);\r\n    document.addEventListener('mouseup', onResizerMouseUp);\r\n    const newSplits = canonicalizeSplits(props);\r\n    setupSolver(newSplits, getContainerSize(props.orientation));\r\n    querySolver(newSplits);\r\n    splitsRef.current = newSplits;\r\n    // forceUpdate();\r\n    props.onChange && props.onChange(newSplits);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', onResizerMouseMove as any);\r\n      document.removeEventListener('mouseup', onResizerMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onResizerMouseUp();\r\n    const splits = canonicalizeSplits(props);\r\n    setupSolver(splits, getContainerSize(props.orientation));\r\n    querySolver(splits);\r\n    splitsRef.current = splits;\r\n    forceUpdate();\r\n    layout();\r\n  }, [props]);\r\n\r\n  const onResizerMouseDown = (i: number) => {\r\n    indexRef.current = i;\r\n    const index = indexRef.current;\r\n    const vars = varsRef.current!;\r\n    const solver = solverRef.current!;\r\n    const varilable = vars[index + 1];\r\n    solver.removeEditVariable(varilable);\r\n    solver.addEditVariable(varilable, Strength.medium);\r\n    // Split.onResizeBegin.dispatch(this);\r\n    window.document.documentElement.style.pointerEvents = 'none';\r\n  };\r\n\r\n  /**\r\n   * This fires for all splits, even if the resizer doesn't belong to this split.\r\n   */\r\n  const onResizerMouseUp = () => {\r\n    if (indexRef.current < 0) {\r\n      return;\r\n    }\r\n    indexRef.current = -1;\r\n    // Split.onResizeEnd.dispatch(this);\r\n    window.document.documentElement.style.pointerEvents = 'auto';\r\n    const newSplits = splitsRef.current.slice();\r\n    querySolver(newSplits);\r\n    return props.onChange && props.onChange(newSplits);\r\n  };\r\n\r\n  const onResizerMouseMove = (e: MouseEvent<any>) => {\r\n    if (indexRef.current < 0) {\r\n      return;\r\n    }\r\n    const vars = varsRef.current!;\r\n    const isVertical = props.orientation === SplitOrientation.Vertical;\r\n    const container = containerRef.current!;\r\n    const rect = container.getBoundingClientRect();\r\n    const mouseOffset = isVertical\r\n      ? e.clientX - rect.left\r\n      : e.clientY - rect.top;\r\n\r\n    const index = indexRef.current;\r\n    const solver = solverRef.current!;\r\n    solver.suggestValue(vars[index + 1], mouseOffset);\r\n    // this.solver.resolve();\r\n    solver.updateVariables();\r\n    const newSplits = splitsRef.current.slice();\r\n    querySolver(newSplits);\r\n    forceUpdate();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const querySolver = (splits: SplitInfo[]) => {\r\n    const vars = varsRef.current!;\r\n    for (let i = 0; i < splits.length; i++) {\r\n      splits[i].value = vars[i + 1].value() - vars[i].value();\r\n    }\r\n  };\r\n\r\n  const getContainerSize = (orientation: SplitOrientation): number => {\r\n    const container = containerRef.current!;\r\n    return orientation === SplitOrientation.Horizontal\r\n      ? container.clientHeight\r\n      : container.clientWidth;\r\n  };\r\n\r\n  const canonicalizeSplits = (props: Props): SplitInfo[] => {\r\n    const count = React.Children.count(props.children);\r\n    const containerSize = getContainerSize(props.orientation);\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n      let info = {};\r\n      if (props.splits && i < props.splits.length) {\r\n        info = Object.assign(info, props.splits[i]);\r\n      }\r\n      if (props.defaultSplit) {\r\n        info = Object.assign(props.defaultSplit, info);\r\n      }\r\n\r\n      result.push(\r\n        Object.assign(\r\n          {\r\n            min: 32,\r\n            max: containerSize\r\n          },\r\n          info\r\n        )\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Initializes a Cassowary solver and the constraints based on split infos and container size.\r\n   */\r\n  const setupSolver = (splits: SplitInfo[], containerSize: number) => {\r\n    assert(indexRef.current < 0, 'Should not be in a dragging state.');\r\n    //const weak = Cassowary.Strength.weak;\r\n    //// const medium = Cassowary.Strength.medium;\r\n    //const strong = Cassowary.Strength.strong;\r\n    //const required = Cassowary.Strength.required;\r\n\r\n    ////function eq(a1: any, a2: any, strength: number, weight?: number) {\r\n    ////    return new Cassowary.Equation(a1, a2, strength || weak, weight || 0);\r\n    ////}\r\n\r\n    //function geq(a1: any, a2: any, strength: any, weight?: number) {\r\n    //  return new Cassowary.Inequality(a1, Cassowary.GEQ, a2, strength, weight);\r\n    //}\r\n\r\n    //function leq(a1: any, a2: any, strength: any, weight?: number) {\r\n    //  return new Cassowary.Inequality(a1, Cassowary.LEQ, a2, strength, weight);\r\n    //}\r\n\r\n    // f     1               2           3   ...    l\r\n    // |-----|---------------|-----------|----------|\r\n\r\n    // const vars: CassowaryVar[] = this.vars = [new Cassowary.Variable()];\r\n    varsRef.current = [new Variable()];\r\n    const vars = varsRef.current;\r\n    solverRef.current = new Solver();\r\n    const solver = solverRef.current;\r\n\r\n    // Create Cassowary variables, these the dragged position as an offset from the origin.\r\n    for (let i = 0; i < splits.length; i++) {\r\n      vars.push(new Variable());\r\n    }\r\n\r\n    solver.addEditVariable(vars[0], Strength.strong);\r\n    solver.suggestValue(vars[0], 0);\r\n\r\n    let cn = new Constraint(vars[0], Operator.Eq, 0);\r\n    solver.addConstraint(cn);\r\n\r\n    solver.addEditVariable(vars[vars.length - 1], Strength.strong);\r\n    solver.suggestValue(vars[vars.length - 1], containerSize);\r\n\r\n    cn = new Constraint(vars[vars.length - 1], Operator.Eq, containerSize);\r\n    solver.addConstraint(cn);\r\n\r\n    for (let i = 0; i < vars.length - 1; i++) {\r\n      const { min, max } = splits[i];\r\n      const left = vars[i];\r\n      const right = vars[i + 1];\r\n      solver.addConstraint(\r\n        new Constraint(right.minus(left), Operator.Ge, min, Strength.strong)\r\n      );\r\n      solver.addConstraint(\r\n        new Constraint(right.minus(left), Operator.Le, max, Strength.strong)\r\n      );\r\n    }\r\n\r\n    // Add stays for the variables representing the dragged panes. This causes them to\r\n    // try and remain in their dragged position unless the constraints prevent that.\r\n    for (let i = 1; i < vars.length - 1; i++) {\r\n      // solver.addStay(vars[i], weak);\r\n      solver.addEditVariable(vars[i], Strength.weak);\r\n      solver.suggestValue(vars[i], 10000);\r\n    }\r\n\r\n    suggestVarValues(splits);\r\n  };\r\n\r\n  const suggestVarValues = (splits: SplitInfo[]) => {\r\n    const vars = varsRef.current!;\r\n    const solver = solverRef.current!;\r\n    for (let i = 0; i < vars.length - 1; i++) {\r\n      const x = vars[i];\r\n      const y = vars[i + 1];\r\n\r\n      if (splits[i].value) {\r\n        if (i < vars.length - 2) {\r\n          solver.suggestValue(y, x.value() + splits[i].value!);\r\n        } else {\r\n          solver.suggestValue(x, y.value() - splits[i].value!);\r\n        }\r\n        solver.updateVariables();\r\n      }\r\n    }\r\n  };\r\n  const isHorizontal = props.orientation === SplitOrientation.Horizontal;\r\n  const count = React.Children.count(props.children);\r\n  const children: React.ReactNode[] = [];\r\n  React.Children.forEach(props.children, (child, i) => {\r\n    const style: React.CSSProperties = {};\r\n    if (i < count - 1 && i < splitsRef.current.length) {\r\n      style.flexBasis = toCSSPx(\r\n        Math.round(splitsRef.current[i].value as number)\r\n      );\r\n    } else {\r\n      style.flex = 1;\r\n    }\r\n\r\n    children.push(<SplitPane key={i} style={style} child={child} />);\r\n    if (i < count - 1) {\r\n      children.push(\r\n        <Resizer\r\n          key={`Resizer-${i}`}\r\n          orientation={props.orientation}\r\n          onMouseDown={ev => onResizerMouseDown(i)}\r\n        />\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div\r\n      className=\"split\"\r\n      ref={containerRef}\r\n      style={{ flexDirection: isHorizontal ? 'column' : 'row' }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * @class Strength\n */\nexport class Strength {\n  /**\n   * Create a new symbolic strength.\n   *\n   * @param a strong\n   * @param b medium\n   * @param c weak\n   * @param [w] weight\n   * @return strength\n   */\n  static create(a: number, b: number, c: number, w: number = 1.0) {\n    let result: number = 0.0;\n    result += Math.max(0.0, Math.min(1000.0, a * w)) * 1000000.0;\n    result += Math.max(0.0, Math.min(1000.0, b * w)) * 1000.0;\n    result += Math.max(0.0, Math.min(1000.0, c * w));\n    return result;\n  }\n\n  /**\n   * The 'required' symbolic strength.\n   */\n  static required = Strength.create(1000.0, 1000.0, 1000.0);\n\n  /**\n   * The 'strong' symbolic strength.\n   */\n  static strong = Strength.create(1.0, 0.0, 0.0);\n\n  /**\n   * The 'medium' symbolic strength.\n   */\n  static medium = Strength.create(0.0, 1.0, 0.0);\n\n  /**\n   * The 'weak' symbolic strength.\n   */\n  static weak = Strength.create(0.0, 0.0, 1.0);\n\n  /**\n   * Clip a symbolic strength to the allowed min and max.\n   * @private\n   */\n  static clip(value: number) {\n    return Math.max(0.0, Math.min(Strength.required, value));\n  }\n}\n","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\nimport { TriggerEvent } from '../types';\n\nexport function cloneItem(\n  children: ReactNode,\n  props: { nativeEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(child => Boolean(child)),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport { Expression } from './expression';\nimport { Strength } from './strength';\nimport { Variable } from './variable';\n\n/**\n * An enum defining the linear constraint operators.\n *\n * |Value|Operator|Description|\n * |----|-----|-----|\n * |`Le`|<=|Less than equal|\n * |`Ge`|>=|Greater than equal|\n * |`Eq`|==|Equal|\n *\n * @enum {Number}\n */\nexport enum Operator {\n  Le, // <=\n  Ge, // >=\n  Eq // ==\n}\n\n/**\n * A linear constraint equation.\n *\n * A constraint equation is composed of an expression, an operator,\n * and a strength. The RHS of the equation is implicitly zero.\n *\n * @class\n * @param {Expression} expression The constraint expression (LHS).\n * @param {Operator} operator The equation operator.\n * @param {Expression} [rhs] Right hand side of the expression.\n * @param {Number} [strength=Strength.required] The strength of the constraint.\n */\nexport class Constraint {\n  constructor(\n    expression: Expression | Variable,\n    operator: Operator,\n    rhs?: Expression | Variable | number,\n    strength: number = Strength.required\n  ) {\n    this._operator = operator;\n    this._strength = Strength.clip(strength);\n    if (rhs === undefined && expression instanceof Expression) {\n      this._expression = expression;\n    } else {\n      this._expression = expression.minus(rhs!);\n    }\n  }\n\n  /**\n   * Returns the unique id number of the constraint.\n   * @private\n   */\n  public id(): number {\n    return this._id;\n  }\n\n  /**\n   * Returns the expression of the constraint.\n   *\n   * @return {Expression} expression\n   */\n  public expression(): Expression {\n    return this._expression;\n  }\n\n  /**\n   * Returns the relational operator of the constraint.\n   *\n   * @return {Operator} linear constraint operator\n   */\n  public op(): Operator {\n    return this._operator;\n  }\n\n  /**\n   * Returns the strength of the constraint.\n   *\n   * @return {Number} strength\n   */\n  public strength(): number {\n    return this._strength;\n  }\n\n  public toString(): string {\n    return (\n      this._expression.toString() +\n      ' ' +\n      ['<=', '>=', '='][this._operator] +\n      ' 0 (' +\n      this._strength.toString() +\n      ')'\n    );\n  }\n\n  private _expression: Expression;\n  private _operator: Operator;\n  private _strength: number;\n  private _id: number = CnId++;\n}\n\n/**\n * The internal constraint id counter.\n * @private\n */\nlet CnId = 0;\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nexport interface IMap<T extends { id(): number }, U> extends IndexedMap<T, U> {}\n\nexport function createMap<T extends { id(): number }, U>(): IMap<T, U> {\n  return new IndexedMap<T, U>();\n}\n\nclass IndexedMap<T extends { id(): number }, U> {\n  public index = {} as { [id: number]: number | undefined };\n  public array = [] as Array<Pair<T, U>>;\n\n  /**\n   * Returns the number of items in the array.\n   */\n  public size(): number {\n    return this.array.length;\n  }\n\n  /**\n   * Returns true if the array is empty.\n   */\n  public empty(): boolean {\n    return this.array.length === 0;\n  }\n\n  /**\n   * Returns the item at the given array index.\n   *\n   * @param index The integer index of the desired item.\n   */\n  public itemAt(index: number): Pair<T, U> {\n    return this.array[index];\n  }\n\n  /**\n   * Returns true if the key is in the array, false otherwise.\n   *\n   * @param key The key to locate in the array.\n   */\n  public contains(key: T) {\n    return this.index[key.id()] !== undefined;\n  }\n\n  /**\n   * Returns the pair associated with the given key, or undefined.\n   *\n   * @param key The key to locate in the array.\n   */\n  public find(key: T) {\n    const i = this.index[key.id()];\n    return i === undefined ? undefined : this.array[i];\n  }\n\n  /**\n   * Returns the pair associated with the key if it exists.\n   *\n   * If the key does not exist, a new pair will be created and\n   * inserted using the value created by the given factory.\n   *\n   * @param key The key to locate in the array.\n   * @param factory The function which creates the default value.\n   */\n  public setDefault(key: T, factory: () => U): Pair<T, U> {\n    const i = this.index[key.id()];\n    if (i === undefined) {\n      const pair = new Pair(key, factory());\n      this.index[key.id()] = this.array.length;\n      this.array.push(pair);\n      return pair;\n    } else {\n      return this.array[i];\n    }\n  }\n\n  /**\n   * Insert the pair into the array and return the pair.\n   *\n   * This will overwrite any existing entry in the array.\n   *\n   * @param key The key portion of the pair.\n   * @param value The value portion of the pair.\n   */\n  public insert(key: T, value: U): Pair<T, U> {\n    const pair = new Pair(key, value);\n    const i = this.index[key.id()];\n    if (i === undefined) {\n      this.index[key.id()] = this.array.length;\n      this.array.push(pair);\n    } else {\n      this.array[i] = pair;\n    }\n    return pair;\n  }\n\n  /**\n   * Removes and returns the pair for the given key, or undefined.\n   *\n   * @param key The key to remove from the map.\n   */\n  public erase(key: T): Pair<T, U> | undefined {\n    const i = this.index[key.id()];\n    if (i === undefined) {\n      return undefined;\n    }\n    this.index[key.id()] = undefined;\n    const pair = this.array[i];\n    const last = this.array.pop();\n    if (pair !== last) {\n      this.array[i] = last!;\n      this.index[last!.first.id()] = i;\n    }\n    return pair;\n  }\n\n  /**\n   * Create a copy of this associative array.\n   */\n  public copy(): IndexedMap<T, U> {\n    const copy = new IndexedMap<T, U>();\n    for (let i = 0; i < this.array.length; i++) {\n      const pair = this.array[i].copy();\n      copy.array[i] = pair;\n      copy.index[pair.first.id()] = i;\n    }\n    return copy;\n  }\n}\n\n/**\n * A class which defines a generic pair object.\n * @private\n */\n// tslint:disable: max-classes-per-file\nclass Pair<T, U> {\n  /**\n   * Construct a new Pair object.\n   *\n   * @param first The first item of the pair.\n   * @param second The second item of the pair.\n   */\n  constructor(public first: T, public second: U) {}\n\n  /**\n   * Create a copy of the pair.\n   */\n  public copy() {\n    return new Pair(this.first, this.second);\n  }\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport { Expression } from './expression';\n\n/**\n * The primary user constraint variable.\n *\n * @class\n * @param {String} [name=\"\"] The name to associated with the variable.\n */\nexport class Variable {\n  constructor(name: string = '') {\n    this._name = name;\n  }\n\n  /**\n   * Returns the unique id number of the variable.\n   * @private\n   */\n  public id(): number {\n    return this._id;\n  }\n\n  /**\n   * Returns the name of the variable.\n   *\n   * @return {String} name of the variable\n   */\n  public name(): string {\n    return this._name;\n  }\n\n  /**\n   * Set the name of the variable.\n   *\n   * @param {String} name Name of the variable\n   */\n  public setName(name: string): void {\n    this._name = name;\n  }\n\n  /**\n   * Returns the user context object of the variable.\n   * @private\n   */\n  public context(): any {\n    return this._context;\n  }\n\n  /**\n   * Set the user context object of the variable.\n   * @private\n   */\n  public setContext(context: any): void {\n    this._context = context;\n  }\n\n  /**\n   * Returns the value of the variable.\n   *\n   * @return {Number} Calculated value\n   */\n  public value(): number {\n    return this._value;\n  }\n\n  /**\n   * Set the value of the variable.\n   * @private\n   */\n  public setValue(value: number): void {\n    this._value = value;\n  }\n\n  /**\n   * Creates a new Expression by adding a number, variable or expression\n   * to the variable.\n   *\n   * @param {Number|Variable|Expression} value Value to add.\n   * @return {Expression} expression\n   */\n  public plus(value: number | Variable | Expression): Expression {\n    return new Expression(this, value);\n  }\n\n  /**\n   * Creates a new Expression by substracting a number, variable or expression\n   * from the variable.\n   *\n   * @param {Number|Variable|Expression} value Value to substract.\n   * @return {Expression} expression\n   */\n  public minus(value: number | Variable | Expression): Expression {\n    return new Expression(\n      this,\n      typeof value === 'number' ? -value : [-1, value]\n    );\n  }\n\n  /**\n   * Creates a new Expression by multiplying with a fixed number.\n   *\n   * @param {Number} coefficient Coefficient to multiply with.\n   * @return {Expression} expression\n   */\n  public multiply(coefficient: number): Expression {\n    return new Expression([coefficient, this]);\n  }\n\n  /**\n   * Creates a new Expression by dividing with a fixed number.\n   *\n   * @param {Number} coefficient Coefficient to divide by.\n   * @return {Expression} expression\n   */\n  public divide(coefficient: number): Expression {\n    return new Expression([1 / coefficient, this]);\n  }\n\n  /**\n   * Returns the JSON representation of the variable.\n   * @private\n   */\n  public toJSON(): any {\n    return {\n      name: this._name,\n      value: this._value\n    };\n  }\n\n  public toString(): string {\n    return this._context + '[' + this._name + ':' + this._value + ']';\n  }\n\n  private _name: string;\n  private _value: number = 0.0;\n  private _context: any = null;\n  private _id: number = VarId++;\n}\n\n/**\n * The internal variable id counter.\n * @private\n */\nlet VarId = 0;\n","export { Menu } from './components/Menu';\nexport { Item } from './components/Item';\nexport { Separator } from './components/Separator';\nexport { IconFont } from './components/IconFont';\nexport { Submenu } from './components/Submenu';\nexport { MenuProvider } from './components/MenuProvider';\n\nexport { contextMenu } from './utils/contextMenu';\nexport { theme, animation } from './utils/styles';\n\nexport { Split } from './components/Split';\nexport { SplitOrientation } from './components/Split';\nexport { SplitInfo } from './components/Split';\n","/* global: window */\nimport React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { cloneItem } from './cloneItem';\nimport { Portal } from './Portal';\n\nimport { HIDE_ALL, DISPLAY_MENU } from '../utils/actions';\nimport { styles } from '../utils/styles';\nimport { eventManager } from '../utils/eventManager';\nimport { TriggerEvent, StyleProps, MenuId } from '../types';\n\nconst KEY = {\n  ENTER: 13,\n  ESC: 27,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39\n};\n\nexport interface MenuProps extends StyleProps {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to `.react-contexify__will-enter--${given animation}`\n   *\n   * Built-in animations are fade, flip, pop, zoom\n   */\n  animation?: string;\n\n  /**\n   * Invoked when the menu is shown.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked when the menu is hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  nativeEvent: TriggerEvent;\n  propsFromTrigger: object;\n}\n\nclass Menu extends Component<MenuProps, MenuState> {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    children: PropTypes.node.isRequired,\n    theme: PropTypes.string,\n    animation: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  state = {\n    x: 0,\n    y: 0,\n    visible: false,\n    nativeEvent: {} as TriggerEvent,\n    propsFromTrigger: {},\n    onShown: null,\n    onHidden: null\n  };\n\n  menuRef!: HTMLDivElement;\n  unsub: (() => boolean)[] = [];\n\n  componentDidMount() {\n    this.unsub.push(eventManager.on(DISPLAY_MENU(this.props.id), this.show));\n    this.unsub.push(eventManager.on(HIDE_ALL, this.hide));\n  }\n\n  componentWillUnmount() {\n    this.unsub.forEach(cb => cb());\n    this.unBindWindowEvent();\n  }\n\n  componentDidUpdate(_: Readonly<MenuProps>, prevState: Readonly<MenuState>) {\n    if (this.state.visible !== prevState.visible) {\n      if (this.state.visible && this.props.onShown) {\n        this.props.onShown();\n      } else if (!this.state.visible && this.props.onHidden) {\n        this.props.onHidden();\n      }\n    }\n  }\n\n  bindWindowEvent = () => {\n    window.addEventListener('resize', this.hide);\n    window.addEventListener('contextmenu', this.hide);\n    window.addEventListener('mousedown', this.hide);\n    window.addEventListener('click', this.hide);\n    window.addEventListener('scroll', this.hide);\n    window.addEventListener('keydown', this.handleKeyboard);\n  };\n\n  unBindWindowEvent = () => {\n    window.removeEventListener('resize', this.hide);\n    window.removeEventListener('contextmenu', this.hide);\n    window.removeEventListener('mousedown', this.hide);\n    window.removeEventListener('click', this.hide);\n    window.removeEventListener('scroll', this.hide);\n    window.removeEventListener('keydown', this.handleKeyboard);\n  };\n\n  onMouseEnter = () => window.removeEventListener('mousedown', this.hide);\n\n  onMouseLeave = () => window.addEventListener('mousedown', this.hide);\n\n  hide = (event?: Event) => {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    this.unBindWindowEvent();\n    this.setState({ visible: false });\n  };\n\n  handleKeyboard = (e: KeyboardEvent) => {\n    if (e.keyCode === KEY.ENTER || e.keyCode === KEY.ESC) {\n      this.unBindWindowEvent();\n      this.setState({ visible: false });\n    }\n  };\n\n  setRef = (ref: HTMLDivElement) => {\n    this.menuRef = ref;\n  };\n\n  setMenuPosition() {\n    const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = this.menuRef;\n    let { x, y } = this.state;\n\n    if (x + menuWidth > windowWidth) {\n      x -= x + menuWidth - windowWidth;\n    }\n\n    if (y + menuHeight > windowHeight) {\n      y -= y + menuHeight - windowHeight;\n    }\n\n    this.setState(\n      {\n        x,\n        y\n      },\n      this.bindWindowEvent\n    );\n  }\n\n  getMousePosition(e: TriggerEvent) {\n    const pos = {\n      x: e.clientX,\n      y: e.clientY\n    };\n\n    if (\n      e.type === 'touchend' &&\n      (!pos.x || !pos.y) &&\n      (e.changedTouches && e.changedTouches.length > 0)\n    ) {\n      pos.x = e.changedTouches[0].clientX;\n      pos.y = e.changedTouches[0].clientY;\n    }\n\n    if (!pos.x || pos.x < 0) {\n      pos.x = 0;\n    }\n\n    if (!pos.y || pos.y < 0) {\n      pos.y = 0;\n    }\n\n    return pos;\n  }\n\n  show = (e: TriggerEvent, props: object) => {\n    e.stopPropagation();\n    eventManager.emit(HIDE_ALL);\n\n    const { x, y } = this.getMousePosition(e);\n\n    this.setState(\n      {\n        visible: true,\n        x,\n        y,\n        nativeEvent: e,\n        propsFromTrigger: props\n      },\n      this.setMenuPosition\n    );\n  };\n\n  render() {\n    const { theme, animation, style, className, children } = this.props;\n    const { visible, nativeEvent, propsFromTrigger, x, y } = this.state;\n\n    const cssClasses = cx(styles.menu, className, {\n      [styles.theme + theme]: theme,\n      [styles.animationWillEnter + animation]: animation\n    });\n    const menuStyle = {\n      ...style,\n      left: x,\n      top: y + 1,\n      opacity: 1\n    };\n\n    return (\n      <Portal>\n        {visible && (\n          <div\n            className={cssClasses}\n            style={menuStyle}\n            ref={this.setRef}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n          >\n            <div>\n              {cloneItem(children, {\n                nativeEvent,\n                propsFromTrigger\n              })}\n            </div>\n          </div>\n        )}\n      </Portal>\n    );\n  }\n}\n\nexport { Menu };\n","import { PureComponent, ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\n\nclass Portal extends PureComponent<{ children: ReactNode }> {\n  state = {\n    canRender: false\n  };\n  container = {} as HTMLDivElement;\n\n  componentDidMount() {\n    this.container = document.createElement('div');\n    document.body.appendChild(this.container);\n    this.setState({\n      canRender: true\n    });\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.container);\n  }\n  render() {\n    return (\n      this.state.canRender && createPortal(this.props.children, this.container)\n    );\n  }\n}\n\nexport { Portal };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","import React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { styles } from '../utils/styles';\nimport {\n  MenuItemEventHandler,\n  TriggerEvent,\n  StyleProps,\n  InternalProps\n} from '../types';\n\nexport interface ItemProps extends StyleProps, InternalProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `props`\n   */\n  data?: object;\n\n  /**\n   * Disable or not the `Item`. If a function is used, a boolean must be returned\n   */\n  disabled: boolean | ((args: MenuItemEventHandler) => boolean);\n\n  /**\n   * Callback when the current `Item` is clicked. The callback give you access to the current event and also the data passed\n   * to the `Item`.\n   * `({ event, props }) => ...`\n   */\n  onClick: (args: MenuItemEventHandler) => any;\n}\n\nconst noop = () => {};\n\nclass Item extends Component<ItemProps> {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    data: PropTypes.object,\n    disabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onClick: PropTypes.func,\n    nativeEvent: PropTypes.object,\n    propsFromTrigger: PropTypes.object,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  static defaultProps = {\n    disabled: false,\n    onClick: noop\n  };\n\n  isDisabled: boolean;\n\n  constructor(props: ItemProps) {\n    super(props);\n    const { disabled, nativeEvent, propsFromTrigger, data } = this.props;\n\n    this.isDisabled =\n      typeof disabled === 'function'\n        ? disabled({\n            event: nativeEvent as TriggerEvent,\n            props: { ...propsFromTrigger, ...data }\n          })\n        : disabled;\n  }\n\n  handleClick = (e: React.MouseEvent) => {\n    this.isDisabled\n      ? e.stopPropagation()\n      : this.props.onClick({\n          event: this.props.nativeEvent as TriggerEvent,\n          props: { ...this.props.propsFromTrigger, ...this.props.data }\n        });\n  };\n\n  render() {\n    const { className, style, children } = this.props;\n\n    const cssClasses = cx(styles.item, className, {\n      [`${styles.itemDisabled}`]: this.isDisabled\n    });\n\n    return (\n      <div\n        className={cssClasses}\n        style={style}\n        onClick={this.handleClick}\n        role=\"presentation\"\n      >\n        <div className={styles.itemContent}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport { Item };\n","import React, { SFC } from 'react';\n\nimport { styles } from '../utils/styles';\n\nexport const Separator: SFC = () => <div className={styles.separator} />;\n","import React, { SFC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { styles } from '../utils/styles';\nimport { StyleProps } from '../types';\n\nexport interface IconFontProps extends StyleProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  children?: ReactNode;\n}\n\nconst IconFont: SFC<IconFontProps> = ({ className, style, children }) => (\n  <i className={cx(styles.itemIcon, className)} style={style}>\n    {children || ''}\n  </i>\n);\n\nIconFont.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object\n} as any;\n// Hack till the typedef is fixed.\n\nexport { IconFont };\n","import React, { Component, ReactNode, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { cloneItem } from './cloneItem';\nimport { styles } from '../utils/styles';\nimport {\n  MenuItemEventHandler,\n  TriggerEvent,\n  StyleProps,\n  InternalProps\n} from '../types';\n\nexport interface SubMenuProps extends StyleProps, InternalProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  label: ReactNode;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Render a custom arrow\n   */\n  arrow: ReactNode;\n\n  /**\n   * Disable or not the `Submenu`. If a function is used, a boolean must be returned\n   */\n  disabled: boolean | ((args: MenuItemEventHandler) => boolean);\n}\n\ninterface SubMenuState {\n  left?: string | number;\n  right?: string | number;\n  top?: string | number;\n  bottom?: string | number;\n}\n\nclass Submenu extends Component<SubMenuProps, SubMenuState> {\n  static propTypes = {\n    label: PropTypes.node.isRequired,\n    children: PropTypes.node.isRequired,\n    nativeEvent: PropTypes.object,\n    arrow: PropTypes.node,\n    disabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    arrow: '▶',\n    disabled: false,\n    nativeEvent: {} as TriggerEvent\n  };\n\n  state = {\n    left: '100%',\n    top: 0,\n    bottom: 'initial'\n  };\n\n  menu!: HTMLElement;\n\n  setRef = (ref: HTMLDivElement) => {\n    this.menu = ref;\n  };\n\n  componentDidMount() {\n    const { innerWidth, innerHeight } = window;\n    const rect = this.menu.getBoundingClientRect();\n    const style: SubMenuState = {};\n\n    if (rect.right < innerWidth) {\n      style.left = '100%';\n      style.right = undefined;\n    } else {\n      style.right = '100%';\n      style.left = undefined;\n    }\n\n    if (rect.bottom > innerHeight) {\n      style.bottom = 0;\n      style.top = 'initial';\n    } else {\n      style.bottom = 'initial';\n      style.top = 0;\n    }\n\n    this.setState(style);\n  }\n\n  handleClick(e: SyntheticEvent) {\n    e.stopPropagation();\n  }\n\n  render() {\n    const {\n      arrow,\n      disabled,\n      className,\n      style,\n      label,\n      nativeEvent,\n      children,\n      propsFromTrigger\n    } = this.props;\n\n    const cssClasses = cx(styles.item, className, {\n      [`${styles.itemDisabled}`]:\n        typeof disabled === 'function'\n          ? disabled({\n              event: nativeEvent as TriggerEvent,\n              props: { ...propsFromTrigger }\n            })\n          : disabled\n    });\n\n    const submenuStyle = {\n      ...style,\n      ...this.state\n    };\n\n    return (\n      <div className={cssClasses} role=\"presentation\">\n        <div className={styles.itemContent} onClick={this.handleClick}>\n          {label}\n          <span className={styles.submenuArrow}>{arrow}</span>\n        </div>\n        <div className={styles.submenu} ref={this.setRef} style={submenuStyle}>\n          {cloneItem(children, {\n            propsFromTrigger,\n            nativeEvent: nativeEvent as TriggerEvent\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Submenu };\n","import {\n  Component,\n  createElement,\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactNode,\n  SyntheticEvent,\n  ReactElement\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DISPLAY_MENU } from '../utils/actions';\nimport { eventManager } from '../utils/eventManager';\nimport { MenuId, StyleProps } from '../types';\n\nexport interface MenuProviderProps extends StyleProps {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Any valid node that can be rendered or a function returning a valid react node\n   */\n  component: ReactNode | ((args?: any) => ReactNode);\n\n  /**\n   * Render props\n   */\n  render?: (args?: any) => ReactNode;\n\n  /**\n   * Any react event\n   * `onClick`, `onContextMenu`, ...\n   */\n  event: string;\n\n  /**\n   * Store children ref\n   * `default: true`\n   */\n  storeRef: boolean;\n\n  /**\n   * Any valid object, data are passed to the menu item callback\n   */\n  data?: object;\n}\n\nclass MenuProvider extends Component<MenuProviderProps> {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    children: PropTypes.node.isRequired,\n    component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    render: PropTypes.func,\n    event: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    storeRef: PropTypes.bool,\n    data: PropTypes.object\n  };\n\n  static defaultProps = {\n    component: 'div',\n    event: 'onContextMenu',\n    storeRef: true\n  };\n\n  childrenRefs = [] as HTMLElement[];\n\n  handleEvent = (e: SyntheticEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    eventManager.emit(DISPLAY_MENU(this.props.id), e.nativeEvent, {\n      ref:\n        this.childrenRefs.length === 1\n          ? this.childrenRefs[0]\n          : this.childrenRefs,\n      ...this.props.data\n    });\n  };\n\n  setChildRef = (ref: HTMLElement) =>\n    ref === null || this.childrenRefs.push(ref);\n\n  getChildren() {\n    // remove all the props specific to the provider\n    const {\n      id,\n      component,\n      event,\n      children,\n      className,\n      style,\n      storeRef,\n      data,\n      ...rest\n    } = this.props;\n\n    // reset refs\n    this.childrenRefs = [];\n\n    return Children.map(children, child =>\n      isValidElement(child)\n        ? cloneElement(child as ReactElement<any>, {\n            ...rest,\n            ...(storeRef ? { ref: this.setChildRef } : {})\n          })\n        : child\n    );\n  }\n\n  render() {\n    const { component, render, event, className, style } = this.props;\n    const attributes = {\n      [event]: this.handleEvent,\n      className,\n      style\n    };\n\n    if (typeof render === 'function') {\n      return render({ ...attributes, children: this.getChildren() });\n    }\n\n    return createElement(component as any, attributes, this.getChildren());\n  }\n}\n\nexport { MenuProvider };\n","import { eventManager } from './eventManager';\nimport { HIDE_ALL, DISPLAY_MENU } from './actions';\nimport { MenuId } from '../types';\nimport React, { SyntheticEvent } from 'react';\n\nexport interface ContextMenu {\n  show: (params: {\n    id: MenuId;\n    event: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent;\n    props?: object;\n  }) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props }) {\n    eventManager.emit(\n      DISPLAY_MENU(id),\n      (event as SyntheticEvent).nativeEvent || event,\n      props\n    );\n  },\n  hideAll() {\n    eventManager.emit(HIDE_ALL);\n  }\n};\n\nexport { contextMenu };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// import {\n//   fileTypeForExtension, isBinaryFileType, Directory, FileType, fileTypeForMimeType\n// } from \"./models\";\n\nexport function toAddress(n: number) {\n  let s = n.toString(16);\n  while (s.length < 6) {\n    s = '0' + s;\n  }\n  return '0x' + s;\n}\n\nexport function padRight(s: string, n: number, c: string) {\n  s = String(s);\n  while (s.length < n) {\n    s = s + c;\n  }\n  return s;\n}\n\nexport function padLeft(s: string, n: number, c: string) {\n  s = String(s);\n  while (s.length < n) {\n    s = c + s;\n  }\n  return s;\n}\n\nconst x86JumpInstructions = [\n  'jmp',\n  'ja',\n  'jae',\n  'jb',\n  'jbe',\n  'jc',\n  'je',\n  'jg',\n  'jge',\n  'jl',\n  'jle',\n  'jna',\n  'jnae',\n  'jnb',\n  'jnbe',\n  'jnc',\n  'jne',\n  'jng',\n  'jnge',\n  'jnl',\n  'jnle',\n  'jno',\n  'jnp',\n  'jns',\n  'jnz',\n  'jo',\n  'jp',\n  'jpe',\n  'jpo',\n  'js',\n  'jz'\n];\n\nexport function isBranch(instr: any) {\n  return x86JumpInstructions.indexOf(instr.mnemonic) >= 0;\n}\n\nconst base64DecodeMap = [\n  // starts at 0x2B\n  62,\n  0,\n  0,\n  0,\n  63,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0, // 0x3A-0x40\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0, // 0x5B-0x0x60\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51\n];\n\nconst base64DecodeMapOffset = 0x2b;\nconst base64EOF = 0x3d;\n\nconst _concat3array = new Array(3);\nconst _concat4array = new Array(4);\n// const _concat9array = new Array(9);\n\n/**\n * The concatN() functions concatenate multiple strings in a way that\n * avoids creating intermediate strings, unlike String.prototype.concat().\n *\n * Note that these functions don't have identical behaviour to using '+',\n * because they will ignore any arguments that are |undefined| or |null|.\n * This usually doesn't matter.\n */\n\nexport function concat3(s0: any, s1: any, s2: any) {\n  _concat3array[0] = s0;\n  _concat3array[1] = s1;\n  _concat3array[2] = s2;\n  return _concat3array.join('');\n}\n\nexport function concat4(s0: any, s1: any, s2: any, s3: any) {\n  _concat4array[0] = s0;\n  _concat4array[1] = s1;\n  _concat4array[2] = s2;\n  _concat4array[3] = s3;\n  return _concat4array.join('');\n}\n\n// https://gist.github.com/958841\nexport function base64EncodeBytes(bytes: Uint8Array) {\n  let base64 = '';\n  const encodings =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n  const byteLength = bytes.byteLength;\n  const byteRemainder = byteLength % 3;\n  const mainLength = byteLength - byteRemainder;\n\n  let a;\n  let b;\n  let c;\n  let d;\n  let chunk;\n\n  // Main loop deals with bytes in chunks of 3\n  for (let i = 0; i < mainLength; i = i + 3) {\n    // Combine the three bytes into a single integer\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n    // Use bitmasks to extract 6-bit segments from the triplet\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n    b = (chunk & 258048) >> 12; // 258048 = (2^6 - 1) << 12\n    c = (chunk & 4032) >> 6; // 4032 = (2^6 - 1) << 6\n    d = chunk & 63; // 63 = 2^6 - 1\n    // Convert the raw binary segments to the appropriate ASCII encoding\n    base64 += concat4(encodings[a], encodings[b], encodings[c], encodings[d]);\n  }\n\n  // Deal with the remaining bytes and padding\n  if (byteRemainder === 1) {\n    chunk = bytes[mainLength];\n\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n    // Set the 4 least significant bits to zero\n    b = (chunk & 3) << 4; // 3 = 2^2 - 1\n    base64 += concat3(encodings[a], encodings[b], '===');\n  } else if (byteRemainder === 2) {\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n    b = (chunk & 1008) >> 4; // 1008 = (2^6 - 1) << 4\n    // Set the 2 least significant bits to zero\n    c = (chunk & 15) << 2; // 15 = 2^4 - 1\n    base64 += concat4(encodings[a], encodings[b], encodings[c], '=');\n  }\n  return base64;\n}\n\nexport function decodeRestrictedBase64ToBytes(encoded: string) {\n  let ch: any;\n  let code: any;\n  let code2: any;\n\n  const len = encoded.length;\n  const padding =\n    encoded.charAt(len - 2) === '='\n      ? 2\n      : encoded.charAt(len - 1) === '='\n      ? 1\n      : 0;\n  const decoded = new Uint8Array((encoded.length >> 2) * 3 - padding);\n\n  for (let i = 0, j = 0; i < encoded.length; ) {\n    ch = encoded.charCodeAt(i++);\n    code = base64DecodeMap[ch - base64DecodeMapOffset];\n    ch = encoded.charCodeAt(i++);\n    code2 = base64DecodeMap[ch - base64DecodeMapOffset];\n    decoded[j++] = (code << 2) | ((code2 & 0x30) >> 4);\n\n    ch = encoded.charCodeAt(i++);\n    if (ch === base64EOF) {\n      return decoded;\n    }\n    code = base64DecodeMap[ch - base64DecodeMapOffset];\n    decoded[j++] = ((code2 & 0x0f) << 4) | ((code & 0x3c) >> 2);\n\n    ch = encoded.charCodeAt(i++);\n    if (ch === base64EOF) {\n      return decoded;\n    }\n    code2 = base64DecodeMap[ch - base64DecodeMapOffset];\n    decoded[j++] = ((code & 0x03) << 6) | code2;\n  }\n  return decoded;\n}\n\nconst layoutThrottleDuration = 10;\nlet layoutTimeout = 0;\n\nexport function layout() {\n  if (layoutTimeout) {\n    window.clearTimeout(layoutTimeout);\n  }\n  window.setTimeout(() => {\n    layoutTimeout = 0;\n    document.dispatchEvent(new Event('layout'));\n  }, layoutThrottleDuration);\n}\n\nexport function resetDOMSelection() {\n  window.getSelection()!.removeAllRanges();\n}\n\nexport function assert(c: any, message?: string) {\n  if (!c) {\n    throw new Error(message);\n  }\n}\n\nexport function clamp(x: number, min: number, max: number): number {\n  return Math.min(Math.max(min, x), max);\n}\n\nexport async function readUploadedFile(\n  inputFile: File,\n  readAs: 'text' | 'arrayBuffer'\n): Promise<string | ArrayBuffer> {\n  const temporaryFileReader = new FileReader();\n  return new Promise<string | ArrayBuffer>((resolve, reject) => {\n    temporaryFileReader.onerror = () => {\n      temporaryFileReader.abort();\n      reject(new DOMException('Problem parsing input file.'));\n    };\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result as any);\n    };\n    if (readAs === 'text') {\n      temporaryFileReader.readAsText(inputFile);\n    } else if (readAs === 'arrayBuffer') {\n      temporaryFileReader.readAsArrayBuffer(inputFile);\n    } else {\n      assert(false, 'NYI');\n    }\n  });\n}\n\n// export async function readUploadedDirectory(inputEntry: any, root: Directory, customRoot?: string) {\n//     const reader = inputEntry.createReader();\n//     reader.readEntries(((entries: any) => {\n//         entries.forEach(async (entry: any) => {\n//             if (entry.isDirectory) {\n//                 return readUploadedDirectory(entry, root, customRoot);\n//             }\n//             entry.file(async (file: File) => {\n//                 try {\n//                     const name: string = file.name;\n//                     let path: string = entry.fullPath.replace(/^\\/+/g, \"\");\n//                     if (customRoot) {\n//                         const pathArray = path.split(\"/\");\n//                         pathArray[0] = customRoot;\n//                         path = pathArray.join(\"/\");\n//                     }\n//                     const fileType = fileTypeForExtension(name.split(\".\").pop());\n//                     const data = await readUploadedFile(file, isBinaryFileType(fileType) ? \"arrayBuffer\" : \"text\");\n//                     const newFile = root.newFile(path, fileType, false, true);\n//                     newFile.setData(data);\n//                 } catch (e) {\n//                     console.log(\"Unable to read the file!\");\n//                 }\n//             });\n//         });\n//     }));\n// }\n\n// export async function uploadFilesToDirectory(items: any, root: Directory) {\n//     Array.from(items).forEach(async (item: any) => {\n//         if (typeof item.webkitGetAsEntry === \"function\") {\n//             const entry = item.webkitGetAsEntry();\n//             if (entry.isDirectory) {\n//                 if (root.getImmediateChild(entry.name)) {\n//                     const customRoot = root.handleNameCollision(entry.name);\n//                     return readUploadedDirectory(entry, root, customRoot);\n//                 }\n//                 return readUploadedDirectory(entry, root);\n//             }\n//         }\n//         let file: File;\n//         if (item instanceof DataTransferItem) {\n//             file = item.getAsFile();\n//         } else {\n//             file = item;\n//         }\n//         const name: string = file.name;\n//         const path: string = /*file.webkitRelativePath ||*/ name; // This works in FF also.\n//         const fileType = fileTypeForExtension(name.split(\".\").pop());\n//         let data: any;\n//         try {\n//             data = await readUploadedFile(file, isBinaryFileType(fileType) ? \"arrayBuffer\" : \"text\");\n//             const newFile = root.newFile(path, fileType, false, true);\n//             newFile.setData(data);\n//         } catch (e) {\n//             console.log(\"Unable to read the file!\");\n//         }\n//     });\n// }\n\n// export function isUploadAllowedForMimeType(type: string) {\n//     if (type === \"\") { // Firefox doesn't show the \"application/wasm\" mime type.\n//         return true;\n//     }\n//     return fileTypeForMimeType(type) !== FileType.Unknown;\n// }\n\nlet nextKey = 0;\n\nexport function getNextKey() {\n  return nextKey++;\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// import { SplitInfo } from \"../components/Split\";\n\nexport function toCSSPx(x: number) {\n  return (x | 0) + 'px';\n}\n\nexport function assignObject(to: any, from: any) {\n  for (const x in from) {\n    if (!(x in to)) {\n      to[x] = from[x];\n    }\n  }\n  return to;\n}\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2018, Nucleic Development Team & H. Rutjes.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nexport * from './constraint';\nexport * from './expression';\nexport * from './solver';\nexport * from './strength';\nexport * from './variable';\n","/*-----------------------------------------------------------------------------\n| Copyright (c) 2014, Nucleic Development Team.\n|\n| Distributed under the terms of the Modified BSD License.\n|\n| The full license is in the file COPYING.txt, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport { Constraint, Operator } from './constraint';\nimport { Expression } from './expression';\nimport { createMap, IMap } from './maptype';\nimport { Strength } from './strength';\nimport { Variable } from './variable';\n\n/**\n * The constraint solver class.\n *\n * @class\n */\nexport class Solver {\n  /**\n   * Construct a new Solver.\n   */\n  constructor() {}\n\n  /**\n   * Creates and add a constraint to the solver.\n   *\n   * @param {Expression|Variable} lhs Left hand side of the expression\n   * @param {Operator} operator Operator\n   * @param {Expression|Variable|Number} rhs Right hand side of the expression\n   * @param {Number} [strength=Strength.required] Strength\n   */\n  public createConstraint(\n    lhs: Expression | Variable,\n    operator: Operator,\n    rhs: Expression | Variable | number,\n    strength: number = Strength.required\n  ): Constraint {\n    let cn = new Constraint(lhs, operator, rhs, strength);\n    this.addConstraint(cn);\n    return cn;\n  }\n\n  /**\n   * Add a constraint to the solver.\n   *\n   * @param {Constraint} constraint Constraint to add to the solver\n   */\n  public addConstraint(constraint: Constraint): void {\n    let cnPair = this._cnMap.find(constraint);\n    if (cnPair !== undefined) {\n      throw new Error('duplicate constraint');\n    }\n\n    // Creating a row causes symbols to be reserved for the variables\n    // in the constraint. If this method exits with an exception,\n    // then its possible those variables will linger in the var map.\n    // Since its likely that those variables will be used in other\n    // constraints and since exceptional conditions are uncommon,\n    // i'm not too worried about aggressive cleanup of the var map.\n    let data = this._createRow(constraint);\n    let row = data.row;\n    let tag = data.tag;\n    let subject = this._chooseSubject(row, tag);\n\n    // If chooseSubject couldnt find a valid entering symbol, one\n    // last option is available if the entire row is composed of\n    // dummy variables. If the constant of the row is zero, then\n    // this represents redundant constraints and the new dummy\n    // marker can enter the basis. If the constant is non-zero,\n    // then it represents an unsatisfiable constraint.\n    if (subject.type() === SymbolType.Invalid && row.allDummies()) {\n      if (!nearZero(row.constant())) {\n        throw new Error('unsatisfiable constraint');\n      } else {\n        subject = tag.marker;\n      }\n    }\n\n    // If an entering symbol still isn't found, then the row must\n    // be added using an artificial variable. If that fails, then\n    // the row represents an unsatisfiable constraint.\n    if (subject.type() === SymbolType.Invalid) {\n      if (!this._addWithArtificialVariable(row)) {\n        throw new Error('unsatisfiable constraint');\n      }\n    } else {\n      row.solveFor(subject);\n      this._substitute(subject, row);\n      this._rowMap.insert(subject, row);\n    }\n\n    this._cnMap.insert(constraint, tag);\n\n    // Optimizing after each constraint is added performs less\n    // aggregate work due to a smaller average system size. It\n    // also ensures the solver remains in a consistent state.\n    this._optimize(this._objective);\n  }\n\n  /**\n   * Remove a constraint from the solver.\n   *\n   * @param {Constraint} constraint Constraint to remove from the solver\n   */\n  public removeConstraint(constraint: Constraint): void {\n    let cnPair = this._cnMap.erase(constraint);\n    if (cnPair === undefined) {\n      throw new Error('unknown constraint');\n    }\n\n    // Remove the error effects from the objective function\n    // *before* pivoting, or substitutions into the objective\n    // will lead to incorrect solver results.\n    this._removeConstraintEffects(constraint, cnPair.second);\n\n    // If the marker is basic, simply drop the row. Otherwise,\n    // pivot the marker into the basis and then drop the row.\n    let marker = cnPair.second.marker;\n    let rowPair = this._rowMap.erase(marker);\n    if (rowPair === undefined) {\n      let leaving = this._getMarkerLeavingSymbol(marker);\n      if (leaving.type() === SymbolType.Invalid) {\n        throw new Error('failed to find leaving row');\n      }\n      rowPair = this._rowMap.erase(leaving)!;\n      rowPair.second.solveForEx(leaving, marker);\n      this._substitute(marker, rowPair.second);\n    }\n\n    // Optimizing after each constraint is removed ensures that the\n    // solver remains consistent. It makes the solver api easier to\n    // use at a small tradeoff for speed.\n    this._optimize(this._objective);\n  }\n\n  /**\n   * Test whether the solver contains the constraint.\n   *\n   * @param {Constraint} constraint Constraint to test for\n   * @return {Bool} true or false\n   */\n  public hasConstraint(constraint: Constraint): boolean {\n    return this._cnMap.contains(constraint);\n  }\n\n  /**\n   * Add an edit variable to the solver.\n   *\n   * @param {Variable} variable Edit variable to add to the solver\n   * @param {Number} strength Strength, should be less than `Strength.required`\n   */\n  public addEditVariable(variable: Variable, strength: number): void {\n    let editPair = this._editMap.find(variable);\n    if (editPair !== undefined) {\n      throw new Error('duplicate edit variable');\n    }\n    strength = Strength.clip(strength);\n    if (strength === Strength.required) {\n      throw new Error('bad required strength');\n    }\n    let expr = new Expression(variable);\n    let cn = new Constraint(expr, Operator.Eq, undefined, strength);\n    this.addConstraint(cn);\n    let tag = this._cnMap.find(cn)!.second;\n    let info = { tag, constraint: cn, constant: 0.0 };\n    this._editMap.insert(variable, info);\n  }\n\n  /**\n   * Remove an edit variable from the solver.\n   *\n   * @param {Variable} variable Edit variable to remove from the solver\n   */\n  public removeEditVariable(variable: Variable): void {\n    let editPair = this._editMap.erase(variable);\n    if (editPair === undefined) {\n      throw new Error('unknown edit variable');\n    }\n    this.removeConstraint(editPair.second.constraint);\n  }\n\n  /**\n   * Test whether the solver contains the edit variable.\n   *\n   * @param {Variable} variable Edit variable to test for\n   * @return {Bool} true or false\n   */\n  public hasEditVariable(variable: Variable): boolean {\n    return this._editMap.contains(variable);\n  }\n\n  /**\n   * Suggest the value of an edit variable.\n   *\n   * @param {Variable} variable Edit variable to suggest a value for\n   * @param {Number} value Suggested value\n   */\n  public suggestValue(variable: Variable, value: number): void {\n    let editPair = this._editMap.find(variable);\n    if (editPair === undefined) {\n      throw new Error('unknown edit variable');\n    }\n\n    let rows = this._rowMap;\n    let info = editPair.second;\n    let delta = value - info.constant;\n    info.constant = value;\n\n    // Check first if the positive error variable is basic.\n    let marker = info.tag.marker;\n    let rowPair = rows.find(marker);\n    if (rowPair !== undefined) {\n      if (rowPair.second.add(-delta) < 0.0) {\n        this._infeasibleRows.push(marker);\n      }\n      this._dualOptimize();\n      return;\n    }\n\n    // Check next if the negative error variable is basic.\n    let other = info.tag.other;\n    rowPair = rows.find(other);\n    if (rowPair !== undefined) {\n      if (rowPair.second.add(delta) < 0.0) {\n        this._infeasibleRows.push(other);\n      }\n      this._dualOptimize();\n      return;\n    }\n\n    // Otherwise update each row where the error variables exist.\n    for (let i = 0, n = rows.size(); i < n; ++i) {\n      let rowPair = rows.itemAt(i);\n      let row = rowPair.second;\n      let coeff = row.coefficientFor(marker);\n      if (\n        coeff !== 0.0 &&\n        row.add(delta * coeff) < 0.0 &&\n        rowPair.first.type() !== SymbolType.External\n      ) {\n        this._infeasibleRows.push(rowPair.first);\n      }\n    }\n    this._dualOptimize();\n  }\n\n  /**\n   * Update the values of the variables.\n   */\n  public updateVariables(): void {\n    let vars = this._varMap;\n    let rows = this._rowMap;\n    for (let i = 0, n = vars.size(); i < n; ++i) {\n      let pair = vars.itemAt(i);\n      let rowPair = rows.find(pair.second);\n      if (rowPair !== undefined) {\n        pair.first.setValue(rowPair.second.constant());\n      } else {\n        pair.first.setValue(0.0);\n      }\n    }\n  }\n\n  /**\n   * Get the symbol for the given variable.\n   *\n   * If a symbol does not exist for the variable, one will be created.\n   * @private\n   */\n  private _getVarSymbol(variable: Variable): Symbol {\n    let factory = () => this._makeSymbol(SymbolType.External);\n    return this._varMap.setDefault(variable, factory).second;\n  }\n\n  /**\n   * Create a new Row object for the given constraint.\n   *\n   * The terms in the constraint will be converted to cells in the row.\n   * Any term in the constraint with a coefficient of zero is ignored.\n   * This method uses the `_getVarSymbol` method to get the symbol for\n   * the variables added to the row. If the symbol for a given cell\n   * variable is basic, the cell variable will be substituted with the\n   * basic row.\n   *\n   * The necessary slack and error variables will be added to the row.\n   * If the constant for the row is negative, the sign for the row\n   * will be inverted so the constant becomes positive.\n   *\n   * Returns the created Row and the tag for tracking the constraint.\n   * @private\n   */\n  private _createRow(constraint: Constraint): IRowCreation {\n    let expr = constraint.expression();\n    let row = new Row(expr.constant());\n\n    // Substitute the current basic variables into the row.\n    let terms = expr.terms();\n    for (let i = 0, n = terms.size(); i < n; ++i) {\n      let termPair = terms.itemAt(i);\n      if (!nearZero(termPair.second)) {\n        let symbol = this._getVarSymbol(termPair.first);\n        let basicPair = this._rowMap.find(symbol);\n        if (basicPair !== undefined) {\n          row.insertRow(basicPair.second, termPair.second);\n        } else {\n          row.insertSymbol(symbol, termPair.second);\n        }\n      }\n    }\n\n    // Add the necessary slack, error, and dummy variables.\n    let objective = this._objective;\n    let strength = constraint.strength();\n    let tag = { marker: INVALID_SYMBOL, other: INVALID_SYMBOL };\n    switch (constraint.op()) {\n      case Operator.Le:\n      case Operator.Ge: {\n        let coeff = constraint.op() === Operator.Le ? 1.0 : -1.0;\n        let slack = this._makeSymbol(SymbolType.Slack);\n        tag.marker = slack;\n        row.insertSymbol(slack, coeff);\n        if (strength < Strength.required) {\n          let error = this._makeSymbol(SymbolType.Error);\n          tag.other = error;\n          row.insertSymbol(error, -coeff);\n          objective.insertSymbol(error, strength);\n        }\n        break;\n      }\n      case Operator.Eq: {\n        if (strength < Strength.required) {\n          let errplus = this._makeSymbol(SymbolType.Error);\n          let errminus = this._makeSymbol(SymbolType.Error);\n          tag.marker = errplus;\n          tag.other = errminus;\n          row.insertSymbol(errplus, -1.0); // v = eplus - eminus\n          row.insertSymbol(errminus, 1.0); // v - eplus + eminus = 0\n          objective.insertSymbol(errplus, strength);\n          objective.insertSymbol(errminus, strength);\n        } else {\n          let dummy = this._makeSymbol(SymbolType.Dummy);\n          tag.marker = dummy;\n          row.insertSymbol(dummy);\n        }\n        break;\n      }\n    }\n\n    // Ensure the row has a positive constant.\n    if (row.constant() < 0.0) {\n      row.reverseSign();\n    }\n\n    return { row, tag };\n  }\n\n  /**\n   * Choose the subject for solving for the row.\n   *\n   * This method will choose the best subject for using as the solve\n   * target for the row. An invalid symbol will be returned if there\n   * is no valid target.\n   *\n   * The symbols are chosen according to the following precedence:\n   *\n   * 1) The first symbol representing an external variable.\n   * 2) A negative slack or error tag variable.\n   *\n   * If a subject cannot be found, an invalid symbol will be returned.\n   *\n   * @private\n   */\n  private _chooseSubject(row: Row, tag: ITag): Symbol {\n    let cells = row.cells();\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      if (pair.first.type() === SymbolType.External) {\n        return pair.first;\n      }\n    }\n    let type = tag.marker.type();\n    if (type === SymbolType.Slack || type === SymbolType.Error) {\n      if (row.coefficientFor(tag.marker) < 0.0) {\n        return tag.marker;\n      }\n    }\n    type = tag.other.type();\n    if (type === SymbolType.Slack || type === SymbolType.Error) {\n      if (row.coefficientFor(tag.other) < 0.0) {\n        return tag.other;\n      }\n    }\n    return INVALID_SYMBOL;\n  }\n\n  /**\n   * Add the row to the tableau using an artificial variable.\n   *\n   * This will return false if the constraint cannot be satisfied.\n   *\n   * @private\n   */\n  private _addWithArtificialVariable(row: Row): boolean {\n    // Create and add the artificial variable to the tableau.\n    let art = this._makeSymbol(SymbolType.Slack);\n    this._rowMap.insert(art, row.copy());\n    this._artificial = row.copy();\n\n    // Optimize the artificial objective. This is successful\n    // only if the artificial objective is optimized to zero.\n    this._optimize(this._artificial);\n    let success = nearZero(this._artificial.constant());\n    this._artificial = null;\n\n    // If the artificial variable is basic, pivot the row so that\n    // it becomes non-basic. If the row is constant, exit early.\n    let pair = this._rowMap.erase(art);\n    if (pair !== undefined) {\n      let basicRow = pair.second;\n      if (basicRow.isConstant()) {\n        return success;\n      }\n      let entering = this._anyPivotableSymbol(basicRow);\n      if (entering.type() === SymbolType.Invalid) {\n        return false; // unsatisfiable (will this ever happen?)\n      }\n      basicRow.solveForEx(art, entering);\n      this._substitute(entering, basicRow);\n      this._rowMap.insert(entering, basicRow);\n    }\n\n    // Remove the artificial variable from the tableau.\n    let rows = this._rowMap;\n    for (let i = 0, n = rows.size(); i < n; ++i) {\n      rows.itemAt(i).second.removeSymbol(art);\n    }\n    this._objective.removeSymbol(art);\n    return success;\n  }\n\n  /**\n   * Substitute the parametric symbol with the given row.\n   *\n   * This method will substitute all instances of the parametric symbol\n   * in the tableau and the objective function with the given row.\n   *\n   * @private\n   */\n  private _substitute(symbol: Symbol, row: Row): void {\n    let rows = this._rowMap;\n    for (let i = 0, n = rows.size(); i < n; ++i) {\n      let pair = rows.itemAt(i);\n      pair.second.substitute(symbol, row);\n      if (\n        pair.second.constant() < 0.0 &&\n        pair.first.type() !== SymbolType.External\n      ) {\n        this._infeasibleRows.push(pair.first);\n      }\n    }\n    this._objective.substitute(symbol, row);\n    if (this._artificial) {\n      this._artificial.substitute(symbol, row);\n    }\n  }\n\n  /**\n   * Optimize the system for the given objective function.\n   *\n   * This method performs iterations of Phase 2 of the simplex method\n   * until the objective function reaches a minimum.\n   *\n   * @private\n   */\n  private _optimize(objective: Row): void {\n    while (true) {\n      let entering = this._getEnteringSymbol(objective);\n      if (entering.type() === SymbolType.Invalid) {\n        return;\n      }\n      let leaving = this._getLeavingSymbol(entering);\n      if (leaving.type() === SymbolType.Invalid) {\n        throw new Error('the objective is unbounded');\n      }\n      // pivot the entering symbol into the basis\n      let row = this._rowMap.erase(leaving)!.second;\n      row.solveForEx(leaving, entering);\n      this._substitute(entering, row);\n      this._rowMap.insert(entering, row);\n    }\n  }\n\n  /**\n   * Optimize the system using the dual of the simplex method.\n   *\n   * The current state of the system should be such that the objective\n   * function is optimal, but not feasible. This method will perform\n   * an iteration of the dual simplex method to make the solution both\n   * optimal and feasible.\n   *\n   * @private\n   */\n  private _dualOptimize(): void {\n    let rows = this._rowMap;\n    let infeasible = this._infeasibleRows;\n    while (infeasible.length !== 0) {\n      let leaving = infeasible.pop();\n      let pair = rows.find(leaving!);\n      if (pair !== undefined && pair.second.constant() < 0.0) {\n        let entering = this._getDualEnteringSymbol(pair.second);\n        if (entering.type() === SymbolType.Invalid) {\n          throw new Error('dual optimize failed');\n        }\n        // pivot the entering symbol into the basis\n        let row = pair.second;\n        rows.erase(leaving!);\n        row.solveForEx(leaving!, entering);\n        this._substitute(entering, row);\n        rows.insert(entering, row);\n      }\n    }\n  }\n\n  /**\n   * Compute the entering variable for a pivot operation.\n   *\n   * This method will return first symbol in the objective function which\n   * is non-dummy and has a coefficient less than zero. If no symbol meets\n   * the criteria, it means the objective function is at a minimum, and an\n   * invalid symbol is returned.\n   *\n   * @private\n   */\n  private _getEnteringSymbol(objective: Row): Symbol {\n    let cells = objective.cells();\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      let symbol = pair.first;\n      if (pair.second < 0.0 && symbol.type() !== SymbolType.Dummy) {\n        return symbol;\n      }\n    }\n    return INVALID_SYMBOL;\n  }\n\n  /**\n   * Compute the entering symbol for the dual optimize operation.\n   *\n   * This method will return the symbol in the row which has a positive\n   * coefficient and yields the minimum ratio for its respective symbol\n   * in the objective function. The provided row *must* be infeasible.\n   * If no symbol is found which meats the criteria, an invalid symbol\n   * is returned.\n   *\n   * @private\n   */\n  private _getDualEnteringSymbol(row: Row): Symbol {\n    let ratio = Number.MAX_VALUE;\n    let entering = INVALID_SYMBOL;\n    let cells = row.cells();\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      let symbol = pair.first;\n      let c = pair.second;\n      if (c > 0.0 && symbol.type() !== SymbolType.Dummy) {\n        let coeff = this._objective.coefficientFor(symbol);\n        let r = coeff / c;\n        if (r < ratio) {\n          ratio = r;\n          entering = symbol;\n        }\n      }\n    }\n    return entering;\n  }\n\n  /**\n   * Compute the symbol for pivot exit row.\n   *\n   * This method will return the symbol for the exit row in the row\n   * map. If no appropriate exit symbol is found, an invalid symbol\n   * will be returned. This indicates that the objective function is\n   * unbounded.\n   *\n   * @private\n   */\n  private _getLeavingSymbol(entering: Symbol): Symbol {\n    let ratio = Number.MAX_VALUE;\n    let found = INVALID_SYMBOL;\n    let rows = this._rowMap;\n    for (let i = 0, n = rows.size(); i < n; ++i) {\n      let pair = rows.itemAt(i);\n      let symbol = pair.first;\n      if (symbol.type() !== SymbolType.External) {\n        let row = pair.second;\n        let temp = row.coefficientFor(entering);\n        if (temp < 0.0) {\n          let temp_ratio = -row.constant() / temp;\n          if (temp_ratio < ratio) {\n            ratio = temp_ratio;\n            found = symbol;\n          }\n        }\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Compute the leaving symbol for a marker variable.\n   *\n   * This method will return a symbol corresponding to a basic row\n   * which holds the given marker variable. The row will be chosen\n   * according to the following precedence:\n   *\n   * 1) The row with a restricted basic varible and a negative coefficient\n   *    for the marker with the smallest ratio of -constant / coefficient.\n   *\n   * 2) The row with a restricted basic variable and the smallest ratio\n   *    of constant / coefficient.\n   *\n   * 3) The last unrestricted row which contains the marker.\n   *\n   * If the marker does not exist in any row, an invalid symbol will be\n   * returned. This indicates an internal solver error since the marker\n   * *should* exist somewhere in the tableau.\n   *\n   * @private\n   */\n  private _getMarkerLeavingSymbol(marker: Symbol): Symbol {\n    let dmax = Number.MAX_VALUE;\n    let r1 = dmax;\n    let r2 = dmax;\n    let invalid = INVALID_SYMBOL;\n    let first = invalid;\n    let second = invalid;\n    let third = invalid;\n    let rows = this._rowMap;\n    for (let i = 0, n = rows.size(); i < n; ++i) {\n      let pair = rows.itemAt(i);\n      let row = pair.second;\n      let c = row.coefficientFor(marker);\n      if (c === 0.0) {\n        continue;\n      }\n      let symbol = pair.first;\n      if (symbol.type() === SymbolType.External) {\n        third = symbol;\n      } else if (c < 0.0) {\n        let r = -row.constant() / c;\n        if (r < r1) {\n          r1 = r;\n          first = symbol;\n        }\n      } else {\n        let r = row.constant() / c;\n        if (r < r2) {\n          r2 = r;\n          second = symbol;\n        }\n      }\n    }\n    if (first !== invalid) {\n      return first;\n    }\n    if (second !== invalid) {\n      return second;\n    }\n    return third;\n  }\n\n  /**\n   * Remove the effects of a constraint on the objective function.\n   *\n   * @private\n   */\n  private _removeConstraintEffects(cn: Constraint, tag: ITag): void {\n    if (tag.marker.type() === SymbolType.Error) {\n      this._removeMarkerEffects(tag.marker, cn.strength());\n    }\n    if (tag.other.type() === SymbolType.Error) {\n      this._removeMarkerEffects(tag.other, cn.strength());\n    }\n  }\n\n  /**\n   * Remove the effects of an error marker on the objective function.\n   *\n   * @private\n   */\n  private _removeMarkerEffects(marker: Symbol, strength: number): void {\n    let pair = this._rowMap.find(marker);\n    if (pair !== undefined) {\n      this._objective.insertRow(pair.second, -strength);\n    } else {\n      this._objective.insertSymbol(marker, -strength);\n    }\n  }\n\n  /**\n   * Get the first Slack or Error symbol in the row.\n   *\n   * If no such symbol is present, an invalid symbol will be returned.\n   *\n   * @private\n   */\n  private _anyPivotableSymbol(row: Row): Symbol {\n    let cells = row.cells();\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      let type = pair.first.type();\n      if (type === SymbolType.Slack || type === SymbolType.Error) {\n        return pair.first;\n      }\n    }\n    return INVALID_SYMBOL;\n  }\n\n  /**\n   * Returns a new Symbol of the given type.\n   *\n   * @private\n   */\n  private _makeSymbol(type: SymbolType): Symbol {\n    return new Symbol(type, this._idTick++);\n  }\n\n  private _cnMap = createCnMap();\n  private _rowMap = createRowMap();\n  private _varMap = createVarMap();\n  private _editMap = createEditMap();\n  private _infeasibleRows: Symbol[] = [];\n  private _objective: Row = new Row();\n  private _artificial: Row | null = null;\n  private _idTick: number = 0;\n}\n\n/**\n * Test whether a value is approximately zero.\n * @private\n */\nfunction nearZero(value: number): boolean {\n  let eps = 1.0e-8;\n  return value < 0.0 ? -value < eps : value < eps;\n}\n\n/**\n * The internal interface of a tag value.\n */\ninterface ITag {\n  marker: Symbol;\n  other: Symbol;\n}\n\n/**\n * The internal interface of an edit info object.\n */\ninterface IEditInfo {\n  tag: ITag;\n  constraint: Constraint;\n  constant: number;\n}\n\n/**\n * The internal interface for returning created row data.\n */\ninterface IRowCreation {\n  row: Row;\n  tag: ITag;\n}\n\n/**\n * An internal function for creating a constraint map.\n * @private\n */\nfunction createCnMap(): IMap<Constraint, ITag> {\n  return createMap<Constraint, ITag>();\n}\n\n/**\n * An internal function for creating a row map.\n * @private\n */\nfunction createRowMap(): IMap<Symbol, Row> {\n  return createMap<Symbol, Row>();\n}\n\n/**\n * An internal function for creating a variable map.\n * @private\n */\nfunction createVarMap(): IMap<Variable, Symbol> {\n  return createMap<Variable, Symbol>();\n}\n\n/**\n * An internal function for creating an edit map.\n * @private\n */\nfunction createEditMap(): IMap<Variable, IEditInfo> {\n  return createMap<Variable, IEditInfo>();\n}\n\n/**\n * An enum defining the available symbol types.\n * @private\n */\nenum SymbolType {\n  Invalid,\n  External,\n  Slack,\n  Error,\n  Dummy\n}\n\n/**\n * An internal class representing a symbol in the solver.\n * @private\n */\nclass Symbol {\n  /**\n   * Construct a new Symbol\n   *\n   * @param [type] The type of the symbol.\n   * @param [id] The unique id number of the symbol.\n   */\n  constructor(type: SymbolType, id: number) {\n    this._id = id;\n    this._type = type;\n  }\n\n  /**\n   * Returns the unique id number of the symbol.\n   */\n  public id(): number {\n    return this._id;\n  }\n\n  /**\n   * Returns the type of the symbol.\n   */\n  public type(): SymbolType {\n    return this._type;\n  }\n\n  private _id: number;\n  private _type: SymbolType;\n}\n\n/**\n * A static invalid symbol\n * @private\n */\nlet INVALID_SYMBOL = new Symbol(SymbolType.Invalid, -1);\n\n/**\n * An internal row class used by the solver.\n * @private\n */\nclass Row {\n  /**\n   * Construct a new Row.\n   */\n  constructor(constant: number = 0.0) {\n    this._constant = constant;\n  }\n\n  /**\n   * Returns the mapping of symbols to coefficients.\n   */\n  public cells(): IMap<Symbol, number> {\n    return this._cellMap;\n  }\n\n  /**\n   * Returns the constant for the row.\n   */\n  public constant(): number {\n    return this._constant;\n  }\n\n  /**\n   * Returns true if the row is a constant value.\n   */\n  public isConstant(): boolean {\n    return this._cellMap.empty();\n  }\n\n  /**\n   * Returns true if the Row has all dummy symbols.\n   */\n  public allDummies(): boolean {\n    let cells = this._cellMap;\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      if (pair.first.type() !== SymbolType.Dummy) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Create a copy of the row.\n   */\n  public copy(): Row {\n    let theCopy = new Row(this._constant);\n    theCopy._cellMap = this._cellMap.copy();\n    return theCopy;\n  }\n\n  /**\n   * Add a constant value to the row constant.\n   *\n   * Returns the new value of the constant.\n   */\n  public add(value: number): number {\n    return (this._constant += value);\n  }\n\n  /**\n   * Insert the symbol into the row with the given coefficient.\n   *\n   * If the symbol already exists in the row, the coefficient\n   * will be added to the existing coefficient. If the resulting\n   * coefficient is zero, the symbol will be removed from the row.\n   */\n  public insertSymbol(symbol: Symbol, coefficient: number = 1.0): void {\n    let pair = this._cellMap.setDefault(symbol, () => 0.0);\n    if (nearZero((pair.second += coefficient))) {\n      this._cellMap.erase(symbol);\n    }\n  }\n\n  /**\n   * Insert a row into this row with a given coefficient.\n   *\n   * The constant and the cells of the other row will be\n   * multiplied by the coefficient and added to this row. Any\n   * cell with a resulting coefficient of zero will be removed\n   * from the row.\n   */\n  public insertRow(other: Row, coefficient: number = 1.0): void {\n    this._constant += other._constant * coefficient;\n    let cells = other._cellMap;\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      this.insertSymbol(pair.first, pair.second * coefficient);\n    }\n  }\n\n  /**\n   * Remove a symbol from the row.\n   */\n  public removeSymbol(symbol: Symbol): void {\n    this._cellMap.erase(symbol);\n  }\n\n  /**\n   * Reverse the sign of the constant and cells in the row.\n   */\n  public reverseSign(): void {\n    this._constant = -this._constant;\n    let cells = this._cellMap;\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      let pair = cells.itemAt(i);\n      pair.second = -pair.second;\n    }\n  }\n\n  /**\n   * Solve the row for the given symbol.\n   *\n   * This method assumes the row is of the form\n   * a * x + b * y + c = 0 and (assuming solve for x) will modify\n   * the row to represent the right hand side of\n   * x = -b/a * y - c / a. The target symbol will be removed from\n   * the row, and the constant and other cells will be multiplied\n   * by the negative inverse of the target coefficient.\n   *\n   * The given symbol *must* exist in the row.\n   */\n  public solveFor(symbol: Symbol): void {\n    let cells = this._cellMap;\n    let pair = cells.erase(symbol)!;\n    let coeff = -1.0 / pair.second;\n    this._constant *= coeff;\n    for (let i = 0, n = cells.size(); i < n; ++i) {\n      cells.itemAt(i).second *= coeff;\n    }\n  }\n\n  /**\n   * Solve the row for the given symbols.\n   *\n   * This method assumes the row is of the form\n   * x = b * y + c and will solve the row such that\n   * y = x / b - c / b. The rhs symbol will be removed from the\n   * row, the lhs added, and the result divided by the negative\n   * inverse of the rhs coefficient.\n   *\n   * The lhs symbol *must not* exist in the row, and the rhs\n   * symbol must* exist in the row.\n   */\n  public solveForEx(lhs: Symbol, rhs: Symbol): void {\n    this.insertSymbol(lhs, -1.0);\n    this.solveFor(rhs);\n  }\n\n  /**\n   * Returns the coefficient for the given symbol.\n   */\n  public coefficientFor(symbol: Symbol): number {\n    let pair = this._cellMap.find(symbol);\n    return pair !== undefined ? pair.second : 0.0;\n  }\n\n  /**\n   * Substitute a symbol with the data from another row.\n   *\n   * Given a row of the form a * x + b and a substitution of the\n   * form x = 3 * y + c the row will be updated to reflect the\n   * expression 3 * a * y + a * c + b.\n   *\n   * If the symbol does not exist in the row, this is a no-op.\n   */\n  public substitute(symbol: Symbol, row: Row): void {\n    let pair = this._cellMap.erase(symbol);\n    if (pair !== undefined) {\n      this.insertRow(row, pair.second);\n    }\n  }\n\n  private _cellMap = createMap<Symbol, number>();\n  private _constant: number;\n}\n","import * as React from 'react';\r\n\r\n// const { useState, useEffect } = React;\r\n\r\ntype Props = {\r\n  child: React.ReactNode;\r\n  style: React.CSSProperties;\r\n};\r\n\r\nexport const SplitPane: React.FC<Props> = ({ style, child }) => {\r\n  //   const [collapsed, setCollapsed] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {};\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={'split-pane'} style={style}>\r\n      {child}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { SplitOrientation } from './Split';\r\n\r\nconst { useEffect } = React;\r\n\r\ntype Props = {\r\n  orientation: SplitOrientation;\r\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n};\r\n\r\nexport const Resizer: React.FC<Props> = ({ orientation, onMouseDown }) => {\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  let resizerClassName = 'resizer';\r\n  const isHorizontal = orientation === SplitOrientation.Horizontal;\r\n  if (isHorizontal) {\r\n    resizerClassName += ' horizontal';\r\n  } else {\r\n    resizerClassName += ' vertical';\r\n  }\r\n\r\n  return <div className={resizerClassName} onMouseDown={onMouseDown} />;\r\n};\r\n"],"sourceRoot":""}