{"version":3,"sources":["webpack://ReactContexify/webpack/universalModuleDefinition","webpack://ReactContexify/webpack/bootstrap","webpack://ReactContexify/external \"react\"","webpack://ReactContexify/./src/utils/styles.ts","webpack://ReactContexify/external \"prop-types\"","webpack://ReactContexify/./node_modules/classnames/index.js","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/expression.js","webpack://ReactContexify/./src/utils/actions.ts","webpack://ReactContexify/./src/utils/eventManager.ts","webpack://ReactContexify/./src/components/Split.tsx","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/strength.js","webpack://ReactContexify/./src/components/cloneItem.ts","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/constraint.js","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/maptype.js","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/variable.js","webpack://ReactContexify/./src/index.ts","webpack://ReactContexify/./src/components/Menu.tsx","webpack://ReactContexify/./src/components/Portal.tsx","webpack://ReactContexify/external \"react-dom\"","webpack://ReactContexify/./src/components/Item.tsx","webpack://ReactContexify/./src/components/Separator.tsx","webpack://ReactContexify/./src/components/IconFont.tsx","webpack://ReactContexify/./src/components/Submenu.tsx","webpack://ReactContexify/./src/components/MenuProvider.tsx","webpack://ReactContexify/./src/utils/contextMenu.ts","webpack://ReactContexify/./src/utils/assert.ts","webpack://ReactContexify/./src/utils/layout.ts","webpack://ReactContexify/./src/utils/toCSSPx.ts","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/index.js","webpack://ReactContexify/./node_modules/@ishikawa_masashi/cassowary/lib/solver.js","webpack://ReactContexify/./src/components/SplitPane.tsx","webpack://ReactContexify/./src/components/Resizer.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__16__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","styles","menu","submenu","submenuArrow","separator","item","itemDisabled","itemContent","itemIcon","theme","animationWillEnter","animationWillLeave","light","dark","animation","fade","flip","pop","zoom","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","join","default","undefined","maptype_1","variable_1","Expression","parsed","parseArgs","this","_terms","terms","_constant","constant","result","size","pair","itemAt","first","second","plus","minus","multiply","coefficient","divide","isConstant","toString","array","map","args","createMap","Variable","setDefault","j","k","terms2","termPair","Error","value2","HIDE_ALL","DISPLAY_MENU","id","eventManager","eventList","Map","on","event","callback","_this","has","set","Set","add","delete","emit","_i","forEach","cb","concat","console","warn","SplitOrientation","React","__importStar","assert_1","__importDefault","layout_1","toCSSPx_1","cassowary_1","SplitPane_1","Resizer_1","useState","useEffect","useRef","Split","props","setState","containerRef","indexRef","solverRef","varsRef","splitsRef","forceUpdate","document","addEventListener","onResizerMouseMove","onResizerMouseUp","newSplits","canonicalizeSplits","setupSolver","getContainerSize","orientation","querySolver","current","onChange","removeEventListener","splits","documentElement","style","pointerEvents","slice","e","vars","isVertical","Vertical","rect","getBoundingClientRect","mouseOffset","clientX","left","clientY","top","index","solver","suggestValue","updateVariables","preventDefault","container","Horizontal","clientHeight","clientWidth","count","Children","children","containerSize","info","assign","defaultSplit","min","max","Solver","addEditVariable","Strength","strong","cn","Constraint","Operator","Eq","addConstraint","_a","right","Ge","Le","weak","suggestVarValues","x","y","isHorizontal","child","flexBasis","Math","round","flex","createElement","SplitPane","Resizer","onMouseDown","ev","varilable","removeEditVariable","medium","onResizerMouseDown","className","ref","flexDirection","a","b","w","clip","required","react_1","cloneItem","toArray","filter","Boolean","cloneElement","expression_1","strength_1","expression","operator","rhs","strength","_id","CnId","_operator","_strength","_expression","op","IndexedMap","empty","contains","find","Pair","insert","erase","last","copy","_value","_context","VarId","_name","setName","context","setContext","setValue","toJSON","Menu_1","Menu","Item_1","Item","Separator_1","Separator","IconFont_1","IconFont","Submenu_1","Submenu","MenuProvider_1","MenuProvider","contextMenu_1","contextMenu","styles_1","Split_1","Split_2","prop_types_1","classnames_1","cloneItem_1","Portal_1","actions_1","eventManager_1","KEY","ENTER","ESC","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","_super","state","visible","nativeEvent","propsFromTrigger","onShown","onHidden","unsub","bindWindowEvent","hide","handleKeyboard","unBindWindowEvent","onMouseEnter","onMouseLeave","button","ctrlKey","type","keyCode","setRef","menuRef","show","stopPropagation","getMousePosition","setMenuPosition","__extends","componentDidMount","componentWillUnmount","componentDidUpdate","_","prevState","windowWidth","innerWidth","windowHeight","innerHeight","menuWidth","offsetWidth","menuHeight","offsetHeight","_b","pos","changedTouches","render","_c","cssClasses","menuStyle","__assign","opacity","Portal","propTypes","oneOfType","string","number","isRequired","node","Component","react_dom_1","canRender","body","appendChild","removeChild","createPortal","PureComponent","noop","handleClick","isDisabled","onClick","data","disabled","role","func","bool","defaultProps","bottom","arrow","label","submenuStyle","childrenRefs","handleEvent","setChildRef","getChildren","component","storeRef","rest","__rest","isValidElement","attributes","hideAll","message","layoutThrottleDuration","layoutTimeout","clearTimeout","setTimeout","dispatchEvent","Event","__export","SymbolType","constraint_1","_cnMap","_rowMap","_varMap","_editMap","_infeasibleRows","_objective","Row","_artificial","_idTick","createConstraint","lhs","constraint","_createRow","row","tag","subject","_chooseSubject","Invalid","allDummies","nearZero","marker","_addWithArtificialVariable","solveFor","_substitute","_optimize","removeConstraint","cnPair","_removeConstraintEffects","rowPair","leaving","_getMarkerLeavingSymbol","solveForEx","hasConstraint","variable","expr","editPair","hasEditVariable","rows","delta","_dualOptimize","other","rowPair_1","coeff","coefficientFor","External","_getVarSymbol","_makeSymbol","symbol","basicPair","insertRow","insertSymbol","objective","INVALID_SYMBOL","slack","Slack","error","errplus","errminus","dummy","Dummy","reverseSign","cells","art","success","basicRow","entering","_anyPivotableSymbol","removeSymbol","substitute","_getEnteringSymbol","_getLeavingSymbol","infeasible","_getDualEnteringSymbol","ratio","Number","MAX_VALUE","found","temp","temp_ratio","dmax","r1","r2","invalid","third","_removeMarkerEffects","_type","_cellMap","theCopy","resizerClassName"],"mappings":"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","file":"ReactContexify.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactContexify\"] = factory(require(\"react\"), require(\"prop-types\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactContexify\"] = factory(root[\"react\"], root[\"prop-types\"], root[\"react-dom\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__16__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*\n * css classes mapping\n * */\nexport const styles = {\n  menu: 'react-contexify',\n  submenu: 'react-contexify react-contexify__submenu',\n  submenuArrow: 'react-contexify__submenu-arrow',\n  separator: 'react-contexify__separator',\n  item: 'react-contexify__item',\n  itemDisabled: 'react-contexify__item--disabled',\n  itemContent: 'react-contexify__item__content',\n  itemIcon: 'react-contexify__item__icon',\n  theme: 'react-contexify__theme--',\n  animationWillEnter: 'react-contexify__will-enter--',\n  animationWillLeave: 'react-contexify__will-leave--'\n};\n\n// I could use enum instead for both interfaces\n\nexport interface BuiltInTheme {\n  light: string;\n  dark: string;\n}\n\nexport interface BuiltInAnimation {\n  fade: string;\n  flip: string;\n  pop: string;\n  zoom: string;\n}\n\nexport const theme: BuiltInTheme = {\n  light: 'light',\n  dark: 'dark'\n};\n\nexport const animation: BuiltInAnimation = {\n  fade: 'fade',\n  flip: 'flip',\n  pop: 'pop',\n  zoom: 'zoom'\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar maptype_1 = require(\"./maptype\");\r\nvar variable_1 = require(\"./variable\");\r\n/**\r\n * An expression of variable terms and a constant.\r\n *\r\n * The constructor accepts an arbitrary number of parameters,\r\n * each of which must be one of the following types:\r\n *  - number\r\n *  - Variable\r\n *  - Expression\r\n *  - 2-tuple of [number, Variable|Expression]\r\n *\r\n * The parameters are summed. The tuples are multiplied.\r\n *\r\n * @class\r\n * @param {...(number|Variable|Expression|Array)} args\r\n */\r\nvar Expression = /** @class */ (function () {\r\n    function Expression() {\r\n        var parsed = parseArgs(arguments);\r\n        this._terms = parsed.terms;\r\n        this._constant = parsed.constant;\r\n    }\r\n    /**\r\n     * Returns the mapping of terms in the expression.\r\n     *\r\n     * This *must* be treated as const.\r\n     * @private\r\n     */\r\n    Expression.prototype.terms = function () {\r\n        return this._terms;\r\n    };\r\n    /**\r\n     * Returns the constant of the expression.\r\n     * @private\r\n     */\r\n    Expression.prototype.constant = function () {\r\n        return this._constant;\r\n    };\r\n    /**\r\n     * Returns the computed value of the expression.\r\n     *\r\n     * @private\r\n     * @return {Number} computed value of the expression\r\n     */\r\n    Expression.prototype.value = function () {\r\n        var result = this._constant;\r\n        for (var i = 0, n = this._terms.size(); i < n; i++) {\r\n            var pair = this._terms.itemAt(i);\r\n            result += pair.first.value() * pair.second;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new Expression by adding a number, variable or expression\r\n     * to the expression.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to add.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.plus = function (value) {\r\n        return new Expression(this, value);\r\n    };\r\n    /**\r\n     * Creates a new Expression by substracting a number, variable or expression\r\n     * from the expression.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to substract.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.minus = function (value) {\r\n        return new Expression(this, typeof value === 'number' ? -value : [-1, value]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by multiplying with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to multiply with.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.multiply = function (coefficient) {\r\n        return new Expression([coefficient, this]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by dividing with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to divide by.\r\n     * @return {Expression} expression\r\n     */\r\n    Expression.prototype.divide = function (coefficient) {\r\n        return new Expression([1 / coefficient, this]);\r\n    };\r\n    Expression.prototype.isConstant = function () {\r\n        return this._terms.size() == 0;\r\n    };\r\n    Expression.prototype.toString = function () {\r\n        var result = this._terms.array\r\n            .map(function (pair) {\r\n            return pair.second + '*' + pair.first.toString();\r\n        })\r\n            .join(' + ');\r\n        if (!this.isConstant() && this._constant !== 0) {\r\n            result += ' + ';\r\n        }\r\n        result += this._constant;\r\n        return result;\r\n    };\r\n    return Expression;\r\n}());\r\nexports.Expression = Expression;\r\n/**\r\n * An internal argument parsing function.\r\n * @private\r\n */\r\nfunction parseArgs(args) {\r\n    var constant = 0.0;\r\n    var factory = function () { return 0.0; };\r\n    var terms = maptype_1.createMap();\r\n    for (var i = 0, n = args.length; i < n; ++i) {\r\n        var item = args[i];\r\n        if (typeof item === 'number') {\r\n            constant += item;\r\n        }\r\n        else if (item instanceof variable_1.Variable) {\r\n            terms.setDefault(item, factory).second += 1.0;\r\n        }\r\n        else if (item instanceof Expression) {\r\n            constant += item.constant();\r\n            var terms2 = item.terms();\r\n            for (var j = 0, k = terms2.size(); j < k; j++) {\r\n                var termPair = terms2.itemAt(j);\r\n                terms.setDefault(termPair.first, factory).second += termPair.second;\r\n            }\r\n        }\r\n        else if (item instanceof Array) {\r\n            if (item.length !== 2) {\r\n                throw new Error('array must have length 2');\r\n            }\r\n            var value = item[0];\r\n            var value2 = item[1];\r\n            if (typeof value !== 'number') {\r\n                throw new Error('array item 0 must be a number');\r\n            }\r\n            if (value2 instanceof variable_1.Variable) {\r\n                terms.setDefault(value2, factory).second += value;\r\n            }\r\n            else if (value2 instanceof Expression) {\r\n                constant += value2.constant() * value;\r\n                var terms2 = value2.terms();\r\n                for (var j = 0, k = terms2.size(); j < k; j++) {\r\n                    var termPair = terms2.itemAt(j);\r\n                    terms.setDefault(termPair.first, factory).second +=\r\n                        termPair.second * value;\r\n                }\r\n            }\r\n            else {\r\n                throw new Error('array item 1 must be a variable or expression');\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('invalid Expression argument: ' + item);\r\n        }\r\n    }\r\n    return { terms: terms, constant: constant };\r\n}\r\n//# sourceMappingURL=expression.js.map","import { MenuId } from '../types';\n\nexport const HIDE_ALL = 0;\nexport const DISPLAY_MENU = (id: MenuId) => `DISPLAY_${id}`;\n","type Callback = (...args: any) => void;\ntype EventId = number | string;\n\ninterface EventManager {\n  eventList: Map<EventId, Set<Callback>>;\n  on: (event: EventId, callback: Callback) => () => boolean;\n  emit: (event: EventId, ...args: any) => boolean;\n}\n\nconst eventManager: EventManager = {\n  eventList: new Map(),\n  on(event, callback) {\n    this.eventList.has(event) || this.eventList.set(event, new Set());\n    this.eventList.get(event)!.add(callback);\n\n    return () => this.eventList.get(event)!.delete(callback);\n  },\n  emit(event, ...args) {\n    if (!this.eventList.has(event)) {\n      console.warn(\n        `<${event}> Event is not registered. Did you forgot to bind the event ?`\n      );\n      return false;\n    }\n    this.eventList.get(event)!.forEach(cb => cb.call(this, ...args));\n\n    return true;\n  }\n};\n\nexport { eventManager };\n","import * as React from 'react';\r\nimport { MouseEvent } from 'react';\r\n// import { EventDispatcher } from \"../../models\";\r\n// import { assert, layout } from \"../utils/util\";\r\n\r\nimport assert from '../utils/assert';\r\nimport layout from '../utils/layout';\r\n\r\nimport toCSSPx from '../utils/toCSSPx';\r\nimport {\r\n  Solver,\r\n  Variable,\r\n  Strength,\r\n  Constraint,\r\n  Operator\r\n} from '@ishikawa_masashi/cassowary';\r\nimport { SplitPane } from './SplitPane';\r\nimport { Resizer } from './Resizer';\r\n\r\nconst { useState, useEffect, useRef } = React;\r\nexport enum SplitOrientation {\r\n  Horizontal,\r\n  Vertical\r\n}\r\n\r\nexport interface SplitInfo {\r\n  min?: number;\r\n  max?: number;\r\n  value?: number;\r\n  resize?: 'fixed' | 'stretch';\r\n}\r\n\r\ntype Props = {\r\n  orientation: SplitOrientation;\r\n  onChange?: (splits: SplitInfo[]) => void;\r\n  splits?: SplitInfo[];\r\n  defaultSplit?: SplitInfo;\r\n  children: React.ReactNode;\r\n  name?: string; // TODO: Remove, for debugging.\r\n};\r\n\r\n// type State = {\r\n//   splits: SplitInfo[];\r\n// };\r\n\r\n// const onResizeBegin = new EventDispatcher(\"Resize Begin\");\r\n// const onResizeEnd = new EventDispatcher(\"Resize End\");\r\nexport const Split: React.FC<Props> = props => {\r\n  let containerRef = useRef<HTMLDivElement>(null);\r\n  let indexRef = useRef(-1);\r\n  let solverRef = useRef<Solver>();\r\n  let varsRef = useRef<Variable[]>();\r\n  let splitsRef = useRef<SplitInfo[]>([]);\r\n\r\n  const useForceUpdate = () => {\r\n    const [, setState] = useState();\r\n    return () => setState({});\r\n  };\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', onResizerMouseMove as any);\r\n    document.addEventListener('mouseup', onResizerMouseUp);\r\n    const newSplits = canonicalizeSplits(props);\r\n    setupSolver(newSplits, getContainerSize(props.orientation));\r\n    querySolver(newSplits);\r\n    splitsRef.current = newSplits;\r\n    // forceUpdate();\r\n    props.onChange && props.onChange(newSplits);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', onResizerMouseMove as any);\r\n      document.removeEventListener('mouseup', onResizerMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onResizerMouseUp();\r\n    const splits = canonicalizeSplits(props);\r\n    setupSolver(splits, getContainerSize(props.orientation));\r\n    querySolver(splits);\r\n    splitsRef.current = splits;\r\n    forceUpdate();\r\n    layout();\r\n  }, [props]);\r\n\r\n  const onResizerMouseDown = (i: number) => {\r\n    indexRef.current = i;\r\n    const index = indexRef.current;\r\n    const vars = varsRef.current!;\r\n    const solver = solverRef.current!;\r\n    const varilable = vars[index + 1];\r\n    solver.removeEditVariable(varilable);\r\n    solver.addEditVariable(varilable, Strength.medium);\r\n    // Split.onResizeBegin.dispatch(this);\r\n    window.document.documentElement.style.pointerEvents = 'none';\r\n  };\r\n\r\n  /**\r\n   * This fires for all splits, even if the resizer doesn't belong to this split.\r\n   */\r\n  const onResizerMouseUp = () => {\r\n    if (indexRef.current < 0) {\r\n      return;\r\n    }\r\n    indexRef.current = -1;\r\n    // Split.onResizeEnd.dispatch(this);\r\n    window.document.documentElement.style.pointerEvents = 'auto';\r\n    const newSplits = splitsRef.current.slice();\r\n    querySolver(newSplits);\r\n    return props.onChange && props.onChange(newSplits);\r\n  };\r\n\r\n  const onResizerMouseMove = (e: MouseEvent<any>) => {\r\n    if (indexRef.current < 0) {\r\n      return;\r\n    }\r\n    const vars = varsRef.current!;\r\n    const isVertical = props.orientation === SplitOrientation.Vertical;\r\n    const container = containerRef.current!;\r\n    const rect = container.getBoundingClientRect();\r\n    const mouseOffset = isVertical\r\n      ? e.clientX - rect.left\r\n      : e.clientY - rect.top;\r\n\r\n    const index = indexRef.current;\r\n    const solver = solverRef.current!;\r\n    solver.suggestValue(vars[index + 1], mouseOffset);\r\n    // this.solver.resolve();\r\n    solver.updateVariables();\r\n    const newSplits = splitsRef.current.slice();\r\n    querySolver(newSplits);\r\n    forceUpdate();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const querySolver = (splits: SplitInfo[]) => {\r\n    const vars = varsRef.current!;\r\n    for (let i = 0; i < splits.length; i++) {\r\n      splits[i].value = vars[i + 1].value() - vars[i].value();\r\n    }\r\n  };\r\n\r\n  const getContainerSize = (orientation: SplitOrientation): number => {\r\n    const container = containerRef.current!;\r\n    return orientation === SplitOrientation.Horizontal\r\n      ? container.clientHeight\r\n      : container.clientWidth;\r\n  };\r\n\r\n  const canonicalizeSplits = (props: Props): SplitInfo[] => {\r\n    const count = React.Children.count(props.children);\r\n    const containerSize = getContainerSize(props.orientation);\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n      let info = {};\r\n      if (props.splits && i < props.splits.length) {\r\n        info = Object.assign(info, props.splits[i]);\r\n      }\r\n      if (props.defaultSplit) {\r\n        info = Object.assign(props.defaultSplit, info);\r\n      }\r\n\r\n      result.push(\r\n        Object.assign(\r\n          {\r\n            min: 32,\r\n            max: containerSize\r\n          },\r\n          info\r\n        )\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Initializes a Cassowary solver and the constraints based on split infos and container size.\r\n   */\r\n  const setupSolver = (splits: SplitInfo[], containerSize: number) => {\r\n    assert(indexRef.current < 0, 'Should not be in a dragging state.');\r\n    //const weak = Cassowary.Strength.weak;\r\n    //// const medium = Cassowary.Strength.medium;\r\n    //const strong = Cassowary.Strength.strong;\r\n    //const required = Cassowary.Strength.required;\r\n\r\n    ////function eq(a1: any, a2: any, strength: number, weight?: number) {\r\n    ////    return new Cassowary.Equation(a1, a2, strength || weak, weight || 0);\r\n    ////}\r\n\r\n    //function geq(a1: any, a2: any, strength: any, weight?: number) {\r\n    //  return new Cassowary.Inequality(a1, Cassowary.GEQ, a2, strength, weight);\r\n    //}\r\n\r\n    //function leq(a1: any, a2: any, strength: any, weight?: number) {\r\n    //  return new Cassowary.Inequality(a1, Cassowary.LEQ, a2, strength, weight);\r\n    //}\r\n\r\n    // f     1               2           3   ...    l\r\n    // |-----|---------------|-----------|----------|\r\n\r\n    // const vars: CassowaryVar[] = this.vars = [new Cassowary.Variable()];\r\n    varsRef.current = [new Variable()];\r\n    const vars = varsRef.current;\r\n    solverRef.current = new Solver();\r\n    const solver = solverRef.current;\r\n\r\n    // Create Cassowary variables, these the dragged position as an offset from the origin.\r\n    for (let i = 0; i < splits.length; i++) {\r\n      vars.push(new Variable());\r\n    }\r\n\r\n    solver.addEditVariable(vars[0], Strength.strong);\r\n    solver.suggestValue(vars[0], 0);\r\n\r\n    let cn = new Constraint(vars[0], Operator.Eq, 0);\r\n    solver.addConstraint(cn);\r\n\r\n    solver.addEditVariable(vars[vars.length - 1], Strength.strong);\r\n    solver.suggestValue(vars[vars.length - 1], containerSize);\r\n\r\n    cn = new Constraint(vars[vars.length - 1], Operator.Eq, containerSize);\r\n    solver.addConstraint(cn);\r\n\r\n    for (let i = 0; i < vars.length - 1; i++) {\r\n      const { min, max } = splits[i];\r\n      const left = vars[i];\r\n      const right = vars[i + 1];\r\n      solver.addConstraint(\r\n        new Constraint(right.minus(left), Operator.Ge, min, Strength.strong)\r\n      );\r\n      solver.addConstraint(\r\n        new Constraint(right.minus(left), Operator.Le, max, Strength.strong)\r\n      );\r\n    }\r\n\r\n    // Add stays for the variables representing the dragged panes. This causes them to\r\n    // try and remain in their dragged position unless the constraints prevent that.\r\n    for (let i = 1; i < vars.length - 1; i++) {\r\n      // solver.addStay(vars[i], weak);\r\n      solver.addEditVariable(vars[i], Strength.weak);\r\n      solver.suggestValue(vars[i], 10000);\r\n    }\r\n\r\n    suggestVarValues(splits);\r\n  };\r\n\r\n  const suggestVarValues = (splits: SplitInfo[]) => {\r\n    const vars = varsRef.current!;\r\n    const solver = solverRef.current!;\r\n    for (let i = 0; i < vars.length - 1; i++) {\r\n      const x = vars[i];\r\n      const y = vars[i + 1];\r\n\r\n      if (splits[i].value) {\r\n        if (i < vars.length - 2) {\r\n          solver.suggestValue(y, x.value() + splits[i].value!);\r\n        } else {\r\n          solver.suggestValue(x, y.value() - splits[i].value!);\r\n        }\r\n        solver.updateVariables();\r\n      }\r\n    }\r\n  };\r\n  const isHorizontal = props.orientation === SplitOrientation.Horizontal;\r\n  const count = React.Children.count(props.children);\r\n  const children: React.ReactNode[] = [];\r\n  React.Children.forEach(props.children, (child, i) => {\r\n    const style: React.CSSProperties = {};\r\n    if (i < count - 1 && i < splitsRef.current.length) {\r\n      style.flexBasis = toCSSPx(\r\n        Math.round(splitsRef.current[i].value as number)\r\n      );\r\n    } else {\r\n      style.flex = 1;\r\n    }\r\n\r\n    children.push(<SplitPane key={i} style={style} child={child} />);\r\n    if (i < count - 1) {\r\n      children.push(\r\n        <Resizer\r\n          key={`Resizer-${i}`}\r\n          orientation={props.orientation}\r\n          onMouseDown={ev => onResizerMouseDown(i)}\r\n        />\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div\r\n      className=\"split\"\r\n      ref={containerRef}\r\n      style={{ flexDirection: isHorizontal ? 'column' : 'row' }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @class Strength\r\n */\r\nvar Strength = /** @class */ (function () {\r\n    function Strength() {\r\n    }\r\n    /**\r\n     * Create a new symbolic strength.\r\n     *\r\n     * @param a strong\r\n     * @param b medium\r\n     * @param c weak\r\n     * @param [w] weight\r\n     * @return strength\r\n     */\r\n    Strength.create = function (a, b, c, w) {\r\n        if (w === void 0) { w = 1.0; }\r\n        var result = 0.0;\r\n        result += Math.max(0.0, Math.min(1000.0, a * w)) * 1000000.0;\r\n        result += Math.max(0.0, Math.min(1000.0, b * w)) * 1000.0;\r\n        result += Math.max(0.0, Math.min(1000.0, c * w));\r\n        return result;\r\n    };\r\n    /**\r\n     * Clip a symbolic strength to the allowed min and max.\r\n     * @private\r\n     */\r\n    Strength.clip = function (value) {\r\n        return Math.max(0.0, Math.min(Strength.required, value));\r\n    };\r\n    /**\r\n     * The 'required' symbolic strength.\r\n     */\r\n    Strength.required = Strength.create(1000.0, 1000.0, 1000.0);\r\n    /**\r\n     * The 'strong' symbolic strength.\r\n     */\r\n    Strength.strong = Strength.create(1.0, 0.0, 0.0);\r\n    /**\r\n     * The 'medium' symbolic strength.\r\n     */\r\n    Strength.medium = Strength.create(0.0, 1.0, 0.0);\r\n    /**\r\n     * The 'weak' symbolic strength.\r\n     */\r\n    Strength.weak = Strength.create(0.0, 0.0, 1.0);\r\n    return Strength;\r\n}());\r\nexports.Strength = Strength;\r\n//# sourceMappingURL=strength.js.map","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\nimport { TriggerEvent } from '../types';\n\nexport function cloneItem(\n  children: ReactNode,\n  props: { nativeEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(child => Boolean(child)),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar expression_1 = require(\"./expression\");\r\nvar strength_1 = require(\"./strength\");\r\n/**\r\n * An enum defining the linear constraint operators.\r\n *\r\n * |Value|Operator|Description|\r\n * |----|-----|-----|\r\n * |`Le`|<=|Less than equal|\r\n * |`Ge`|>=|Greater than equal|\r\n * |`Eq`|==|Equal|\r\n *\r\n * @enum {Number}\r\n */\r\nvar Operator;\r\n(function (Operator) {\r\n    Operator[Operator[\"Le\"] = 0] = \"Le\";\r\n    Operator[Operator[\"Ge\"] = 1] = \"Ge\";\r\n    Operator[Operator[\"Eq\"] = 2] = \"Eq\"; // ==\r\n})(Operator = exports.Operator || (exports.Operator = {}));\r\n/**\r\n * A linear constraint equation.\r\n *\r\n * A constraint equation is composed of an expression, an operator,\r\n * and a strength. The RHS of the equation is implicitly zero.\r\n *\r\n * @class\r\n * @param {Expression} expression The constraint expression (LHS).\r\n * @param {Operator} operator The equation operator.\r\n * @param {Expression} [rhs] Right hand side of the expression.\r\n * @param {Number} [strength=Strength.required] The strength of the constraint.\r\n */\r\nvar Constraint = /** @class */ (function () {\r\n    function Constraint(expression, operator, rhs, strength) {\r\n        if (strength === void 0) { strength = strength_1.Strength.required; }\r\n        this._id = CnId++;\r\n        this._operator = operator;\r\n        this._strength = strength_1.Strength.clip(strength);\r\n        if (rhs === undefined && expression instanceof expression_1.Expression) {\r\n            this._expression = expression;\r\n        }\r\n        else {\r\n            this._expression = expression.minus(rhs);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the unique id number of the constraint.\r\n     * @private\r\n     */\r\n    Constraint.prototype.id = function () {\r\n        return this._id;\r\n    };\r\n    /**\r\n     * Returns the expression of the constraint.\r\n     *\r\n     * @return {Expression} expression\r\n     */\r\n    Constraint.prototype.expression = function () {\r\n        return this._expression;\r\n    };\r\n    /**\r\n     * Returns the relational operator of the constraint.\r\n     *\r\n     * @return {Operator} linear constraint operator\r\n     */\r\n    Constraint.prototype.op = function () {\r\n        return this._operator;\r\n    };\r\n    /**\r\n     * Returns the strength of the constraint.\r\n     *\r\n     * @return {Number} strength\r\n     */\r\n    Constraint.prototype.strength = function () {\r\n        return this._strength;\r\n    };\r\n    Constraint.prototype.toString = function () {\r\n        return (this._expression.toString() +\r\n            ' ' +\r\n            ['<=', '>=', '='][this._operator] +\r\n            ' 0 (' +\r\n            this._strength.toString() +\r\n            ')');\r\n    };\r\n    return Constraint;\r\n}());\r\nexports.Constraint = Constraint;\r\n/**\r\n * The internal constraint id counter.\r\n * @private\r\n */\r\nvar CnId = 0;\r\n//# sourceMappingURL=constraint.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction createMap() {\r\n    return new IndexedMap();\r\n}\r\nexports.createMap = createMap;\r\nvar IndexedMap = /** @class */ (function () {\r\n    function IndexedMap() {\r\n        this.index = {};\r\n        this.array = [];\r\n    }\r\n    /**\r\n     * Returns the number of items in the array.\r\n     */\r\n    IndexedMap.prototype.size = function () {\r\n        return this.array.length;\r\n    };\r\n    /**\r\n     * Returns true if the array is empty.\r\n     */\r\n    IndexedMap.prototype.empty = function () {\r\n        return this.array.length === 0;\r\n    };\r\n    /**\r\n     * Returns the item at the given array index.\r\n     *\r\n     * @param index The integer index of the desired item.\r\n     */\r\n    IndexedMap.prototype.itemAt = function (index) {\r\n        return this.array[index];\r\n    };\r\n    /**\r\n     * Returns true if the key is in the array, false otherwise.\r\n     *\r\n     * @param key The key to locate in the array.\r\n     */\r\n    IndexedMap.prototype.contains = function (key) {\r\n        return this.index[key.id()] !== undefined;\r\n    };\r\n    /**\r\n     * Returns the pair associated with the given key, or undefined.\r\n     *\r\n     * @param key The key to locate in the array.\r\n     */\r\n    IndexedMap.prototype.find = function (key) {\r\n        var i = this.index[key.id()];\r\n        return i === undefined ? undefined : this.array[i];\r\n    };\r\n    /**\r\n     * Returns the pair associated with the key if it exists.\r\n     *\r\n     * If the key does not exist, a new pair will be created and\r\n     * inserted using the value created by the given factory.\r\n     *\r\n     * @param key The key to locate in the array.\r\n     * @param factory The function which creates the default value.\r\n     */\r\n    IndexedMap.prototype.setDefault = function (key, factory) {\r\n        var i = this.index[key.id()];\r\n        if (i === undefined) {\r\n            var pair = new Pair(key, factory());\r\n            this.index[key.id()] = this.array.length;\r\n            this.array.push(pair);\r\n            return pair;\r\n        }\r\n        else {\r\n            return this.array[i];\r\n        }\r\n    };\r\n    /**\r\n     * Insert the pair into the array and return the pair.\r\n     *\r\n     * This will overwrite any existing entry in the array.\r\n     *\r\n     * @param key The key portion of the pair.\r\n     * @param value The value portion of the pair.\r\n     */\r\n    IndexedMap.prototype.insert = function (key, value) {\r\n        var pair = new Pair(key, value);\r\n        var i = this.index[key.id()];\r\n        if (i === undefined) {\r\n            this.index[key.id()] = this.array.length;\r\n            this.array.push(pair);\r\n        }\r\n        else {\r\n            this.array[i] = pair;\r\n        }\r\n        return pair;\r\n    };\r\n    /**\r\n     * Removes and returns the pair for the given key, or undefined.\r\n     *\r\n     * @param key The key to remove from the map.\r\n     */\r\n    IndexedMap.prototype.erase = function (key) {\r\n        var i = this.index[key.id()];\r\n        if (i === undefined) {\r\n            return undefined;\r\n        }\r\n        this.index[key.id()] = undefined;\r\n        var pair = this.array[i];\r\n        var last = this.array.pop();\r\n        if (pair !== last) {\r\n            this.array[i] = last;\r\n            this.index[last.first.id()] = i;\r\n        }\r\n        return pair;\r\n    };\r\n    /**\r\n     * Create a copy of this associative array.\r\n     */\r\n    IndexedMap.prototype.copy = function () {\r\n        var copy = new IndexedMap();\r\n        for (var i = 0; i < this.array.length; i++) {\r\n            var pair = this.array[i].copy();\r\n            copy.array[i] = pair;\r\n            copy.index[pair.first.id()] = i;\r\n        }\r\n        return copy;\r\n    };\r\n    return IndexedMap;\r\n}());\r\n/**\r\n * A class which defines a generic pair object.\r\n * @private\r\n */\r\n// tslint:disable: max-classes-per-file\r\nvar Pair = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Pair object.\r\n     *\r\n     * @param first The first item of the pair.\r\n     * @param second The second item of the pair.\r\n     */\r\n    function Pair(first, second) {\r\n        this.first = first;\r\n        this.second = second;\r\n    }\r\n    /**\r\n     * Create a copy of the pair.\r\n     */\r\n    Pair.prototype.copy = function () {\r\n        return new Pair(this.first, this.second);\r\n    };\r\n    return Pair;\r\n}());\r\n//# sourceMappingURL=maptype.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar expression_1 = require(\"./expression\");\r\n/**\r\n * The primary user constraint variable.\r\n *\r\n * @class\r\n * @param {String} [name=\"\"] The name to associated with the variable.\r\n */\r\nvar Variable = /** @class */ (function () {\r\n    function Variable(name) {\r\n        if (name === void 0) { name = ''; }\r\n        this._value = 0.0;\r\n        this._context = null;\r\n        this._id = VarId++;\r\n        this._name = name;\r\n    }\r\n    /**\r\n     * Returns the unique id number of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.id = function () {\r\n        return this._id;\r\n    };\r\n    /**\r\n     * Returns the name of the variable.\r\n     *\r\n     * @return {String} name of the variable\r\n     */\r\n    Variable.prototype.name = function () {\r\n        return this._name;\r\n    };\r\n    /**\r\n     * Set the name of the variable.\r\n     *\r\n     * @param {String} name Name of the variable\r\n     */\r\n    Variable.prototype.setName = function (name) {\r\n        this._name = name;\r\n    };\r\n    /**\r\n     * Returns the user context object of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.context = function () {\r\n        return this._context;\r\n    };\r\n    /**\r\n     * Set the user context object of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.setContext = function (context) {\r\n        this._context = context;\r\n    };\r\n    /**\r\n     * Returns the value of the variable.\r\n     *\r\n     * @return {Number} Calculated value\r\n     */\r\n    Variable.prototype.value = function () {\r\n        return this._value;\r\n    };\r\n    /**\r\n     * Set the value of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.setValue = function (value) {\r\n        this._value = value;\r\n    };\r\n    /**\r\n     * Creates a new Expression by adding a number, variable or expression\r\n     * to the variable.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to add.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.plus = function (value) {\r\n        return new expression_1.Expression(this, value);\r\n    };\r\n    /**\r\n     * Creates a new Expression by substracting a number, variable or expression\r\n     * from the variable.\r\n     *\r\n     * @param {Number|Variable|Expression} value Value to substract.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.minus = function (value) {\r\n        return new expression_1.Expression(this, typeof value === 'number' ? -value : [-1, value]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by multiplying with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to multiply with.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.multiply = function (coefficient) {\r\n        return new expression_1.Expression([coefficient, this]);\r\n    };\r\n    /**\r\n     * Creates a new Expression by dividing with a fixed number.\r\n     *\r\n     * @param {Number} coefficient Coefficient to divide by.\r\n     * @return {Expression} expression\r\n     */\r\n    Variable.prototype.divide = function (coefficient) {\r\n        return new expression_1.Expression([1 / coefficient, this]);\r\n    };\r\n    /**\r\n     * Returns the JSON representation of the variable.\r\n     * @private\r\n     */\r\n    Variable.prototype.toJSON = function () {\r\n        return {\r\n            name: this._name,\r\n            value: this._value\r\n        };\r\n    };\r\n    Variable.prototype.toString = function () {\r\n        return this._context + '[' + this._name + ':' + this._value + ']';\r\n    };\r\n    return Variable;\r\n}());\r\nexports.Variable = Variable;\r\n/**\r\n * The internal variable id counter.\r\n * @private\r\n */\r\nvar VarId = 0;\r\n//# sourceMappingURL=variable.js.map","export { Menu } from './components/Menu';\nexport { Item } from './components/Item';\nexport { Separator } from './components/Separator';\nexport { IconFont } from './components/IconFont';\nexport { Submenu } from './components/Submenu';\nexport { MenuProvider } from './components/MenuProvider';\n\nexport { contextMenu } from './utils/contextMenu';\nexport { theme, animation } from './utils/styles';\n\nexport { Split } from './components/Split';\nexport { SplitOrientation } from './components/Split';\nexport { SplitInfo } from './components/Split';\n","/* global: window */\nimport React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { cloneItem } from './cloneItem';\nimport { Portal } from './Portal';\n\nimport { HIDE_ALL, DISPLAY_MENU } from '../utils/actions';\nimport { styles } from '../utils/styles';\nimport { eventManager } from '../utils/eventManager';\nimport { TriggerEvent, StyleProps, MenuId } from '../types';\n\nconst KEY = {\n  ENTER: 13,\n  ESC: 27,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39\n};\n\nexport interface MenuProps extends StyleProps {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to `.react-contexify__will-enter--${given animation}`\n   *\n   * Built-in animations are fade, flip, pop, zoom\n   */\n  animation?: string;\n\n  /**\n   * Invoked when the menu is shown.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked when the menu is hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  nativeEvent: TriggerEvent;\n  propsFromTrigger: object;\n}\n\nclass Menu extends Component<MenuProps, MenuState> {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    children: PropTypes.node.isRequired,\n    theme: PropTypes.string,\n    animation: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  state = {\n    x: 0,\n    y: 0,\n    visible: false,\n    nativeEvent: {} as TriggerEvent,\n    propsFromTrigger: {},\n    onShown: null,\n    onHidden: null\n  };\n\n  menuRef!: HTMLDivElement;\n  unsub: (() => boolean)[] = [];\n\n  componentDidMount() {\n    this.unsub.push(eventManager.on(DISPLAY_MENU(this.props.id), this.show));\n    this.unsub.push(eventManager.on(HIDE_ALL, this.hide));\n  }\n\n  componentWillUnmount() {\n    this.unsub.forEach(cb => cb());\n    this.unBindWindowEvent();\n  }\n\n  componentDidUpdate(_: Readonly<MenuProps>, prevState: Readonly<MenuState>) {\n    if (this.state.visible !== prevState.visible) {\n      if (this.state.visible && this.props.onShown) {\n        this.props.onShown();\n      } else if (!this.state.visible && this.props.onHidden) {\n        this.props.onHidden();\n      }\n    }\n  }\n\n  bindWindowEvent = () => {\n    window.addEventListener('resize', this.hide);\n    window.addEventListener('contextmenu', this.hide);\n    window.addEventListener('mousedown', this.hide);\n    window.addEventListener('click', this.hide);\n    window.addEventListener('scroll', this.hide);\n    window.addEventListener('keydown', this.handleKeyboard);\n  };\n\n  unBindWindowEvent = () => {\n    window.removeEventListener('resize', this.hide);\n    window.removeEventListener('contextmenu', this.hide);\n    window.removeEventListener('mousedown', this.hide);\n    window.removeEventListener('click', this.hide);\n    window.removeEventListener('scroll', this.hide);\n    window.removeEventListener('keydown', this.handleKeyboard);\n  };\n\n  onMouseEnter = () => window.removeEventListener('mousedown', this.hide);\n\n  onMouseLeave = () => window.addEventListener('mousedown', this.hide);\n\n  hide = (event?: Event) => {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    this.unBindWindowEvent();\n    this.setState({ visible: false });\n  };\n\n  handleKeyboard = (e: KeyboardEvent) => {\n    if (e.keyCode === KEY.ENTER || e.keyCode === KEY.ESC) {\n      this.unBindWindowEvent();\n      this.setState({ visible: false });\n    }\n  };\n\n  setRef = (ref: HTMLDivElement) => {\n    this.menuRef = ref;\n  };\n\n  setMenuPosition() {\n    const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = this.menuRef;\n    let { x, y } = this.state;\n\n    if (x + menuWidth > windowWidth) {\n      x -= x + menuWidth - windowWidth;\n    }\n\n    if (y + menuHeight > windowHeight) {\n      y -= y + menuHeight - windowHeight;\n    }\n\n    this.setState(\n      {\n        x,\n        y\n      },\n      this.bindWindowEvent\n    );\n  }\n\n  getMousePosition(e: TriggerEvent) {\n    const pos = {\n      x: e.clientX,\n      y: e.clientY\n    };\n\n    if (\n      e.type === 'touchend' &&\n      (!pos.x || !pos.y) &&\n      (e.changedTouches && e.changedTouches.length > 0)\n    ) {\n      pos.x = e.changedTouches[0].clientX;\n      pos.y = e.changedTouches[0].clientY;\n    }\n\n    if (!pos.x || pos.x < 0) {\n      pos.x = 0;\n    }\n\n    if (!pos.y || pos.y < 0) {\n      pos.y = 0;\n    }\n\n    return pos;\n  }\n\n  show = (e: TriggerEvent, props: object) => {\n    e.stopPropagation();\n    eventManager.emit(HIDE_ALL);\n\n    const { x, y } = this.getMousePosition(e);\n\n    this.setState(\n      {\n        visible: true,\n        x,\n        y,\n        nativeEvent: e,\n        propsFromTrigger: props\n      },\n      this.setMenuPosition\n    );\n  };\n\n  render() {\n    const { theme, animation, style, className, children } = this.props;\n    const { visible, nativeEvent, propsFromTrigger, x, y } = this.state;\n\n    const cssClasses = cx(styles.menu, className, {\n      [styles.theme + theme]: theme,\n      [styles.animationWillEnter + animation]: animation\n    });\n    const menuStyle = {\n      ...style,\n      left: x,\n      top: y + 1,\n      opacity: 1\n    };\n\n    return (\n      <Portal>\n        {visible && (\n          <div\n            className={cssClasses}\n            style={menuStyle}\n            ref={this.setRef}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n          >\n            <div>\n              {cloneItem(children, {\n                nativeEvent,\n                propsFromTrigger\n              })}\n            </div>\n          </div>\n        )}\n      </Portal>\n    );\n  }\n}\n\nexport { Menu };\n","import { PureComponent, ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\n\nclass Portal extends PureComponent<{ children: ReactNode }> {\n  state = {\n    canRender: false\n  };\n  container = {} as HTMLDivElement;\n\n  componentDidMount() {\n    this.container = document.createElement('div');\n    document.body.appendChild(this.container);\n    this.setState({\n      canRender: true\n    });\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.container);\n  }\n  render() {\n    return (\n      this.state.canRender && createPortal(this.props.children, this.container)\n    );\n  }\n}\n\nexport { Portal };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","import React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { styles } from '../utils/styles';\nimport {\n  MenuItemEventHandler,\n  TriggerEvent,\n  StyleProps,\n  InternalProps\n} from '../types';\n\nexport interface ItemProps extends StyleProps, InternalProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `props`\n   */\n  data?: object;\n\n  /**\n   * Disable or not the `Item`. If a function is used, a boolean must be returned\n   */\n  disabled: boolean | ((args: MenuItemEventHandler) => boolean);\n\n  /**\n   * Callback when the current `Item` is clicked. The callback give you access to the current event and also the data passed\n   * to the `Item`.\n   * `({ event, props }) => ...`\n   */\n  onClick: (args: MenuItemEventHandler) => any;\n}\n\nconst noop = () => {};\n\nclass Item extends Component<ItemProps> {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    data: PropTypes.object,\n    disabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onClick: PropTypes.func,\n    nativeEvent: PropTypes.object,\n    propsFromTrigger: PropTypes.object,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  static defaultProps = {\n    disabled: false,\n    onClick: noop\n  };\n\n  isDisabled: boolean;\n\n  constructor(props: ItemProps) {\n    super(props);\n    const { disabled, nativeEvent, propsFromTrigger, data } = this.props;\n\n    this.isDisabled =\n      typeof disabled === 'function'\n        ? disabled({\n            event: nativeEvent as TriggerEvent,\n            props: { ...propsFromTrigger, ...data }\n          })\n        : disabled;\n  }\n\n  handleClick = (e: React.MouseEvent) => {\n    this.isDisabled\n      ? e.stopPropagation()\n      : this.props.onClick({\n          event: this.props.nativeEvent as TriggerEvent,\n          props: { ...this.props.propsFromTrigger, ...this.props.data }\n        });\n  };\n\n  render() {\n    const { className, style, children } = this.props;\n\n    const cssClasses = cx(styles.item, className, {\n      [`${styles.itemDisabled}`]: this.isDisabled\n    });\n\n    return (\n      <div\n        className={cssClasses}\n        style={style}\n        onClick={this.handleClick}\n        role=\"presentation\"\n      >\n        <div className={styles.itemContent}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport { Item };\n","import React, { SFC } from 'react';\n\nimport { styles } from '../utils/styles';\n\nexport const Separator: SFC = () => <div className={styles.separator} />;\n","import React, { SFC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { styles } from '../utils/styles';\nimport { StyleProps } from '../types';\n\nexport interface IconFontProps extends StyleProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  children?: ReactNode;\n}\n\nconst IconFont: SFC<IconFontProps> = ({ className, style, children }) => (\n  <i className={cx(styles.itemIcon, className)} style={style}>\n    {children || ''}\n  </i>\n);\n\nIconFont.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object\n} as any;\n// Hack till the typedef is fixed.\n\nexport { IconFont };\n","import React, { Component, ReactNode, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { cloneItem } from './cloneItem';\nimport { styles } from '../utils/styles';\nimport {\n  MenuItemEventHandler,\n  TriggerEvent,\n  StyleProps,\n  InternalProps\n} from '../types';\n\nexport interface SubMenuProps extends StyleProps, InternalProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  label: ReactNode;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Render a custom arrow\n   */\n  arrow: ReactNode;\n\n  /**\n   * Disable or not the `Submenu`. If a function is used, a boolean must be returned\n   */\n  disabled: boolean | ((args: MenuItemEventHandler) => boolean);\n}\n\ninterface SubMenuState {\n  left?: string | number;\n  right?: string | number;\n  top?: string | number;\n  bottom?: string | number;\n}\n\nclass Submenu extends Component<SubMenuProps, SubMenuState> {\n  static propTypes = {\n    label: PropTypes.node.isRequired,\n    children: PropTypes.node.isRequired,\n    nativeEvent: PropTypes.object,\n    arrow: PropTypes.node,\n    disabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    arrow: '▶',\n    disabled: false,\n    nativeEvent: {} as TriggerEvent\n  };\n\n  state = {\n    left: '100%',\n    top: 0,\n    bottom: 'initial'\n  };\n\n  menu!: HTMLElement;\n\n  setRef = (ref: HTMLDivElement) => {\n    this.menu = ref;\n  };\n\n  componentDidMount() {\n    const { innerWidth, innerHeight } = window;\n    const rect = this.menu.getBoundingClientRect();\n    const style: SubMenuState = {};\n\n    if (rect.right < innerWidth) {\n      style.left = '100%';\n      style.right = undefined;\n    } else {\n      style.right = '100%';\n      style.left = undefined;\n    }\n\n    if (rect.bottom > innerHeight) {\n      style.bottom = 0;\n      style.top = 'initial';\n    } else {\n      style.bottom = 'initial';\n      style.top = 0;\n    }\n\n    this.setState(style);\n  }\n\n  handleClick(e: SyntheticEvent) {\n    e.stopPropagation();\n  }\n\n  render() {\n    const {\n      arrow,\n      disabled,\n      className,\n      style,\n      label,\n      nativeEvent,\n      children,\n      propsFromTrigger\n    } = this.props;\n\n    const cssClasses = cx(styles.item, className, {\n      [`${styles.itemDisabled}`]:\n        typeof disabled === 'function'\n          ? disabled({\n              event: nativeEvent as TriggerEvent,\n              props: { ...propsFromTrigger }\n            })\n          : disabled\n    });\n\n    const submenuStyle = {\n      ...style,\n      ...this.state\n    };\n\n    return (\n      <div className={cssClasses} role=\"presentation\">\n        <div className={styles.itemContent} onClick={this.handleClick}>\n          {label}\n          <span className={styles.submenuArrow}>{arrow}</span>\n        </div>\n        <div className={styles.submenu} ref={this.setRef} style={submenuStyle}>\n          {cloneItem(children, {\n            propsFromTrigger,\n            nativeEvent: nativeEvent as TriggerEvent\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Submenu };\n","import {\n  Component,\n  createElement,\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactNode,\n  SyntheticEvent,\n  ReactElement\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DISPLAY_MENU } from '../utils/actions';\nimport { eventManager } from '../utils/eventManager';\nimport { MenuId, StyleProps } from '../types';\n\nexport interface MenuProviderProps extends StyleProps {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Any valid node that can be rendered or a function returning a valid react node\n   */\n  component: ReactNode | ((args?: any) => ReactNode);\n\n  /**\n   * Render props\n   */\n  render?: (args?: any) => ReactNode;\n\n  /**\n   * Any react event\n   * `onClick`, `onContextMenu`, ...\n   */\n  event: string;\n\n  /**\n   * Store children ref\n   * `default: true`\n   */\n  storeRef: boolean;\n\n  /**\n   * Any valid object, data are passed to the menu item callback\n   */\n  data?: object;\n}\n\nclass MenuProvider extends Component<MenuProviderProps> {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    children: PropTypes.node.isRequired,\n    component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    render: PropTypes.func,\n    event: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    storeRef: PropTypes.bool,\n    data: PropTypes.object\n  };\n\n  static defaultProps = {\n    component: 'div',\n    event: 'onContextMenu',\n    storeRef: true\n  };\n\n  childrenRefs = [] as HTMLElement[];\n\n  handleEvent = (e: SyntheticEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    eventManager.emit(DISPLAY_MENU(this.props.id), e.nativeEvent, {\n      ref:\n        this.childrenRefs.length === 1\n          ? this.childrenRefs[0]\n          : this.childrenRefs,\n      ...this.props.data\n    });\n  };\n\n  setChildRef = (ref: HTMLElement) =>\n    ref === null || this.childrenRefs.push(ref);\n\n  getChildren() {\n    // remove all the props specific to the provider\n    const {\n      id,\n      component,\n      event,\n      children,\n      className,\n      style,\n      storeRef,\n      data,\n      ...rest\n    } = this.props;\n\n    // reset refs\n    this.childrenRefs = [];\n\n    return Children.map(children, child =>\n      isValidElement(child)\n        ? cloneElement(child as ReactElement<any>, {\n            ...rest,\n            ...(storeRef ? { ref: this.setChildRef } : {})\n          })\n        : child\n    );\n  }\n\n  render() {\n    const { component, render, event, className, style } = this.props;\n    const attributes = {\n      [event]: this.handleEvent,\n      className,\n      style\n    };\n\n    if (typeof render === 'function') {\n      return render({ ...attributes, children: this.getChildren() });\n    }\n\n    return createElement(component as any, attributes, this.getChildren());\n  }\n}\n\nexport { MenuProvider };\n","import { eventManager } from './eventManager';\nimport { HIDE_ALL, DISPLAY_MENU } from './actions';\nimport { MenuId } from '../types';\nimport React, { SyntheticEvent } from 'react';\n\nexport interface ContextMenu {\n  show: (params: {\n    id: MenuId;\n    event: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent;\n    props?: object;\n  }) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props }) {\n    eventManager.emit(\n      DISPLAY_MENU(id),\n      (event as SyntheticEvent).nativeEvent || event,\n      props\n    );\n  },\n  hideAll() {\n    eventManager.emit(HIDE_ALL);\n  }\n};\n\nexport { contextMenu };\n","export default function assert(c: any, message?: string) {\r\n  if (!c) {\r\n    throw new Error(message);\r\n  }\r\n}\r\n","const layoutThrottleDuration = 10;\r\nlet layoutTimeout = 0;\r\n\r\nexport default function layout() {\r\n  if (layoutTimeout) {\r\n    window.clearTimeout(layoutTimeout);\r\n  }\r\n  window.setTimeout(() => {\r\n    layoutTimeout = 0;\r\n    document.dispatchEvent(new Event('layout'));\r\n  }, layoutThrottleDuration);\r\n}\r\n","export default function toCSSPx(x: number) {\r\n  return (x | 0) + 'px';\r\n}\r\n","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2018, Nucleic Development Team & H. Rutjes.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./constraint\"));\r\n__export(require(\"./expression\"));\r\n__export(require(\"./solver\"));\r\n__export(require(\"./strength\"));\r\n__export(require(\"./variable\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014, Nucleic Development Team.\r\n|\r\n| Distributed under the terms of the Modified BSD License.\r\n|\r\n| The full license is in the file COPYING.txt, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar constraint_1 = require(\"./constraint\");\r\nvar expression_1 = require(\"./expression\");\r\nvar maptype_1 = require(\"./maptype\");\r\nvar strength_1 = require(\"./strength\");\r\n/**\r\n * The constraint solver class.\r\n *\r\n * @class\r\n */\r\nvar Solver = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Solver.\r\n     */\r\n    function Solver() {\r\n        this._cnMap = createCnMap();\r\n        this._rowMap = createRowMap();\r\n        this._varMap = createVarMap();\r\n        this._editMap = createEditMap();\r\n        this._infeasibleRows = [];\r\n        this._objective = new Row();\r\n        this._artificial = null;\r\n        this._idTick = 0;\r\n    }\r\n    /**\r\n     * Creates and add a constraint to the solver.\r\n     *\r\n     * @param {Expression|Variable} lhs Left hand side of the expression\r\n     * @param {Operator} operator Operator\r\n     * @param {Expression|Variable|Number} rhs Right hand side of the expression\r\n     * @param {Number} [strength=Strength.required] Strength\r\n     */\r\n    Solver.prototype.createConstraint = function (lhs, operator, rhs, strength) {\r\n        if (strength === void 0) { strength = strength_1.Strength.required; }\r\n        var cn = new constraint_1.Constraint(lhs, operator, rhs, strength);\r\n        this.addConstraint(cn);\r\n        return cn;\r\n    };\r\n    /**\r\n     * Add a constraint to the solver.\r\n     *\r\n     * @param {Constraint} constraint Constraint to add to the solver\r\n     */\r\n    Solver.prototype.addConstraint = function (constraint) {\r\n        var cnPair = this._cnMap.find(constraint);\r\n        if (cnPair !== undefined) {\r\n            throw new Error('duplicate constraint');\r\n        }\r\n        // Creating a row causes symbols to be reserved for the variables\r\n        // in the constraint. If this method exits with an exception,\r\n        // then its possible those variables will linger in the var map.\r\n        // Since its likely that those variables will be used in other\r\n        // constraints and since exceptional conditions are uncommon,\r\n        // i'm not too worried about aggressive cleanup of the var map.\r\n        var data = this._createRow(constraint);\r\n        var row = data.row;\r\n        var tag = data.tag;\r\n        var subject = this._chooseSubject(row, tag);\r\n        // If chooseSubject couldnt find a valid entering symbol, one\r\n        // last option is available if the entire row is composed of\r\n        // dummy variables. If the constant of the row is zero, then\r\n        // this represents redundant constraints and the new dummy\r\n        // marker can enter the basis. If the constant is non-zero,\r\n        // then it represents an unsatisfiable constraint.\r\n        if (subject.type() === SymbolType.Invalid && row.allDummies()) {\r\n            if (!nearZero(row.constant())) {\r\n                throw new Error('unsatisfiable constraint');\r\n            }\r\n            else {\r\n                subject = tag.marker;\r\n            }\r\n        }\r\n        // If an entering symbol still isn't found, then the row must\r\n        // be added using an artificial variable. If that fails, then\r\n        // the row represents an unsatisfiable constraint.\r\n        if (subject.type() === SymbolType.Invalid) {\r\n            if (!this._addWithArtificialVariable(row)) {\r\n                throw new Error('unsatisfiable constraint');\r\n            }\r\n        }\r\n        else {\r\n            row.solveFor(subject);\r\n            this._substitute(subject, row);\r\n            this._rowMap.insert(subject, row);\r\n        }\r\n        this._cnMap.insert(constraint, tag);\r\n        // Optimizing after each constraint is added performs less\r\n        // aggregate work due to a smaller average system size. It\r\n        // also ensures the solver remains in a consistent state.\r\n        this._optimize(this._objective);\r\n    };\r\n    /**\r\n     * Remove a constraint from the solver.\r\n     *\r\n     * @param {Constraint} constraint Constraint to remove from the solver\r\n     */\r\n    Solver.prototype.removeConstraint = function (constraint) {\r\n        var cnPair = this._cnMap.erase(constraint);\r\n        if (cnPair === undefined) {\r\n            throw new Error('unknown constraint');\r\n        }\r\n        // Remove the error effects from the objective function\r\n        // *before* pivoting, or substitutions into the objective\r\n        // will lead to incorrect solver results.\r\n        this._removeConstraintEffects(constraint, cnPair.second);\r\n        // If the marker is basic, simply drop the row. Otherwise,\r\n        // pivot the marker into the basis and then drop the row.\r\n        var marker = cnPair.second.marker;\r\n        var rowPair = this._rowMap.erase(marker);\r\n        if (rowPair === undefined) {\r\n            var leaving = this._getMarkerLeavingSymbol(marker);\r\n            if (leaving.type() === SymbolType.Invalid) {\r\n                throw new Error('failed to find leaving row');\r\n            }\r\n            rowPair = this._rowMap.erase(leaving);\r\n            rowPair.second.solveForEx(leaving, marker);\r\n            this._substitute(marker, rowPair.second);\r\n        }\r\n        // Optimizing after each constraint is removed ensures that the\r\n        // solver remains consistent. It makes the solver api easier to\r\n        // use at a small tradeoff for speed.\r\n        this._optimize(this._objective);\r\n    };\r\n    /**\r\n     * Test whether the solver contains the constraint.\r\n     *\r\n     * @param {Constraint} constraint Constraint to test for\r\n     * @return {Bool} true or false\r\n     */\r\n    Solver.prototype.hasConstraint = function (constraint) {\r\n        return this._cnMap.contains(constraint);\r\n    };\r\n    /**\r\n     * Add an edit variable to the solver.\r\n     *\r\n     * @param {Variable} variable Edit variable to add to the solver\r\n     * @param {Number} strength Strength, should be less than `Strength.required`\r\n     */\r\n    Solver.prototype.addEditVariable = function (variable, strength) {\r\n        var editPair = this._editMap.find(variable);\r\n        if (editPair !== undefined) {\r\n            throw new Error('duplicate edit variable');\r\n        }\r\n        strength = strength_1.Strength.clip(strength);\r\n        if (strength === strength_1.Strength.required) {\r\n            throw new Error('bad required strength');\r\n        }\r\n        var expr = new expression_1.Expression(variable);\r\n        var cn = new constraint_1.Constraint(expr, constraint_1.Operator.Eq, undefined, strength);\r\n        this.addConstraint(cn);\r\n        var tag = this._cnMap.find(cn).second;\r\n        var info = { tag: tag, constraint: cn, constant: 0.0 };\r\n        this._editMap.insert(variable, info);\r\n    };\r\n    /**\r\n     * Remove an edit variable from the solver.\r\n     *\r\n     * @param {Variable} variable Edit variable to remove from the solver\r\n     */\r\n    Solver.prototype.removeEditVariable = function (variable) {\r\n        var editPair = this._editMap.erase(variable);\r\n        if (editPair === undefined) {\r\n            throw new Error('unknown edit variable');\r\n        }\r\n        this.removeConstraint(editPair.second.constraint);\r\n    };\r\n    /**\r\n     * Test whether the solver contains the edit variable.\r\n     *\r\n     * @param {Variable} variable Edit variable to test for\r\n     * @return {Bool} true or false\r\n     */\r\n    Solver.prototype.hasEditVariable = function (variable) {\r\n        return this._editMap.contains(variable);\r\n    };\r\n    /**\r\n     * Suggest the value of an edit variable.\r\n     *\r\n     * @param {Variable} variable Edit variable to suggest a value for\r\n     * @param {Number} value Suggested value\r\n     */\r\n    Solver.prototype.suggestValue = function (variable, value) {\r\n        var editPair = this._editMap.find(variable);\r\n        if (editPair === undefined) {\r\n            throw new Error('unknown edit variable');\r\n        }\r\n        var rows = this._rowMap;\r\n        var info = editPair.second;\r\n        var delta = value - info.constant;\r\n        info.constant = value;\r\n        // Check first if the positive error variable is basic.\r\n        var marker = info.tag.marker;\r\n        var rowPair = rows.find(marker);\r\n        if (rowPair !== undefined) {\r\n            if (rowPair.second.add(-delta) < 0.0) {\r\n                this._infeasibleRows.push(marker);\r\n            }\r\n            this._dualOptimize();\r\n            return;\r\n        }\r\n        // Check next if the negative error variable is basic.\r\n        var other = info.tag.other;\r\n        rowPair = rows.find(other);\r\n        if (rowPair !== undefined) {\r\n            if (rowPair.second.add(delta) < 0.0) {\r\n                this._infeasibleRows.push(other);\r\n            }\r\n            this._dualOptimize();\r\n            return;\r\n        }\r\n        // Otherwise update each row where the error variables exist.\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var rowPair_1 = rows.itemAt(i);\r\n            var row = rowPair_1.second;\r\n            var coeff = row.coefficientFor(marker);\r\n            if (coeff !== 0.0 &&\r\n                row.add(delta * coeff) < 0.0 &&\r\n                rowPair_1.first.type() !== SymbolType.External) {\r\n                this._infeasibleRows.push(rowPair_1.first);\r\n            }\r\n        }\r\n        this._dualOptimize();\r\n    };\r\n    /**\r\n     * Update the values of the variables.\r\n     */\r\n    Solver.prototype.updateVariables = function () {\r\n        var vars = this._varMap;\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = vars.size(); i < n; ++i) {\r\n            var pair = vars.itemAt(i);\r\n            var rowPair = rows.find(pair.second);\r\n            if (rowPair !== undefined) {\r\n                pair.first.setValue(rowPair.second.constant());\r\n            }\r\n            else {\r\n                pair.first.setValue(0.0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get the symbol for the given variable.\r\n     *\r\n     * If a symbol does not exist for the variable, one will be created.\r\n     * @private\r\n     */\r\n    Solver.prototype._getVarSymbol = function (variable) {\r\n        var _this = this;\r\n        var factory = function () { return _this._makeSymbol(SymbolType.External); };\r\n        return this._varMap.setDefault(variable, factory).second;\r\n    };\r\n    /**\r\n     * Create a new Row object for the given constraint.\r\n     *\r\n     * The terms in the constraint will be converted to cells in the row.\r\n     * Any term in the constraint with a coefficient of zero is ignored.\r\n     * This method uses the `_getVarSymbol` method to get the symbol for\r\n     * the variables added to the row. If the symbol for a given cell\r\n     * variable is basic, the cell variable will be substituted with the\r\n     * basic row.\r\n     *\r\n     * The necessary slack and error variables will be added to the row.\r\n     * If the constant for the row is negative, the sign for the row\r\n     * will be inverted so the constant becomes positive.\r\n     *\r\n     * Returns the created Row and the tag for tracking the constraint.\r\n     * @private\r\n     */\r\n    Solver.prototype._createRow = function (constraint) {\r\n        var expr = constraint.expression();\r\n        var row = new Row(expr.constant());\r\n        // Substitute the current basic variables into the row.\r\n        var terms = expr.terms();\r\n        for (var i = 0, n = terms.size(); i < n; ++i) {\r\n            var termPair = terms.itemAt(i);\r\n            if (!nearZero(termPair.second)) {\r\n                var symbol = this._getVarSymbol(termPair.first);\r\n                var basicPair = this._rowMap.find(symbol);\r\n                if (basicPair !== undefined) {\r\n                    row.insertRow(basicPair.second, termPair.second);\r\n                }\r\n                else {\r\n                    row.insertSymbol(symbol, termPair.second);\r\n                }\r\n            }\r\n        }\r\n        // Add the necessary slack, error, and dummy variables.\r\n        var objective = this._objective;\r\n        var strength = constraint.strength();\r\n        var tag = { marker: INVALID_SYMBOL, other: INVALID_SYMBOL };\r\n        switch (constraint.op()) {\r\n            case constraint_1.Operator.Le:\r\n            case constraint_1.Operator.Ge: {\r\n                var coeff = constraint.op() === constraint_1.Operator.Le ? 1.0 : -1.0;\r\n                var slack = this._makeSymbol(SymbolType.Slack);\r\n                tag.marker = slack;\r\n                row.insertSymbol(slack, coeff);\r\n                if (strength < strength_1.Strength.required) {\r\n                    var error = this._makeSymbol(SymbolType.Error);\r\n                    tag.other = error;\r\n                    row.insertSymbol(error, -coeff);\r\n                    objective.insertSymbol(error, strength);\r\n                }\r\n                break;\r\n            }\r\n            case constraint_1.Operator.Eq: {\r\n                if (strength < strength_1.Strength.required) {\r\n                    var errplus = this._makeSymbol(SymbolType.Error);\r\n                    var errminus = this._makeSymbol(SymbolType.Error);\r\n                    tag.marker = errplus;\r\n                    tag.other = errminus;\r\n                    row.insertSymbol(errplus, -1.0); // v = eplus - eminus\r\n                    row.insertSymbol(errminus, 1.0); // v - eplus + eminus = 0\r\n                    objective.insertSymbol(errplus, strength);\r\n                    objective.insertSymbol(errminus, strength);\r\n                }\r\n                else {\r\n                    var dummy = this._makeSymbol(SymbolType.Dummy);\r\n                    tag.marker = dummy;\r\n                    row.insertSymbol(dummy);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // Ensure the row has a positive constant.\r\n        if (row.constant() < 0.0) {\r\n            row.reverseSign();\r\n        }\r\n        return { row: row, tag: tag };\r\n    };\r\n    /**\r\n     * Choose the subject for solving for the row.\r\n     *\r\n     * This method will choose the best subject for using as the solve\r\n     * target for the row. An invalid symbol will be returned if there\r\n     * is no valid target.\r\n     *\r\n     * The symbols are chosen according to the following precedence:\r\n     *\r\n     * 1) The first symbol representing an external variable.\r\n     * 2) A negative slack or error tag variable.\r\n     *\r\n     * If a subject cannot be found, an invalid symbol will be returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._chooseSubject = function (row, tag) {\r\n        var cells = row.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            if (pair.first.type() === SymbolType.External) {\r\n                return pair.first;\r\n            }\r\n        }\r\n        var type = tag.marker.type();\r\n        if (type === SymbolType.Slack || type === SymbolType.Error) {\r\n            if (row.coefficientFor(tag.marker) < 0.0) {\r\n                return tag.marker;\r\n            }\r\n        }\r\n        type = tag.other.type();\r\n        if (type === SymbolType.Slack || type === SymbolType.Error) {\r\n            if (row.coefficientFor(tag.other) < 0.0) {\r\n                return tag.other;\r\n            }\r\n        }\r\n        return INVALID_SYMBOL;\r\n    };\r\n    /**\r\n     * Add the row to the tableau using an artificial variable.\r\n     *\r\n     * This will return false if the constraint cannot be satisfied.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._addWithArtificialVariable = function (row) {\r\n        // Create and add the artificial variable to the tableau.\r\n        var art = this._makeSymbol(SymbolType.Slack);\r\n        this._rowMap.insert(art, row.copy());\r\n        this._artificial = row.copy();\r\n        // Optimize the artificial objective. This is successful\r\n        // only if the artificial objective is optimized to zero.\r\n        this._optimize(this._artificial);\r\n        var success = nearZero(this._artificial.constant());\r\n        this._artificial = null;\r\n        // If the artificial variable is basic, pivot the row so that\r\n        // it becomes non-basic. If the row is constant, exit early.\r\n        var pair = this._rowMap.erase(art);\r\n        if (pair !== undefined) {\r\n            var basicRow = pair.second;\r\n            if (basicRow.isConstant()) {\r\n                return success;\r\n            }\r\n            var entering = this._anyPivotableSymbol(basicRow);\r\n            if (entering.type() === SymbolType.Invalid) {\r\n                return false; // unsatisfiable (will this ever happen?)\r\n            }\r\n            basicRow.solveForEx(art, entering);\r\n            this._substitute(entering, basicRow);\r\n            this._rowMap.insert(entering, basicRow);\r\n        }\r\n        // Remove the artificial variable from the tableau.\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            rows.itemAt(i).second.removeSymbol(art);\r\n        }\r\n        this._objective.removeSymbol(art);\r\n        return success;\r\n    };\r\n    /**\r\n     * Substitute the parametric symbol with the given row.\r\n     *\r\n     * This method will substitute all instances of the parametric symbol\r\n     * in the tableau and the objective function with the given row.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._substitute = function (symbol, row) {\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var pair = rows.itemAt(i);\r\n            pair.second.substitute(symbol, row);\r\n            if (pair.second.constant() < 0.0 &&\r\n                pair.first.type() !== SymbolType.External) {\r\n                this._infeasibleRows.push(pair.first);\r\n            }\r\n        }\r\n        this._objective.substitute(symbol, row);\r\n        if (this._artificial) {\r\n            this._artificial.substitute(symbol, row);\r\n        }\r\n    };\r\n    /**\r\n     * Optimize the system for the given objective function.\r\n     *\r\n     * This method performs iterations of Phase 2 of the simplex method\r\n     * until the objective function reaches a minimum.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._optimize = function (objective) {\r\n        while (true) {\r\n            var entering = this._getEnteringSymbol(objective);\r\n            if (entering.type() === SymbolType.Invalid) {\r\n                return;\r\n            }\r\n            var leaving = this._getLeavingSymbol(entering);\r\n            if (leaving.type() === SymbolType.Invalid) {\r\n                throw new Error('the objective is unbounded');\r\n            }\r\n            // pivot the entering symbol into the basis\r\n            var row = this._rowMap.erase(leaving).second;\r\n            row.solveForEx(leaving, entering);\r\n            this._substitute(entering, row);\r\n            this._rowMap.insert(entering, row);\r\n        }\r\n    };\r\n    /**\r\n     * Optimize the system using the dual of the simplex method.\r\n     *\r\n     * The current state of the system should be such that the objective\r\n     * function is optimal, but not feasible. This method will perform\r\n     * an iteration of the dual simplex method to make the solution both\r\n     * optimal and feasible.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._dualOptimize = function () {\r\n        var rows = this._rowMap;\r\n        var infeasible = this._infeasibleRows;\r\n        while (infeasible.length !== 0) {\r\n            var leaving = infeasible.pop();\r\n            var pair = rows.find(leaving);\r\n            if (pair !== undefined && pair.second.constant() < 0.0) {\r\n                var entering = this._getDualEnteringSymbol(pair.second);\r\n                if (entering.type() === SymbolType.Invalid) {\r\n                    throw new Error('dual optimize failed');\r\n                }\r\n                // pivot the entering symbol into the basis\r\n                var row = pair.second;\r\n                rows.erase(leaving);\r\n                row.solveForEx(leaving, entering);\r\n                this._substitute(entering, row);\r\n                rows.insert(entering, row);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Compute the entering variable for a pivot operation.\r\n     *\r\n     * This method will return first symbol in the objective function which\r\n     * is non-dummy and has a coefficient less than zero. If no symbol meets\r\n     * the criteria, it means the objective function is at a minimum, and an\r\n     * invalid symbol is returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getEnteringSymbol = function (objective) {\r\n        var cells = objective.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            var symbol = pair.first;\r\n            if (pair.second < 0.0 && symbol.type() !== SymbolType.Dummy) {\r\n                return symbol;\r\n            }\r\n        }\r\n        return INVALID_SYMBOL;\r\n    };\r\n    /**\r\n     * Compute the entering symbol for the dual optimize operation.\r\n     *\r\n     * This method will return the symbol in the row which has a positive\r\n     * coefficient and yields the minimum ratio for its respective symbol\r\n     * in the objective function. The provided row *must* be infeasible.\r\n     * If no symbol is found which meats the criteria, an invalid symbol\r\n     * is returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getDualEnteringSymbol = function (row) {\r\n        var ratio = Number.MAX_VALUE;\r\n        var entering = INVALID_SYMBOL;\r\n        var cells = row.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            var symbol = pair.first;\r\n            var c = pair.second;\r\n            if (c > 0.0 && symbol.type() !== SymbolType.Dummy) {\r\n                var coeff = this._objective.coefficientFor(symbol);\r\n                var r = coeff / c;\r\n                if (r < ratio) {\r\n                    ratio = r;\r\n                    entering = symbol;\r\n                }\r\n            }\r\n        }\r\n        return entering;\r\n    };\r\n    /**\r\n     * Compute the symbol for pivot exit row.\r\n     *\r\n     * This method will return the symbol for the exit row in the row\r\n     * map. If no appropriate exit symbol is found, an invalid symbol\r\n     * will be returned. This indicates that the objective function is\r\n     * unbounded.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getLeavingSymbol = function (entering) {\r\n        var ratio = Number.MAX_VALUE;\r\n        var found = INVALID_SYMBOL;\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var pair = rows.itemAt(i);\r\n            var symbol = pair.first;\r\n            if (symbol.type() !== SymbolType.External) {\r\n                var row = pair.second;\r\n                var temp = row.coefficientFor(entering);\r\n                if (temp < 0.0) {\r\n                    var temp_ratio = -row.constant() / temp;\r\n                    if (temp_ratio < ratio) {\r\n                        ratio = temp_ratio;\r\n                        found = symbol;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    /**\r\n     * Compute the leaving symbol for a marker variable.\r\n     *\r\n     * This method will return a symbol corresponding to a basic row\r\n     * which holds the given marker variable. The row will be chosen\r\n     * according to the following precedence:\r\n     *\r\n     * 1) The row with a restricted basic varible and a negative coefficient\r\n     *    for the marker with the smallest ratio of -constant / coefficient.\r\n     *\r\n     * 2) The row with a restricted basic variable and the smallest ratio\r\n     *    of constant / coefficient.\r\n     *\r\n     * 3) The last unrestricted row which contains the marker.\r\n     *\r\n     * If the marker does not exist in any row, an invalid symbol will be\r\n     * returned. This indicates an internal solver error since the marker\r\n     * *should* exist somewhere in the tableau.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._getMarkerLeavingSymbol = function (marker) {\r\n        var dmax = Number.MAX_VALUE;\r\n        var r1 = dmax;\r\n        var r2 = dmax;\r\n        var invalid = INVALID_SYMBOL;\r\n        var first = invalid;\r\n        var second = invalid;\r\n        var third = invalid;\r\n        var rows = this._rowMap;\r\n        for (var i = 0, n = rows.size(); i < n; ++i) {\r\n            var pair = rows.itemAt(i);\r\n            var row = pair.second;\r\n            var c = row.coefficientFor(marker);\r\n            if (c === 0.0) {\r\n                continue;\r\n            }\r\n            var symbol = pair.first;\r\n            if (symbol.type() === SymbolType.External) {\r\n                third = symbol;\r\n            }\r\n            else if (c < 0.0) {\r\n                var r = -row.constant() / c;\r\n                if (r < r1) {\r\n                    r1 = r;\r\n                    first = symbol;\r\n                }\r\n            }\r\n            else {\r\n                var r = row.constant() / c;\r\n                if (r < r2) {\r\n                    r2 = r;\r\n                    second = symbol;\r\n                }\r\n            }\r\n        }\r\n        if (first !== invalid) {\r\n            return first;\r\n        }\r\n        if (second !== invalid) {\r\n            return second;\r\n        }\r\n        return third;\r\n    };\r\n    /**\r\n     * Remove the effects of a constraint on the objective function.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._removeConstraintEffects = function (cn, tag) {\r\n        if (tag.marker.type() === SymbolType.Error) {\r\n            this._removeMarkerEffects(tag.marker, cn.strength());\r\n        }\r\n        if (tag.other.type() === SymbolType.Error) {\r\n            this._removeMarkerEffects(tag.other, cn.strength());\r\n        }\r\n    };\r\n    /**\r\n     * Remove the effects of an error marker on the objective function.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._removeMarkerEffects = function (marker, strength) {\r\n        var pair = this._rowMap.find(marker);\r\n        if (pair !== undefined) {\r\n            this._objective.insertRow(pair.second, -strength);\r\n        }\r\n        else {\r\n            this._objective.insertSymbol(marker, -strength);\r\n        }\r\n    };\r\n    /**\r\n     * Get the first Slack or Error symbol in the row.\r\n     *\r\n     * If no such symbol is present, an invalid symbol will be returned.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._anyPivotableSymbol = function (row) {\r\n        var cells = row.cells();\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            var type = pair.first.type();\r\n            if (type === SymbolType.Slack || type === SymbolType.Error) {\r\n                return pair.first;\r\n            }\r\n        }\r\n        return INVALID_SYMBOL;\r\n    };\r\n    /**\r\n     * Returns a new Symbol of the given type.\r\n     *\r\n     * @private\r\n     */\r\n    Solver.prototype._makeSymbol = function (type) {\r\n        return new Symbol(type, this._idTick++);\r\n    };\r\n    return Solver;\r\n}());\r\nexports.Solver = Solver;\r\n/**\r\n * Test whether a value is approximately zero.\r\n * @private\r\n */\r\nfunction nearZero(value) {\r\n    var eps = 1.0e-8;\r\n    return value < 0.0 ? -value < eps : value < eps;\r\n}\r\n/**\r\n * An internal function for creating a constraint map.\r\n * @private\r\n */\r\nfunction createCnMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An internal function for creating a row map.\r\n * @private\r\n */\r\nfunction createRowMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An internal function for creating a variable map.\r\n * @private\r\n */\r\nfunction createVarMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An internal function for creating an edit map.\r\n * @private\r\n */\r\nfunction createEditMap() {\r\n    return maptype_1.createMap();\r\n}\r\n/**\r\n * An enum defining the available symbol types.\r\n * @private\r\n */\r\nvar SymbolType;\r\n(function (SymbolType) {\r\n    SymbolType[SymbolType[\"Invalid\"] = 0] = \"Invalid\";\r\n    SymbolType[SymbolType[\"External\"] = 1] = \"External\";\r\n    SymbolType[SymbolType[\"Slack\"] = 2] = \"Slack\";\r\n    SymbolType[SymbolType[\"Error\"] = 3] = \"Error\";\r\n    SymbolType[SymbolType[\"Dummy\"] = 4] = \"Dummy\";\r\n})(SymbolType || (SymbolType = {}));\r\n/**\r\n * An internal class representing a symbol in the solver.\r\n * @private\r\n */\r\nvar Symbol = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Symbol\r\n     *\r\n     * @param [type] The type of the symbol.\r\n     * @param [id] The unique id number of the symbol.\r\n     */\r\n    function Symbol(type, id) {\r\n        this._id = id;\r\n        this._type = type;\r\n    }\r\n    /**\r\n     * Returns the unique id number of the symbol.\r\n     */\r\n    Symbol.prototype.id = function () {\r\n        return this._id;\r\n    };\r\n    /**\r\n     * Returns the type of the symbol.\r\n     */\r\n    Symbol.prototype.type = function () {\r\n        return this._type;\r\n    };\r\n    return Symbol;\r\n}());\r\n/**\r\n * A static invalid symbol\r\n * @private\r\n */\r\nvar INVALID_SYMBOL = new Symbol(SymbolType.Invalid, -1);\r\n/**\r\n * An internal row class used by the solver.\r\n * @private\r\n */\r\nvar Row = /** @class */ (function () {\r\n    /**\r\n     * Construct a new Row.\r\n     */\r\n    function Row(constant) {\r\n        if (constant === void 0) { constant = 0.0; }\r\n        this._cellMap = maptype_1.createMap();\r\n        this._constant = constant;\r\n    }\r\n    /**\r\n     * Returns the mapping of symbols to coefficients.\r\n     */\r\n    Row.prototype.cells = function () {\r\n        return this._cellMap;\r\n    };\r\n    /**\r\n     * Returns the constant for the row.\r\n     */\r\n    Row.prototype.constant = function () {\r\n        return this._constant;\r\n    };\r\n    /**\r\n     * Returns true if the row is a constant value.\r\n     */\r\n    Row.prototype.isConstant = function () {\r\n        return this._cellMap.empty();\r\n    };\r\n    /**\r\n     * Returns true if the Row has all dummy symbols.\r\n     */\r\n    Row.prototype.allDummies = function () {\r\n        var cells = this._cellMap;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            if (pair.first.type() !== SymbolType.Dummy) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Create a copy of the row.\r\n     */\r\n    Row.prototype.copy = function () {\r\n        var theCopy = new Row(this._constant);\r\n        theCopy._cellMap = this._cellMap.copy();\r\n        return theCopy;\r\n    };\r\n    /**\r\n     * Add a constant value to the row constant.\r\n     *\r\n     * Returns the new value of the constant.\r\n     */\r\n    Row.prototype.add = function (value) {\r\n        return (this._constant += value);\r\n    };\r\n    /**\r\n     * Insert the symbol into the row with the given coefficient.\r\n     *\r\n     * If the symbol already exists in the row, the coefficient\r\n     * will be added to the existing coefficient. If the resulting\r\n     * coefficient is zero, the symbol will be removed from the row.\r\n     */\r\n    Row.prototype.insertSymbol = function (symbol, coefficient) {\r\n        if (coefficient === void 0) { coefficient = 1.0; }\r\n        var pair = this._cellMap.setDefault(symbol, function () { return 0.0; });\r\n        if (nearZero((pair.second += coefficient))) {\r\n            this._cellMap.erase(symbol);\r\n        }\r\n    };\r\n    /**\r\n     * Insert a row into this row with a given coefficient.\r\n     *\r\n     * The constant and the cells of the other row will be\r\n     * multiplied by the coefficient and added to this row. Any\r\n     * cell with a resulting coefficient of zero will be removed\r\n     * from the row.\r\n     */\r\n    Row.prototype.insertRow = function (other, coefficient) {\r\n        if (coefficient === void 0) { coefficient = 1.0; }\r\n        this._constant += other._constant * coefficient;\r\n        var cells = other._cellMap;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            this.insertSymbol(pair.first, pair.second * coefficient);\r\n        }\r\n    };\r\n    /**\r\n     * Remove a symbol from the row.\r\n     */\r\n    Row.prototype.removeSymbol = function (symbol) {\r\n        this._cellMap.erase(symbol);\r\n    };\r\n    /**\r\n     * Reverse the sign of the constant and cells in the row.\r\n     */\r\n    Row.prototype.reverseSign = function () {\r\n        this._constant = -this._constant;\r\n        var cells = this._cellMap;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            var pair = cells.itemAt(i);\r\n            pair.second = -pair.second;\r\n        }\r\n    };\r\n    /**\r\n     * Solve the row for the given symbol.\r\n     *\r\n     * This method assumes the row is of the form\r\n     * a * x + b * y + c = 0 and (assuming solve for x) will modify\r\n     * the row to represent the right hand side of\r\n     * x = -b/a * y - c / a. The target symbol will be removed from\r\n     * the row, and the constant and other cells will be multiplied\r\n     * by the negative inverse of the target coefficient.\r\n     *\r\n     * The given symbol *must* exist in the row.\r\n     */\r\n    Row.prototype.solveFor = function (symbol) {\r\n        var cells = this._cellMap;\r\n        var pair = cells.erase(symbol);\r\n        var coeff = -1.0 / pair.second;\r\n        this._constant *= coeff;\r\n        for (var i = 0, n = cells.size(); i < n; ++i) {\r\n            cells.itemAt(i).second *= coeff;\r\n        }\r\n    };\r\n    /**\r\n     * Solve the row for the given symbols.\r\n     *\r\n     * This method assumes the row is of the form\r\n     * x = b * y + c and will solve the row such that\r\n     * y = x / b - c / b. The rhs symbol will be removed from the\r\n     * row, the lhs added, and the result divided by the negative\r\n     * inverse of the rhs coefficient.\r\n     *\r\n     * The lhs symbol *must not* exist in the row, and the rhs\r\n     * symbol must* exist in the row.\r\n     */\r\n    Row.prototype.solveForEx = function (lhs, rhs) {\r\n        this.insertSymbol(lhs, -1.0);\r\n        this.solveFor(rhs);\r\n    };\r\n    /**\r\n     * Returns the coefficient for the given symbol.\r\n     */\r\n    Row.prototype.coefficientFor = function (symbol) {\r\n        var pair = this._cellMap.find(symbol);\r\n        return pair !== undefined ? pair.second : 0.0;\r\n    };\r\n    /**\r\n     * Substitute a symbol with the data from another row.\r\n     *\r\n     * Given a row of the form a * x + b and a substitution of the\r\n     * form x = 3 * y + c the row will be updated to reflect the\r\n     * expression 3 * a * y + a * c + b.\r\n     *\r\n     * If the symbol does not exist in the row, this is a no-op.\r\n     */\r\n    Row.prototype.substitute = function (symbol, row) {\r\n        var pair = this._cellMap.erase(symbol);\r\n        if (pair !== undefined) {\r\n            this.insertRow(row, pair.second);\r\n        }\r\n    };\r\n    return Row;\r\n}());\r\n//# sourceMappingURL=solver.js.map","import * as React from 'react';\r\n\r\n// const { useState, useEffect } = React;\r\n\r\ntype Props = {\r\n  child: React.ReactNode;\r\n  style: React.CSSProperties;\r\n};\r\n\r\nexport const SplitPane: React.FC<Props> = ({ style, child }) => {\r\n  //   const [collapsed, setCollapsed] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {};\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={'split-pane'} style={style}>\r\n      {child}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { SplitOrientation } from './Split';\r\n\r\nconst { useEffect } = React;\r\n\r\ntype Props = {\r\n  orientation: SplitOrientation;\r\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n};\r\n\r\nexport const Resizer: React.FC<Props> = ({ orientation, onMouseDown }) => {\r\n  useEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  let resizerClassName = 'resizer';\r\n  const isHorizontal = orientation === SplitOrientation.Horizontal;\r\n  if (isHorizontal) {\r\n    resizerClassName += ' horizontal';\r\n  } else {\r\n    resizerClassName += ' vertical';\r\n  }\r\n\r\n  return <div className={resizerClassName} onMouseDown={onMouseDown} />;\r\n};\r\n"],"sourceRoot":""}